<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="a00071" kind="file" language="C++">
    <compoundname>eigendunetransformations.hh</compoundname>
    <includes local="no">assert.h</includes>
    <includes local="no">dune/common/diagonalmatrix.hh</includes>
    <includes local="no">dune/common/fmatrix.hh</includes>
    <includes local="no">dune/common/fvector.hh</includes>
    <includes local="no">dune/istl/scaledidmatrix.hh</includes>
    <includes local="no">Eigen/Core</includes>
    <includedby refid="a00290" local="no">nonlinearelastic.hh</includedby>
    <incdepgraph>
      <node id="1">
        <label>eigendunetransformations.hh</label>
        <link refid="a00071"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>Eigen/Core</label>
      </node>
      <node id="2">
        <label>assert.h</label>
      </node>
      <node id="3">
        <label>dune/common/diagonalmatrix.hh</label>
      </node>
      <node id="4">
        <label>dune/common/fmatrix.hh</label>
      </node>
      <node id="5">
        <label>dune/common/fvector.hh</label>
      </node>
      <node id="6">
        <label>dune/istl/scaledidmatrix.hh</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>nonlinearelastic.hh</label>
        <link refid="a00290"/>
      </node>
      <node id="1">
        <label>eigendunetransformations.hh</label>
        <link refid="a00071"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innernamespace refid="a00411">Ikarus</innernamespace>
    <briefdescription>
<para>Helper for transform between <ref refid="a00434" kindref="compound">Dune</ref> linear algebra types and <ref refid="a00427" kindref="compound">Eigen</ref>. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>SPDX-FileCopyrightText:<sp/>2021-2025<sp/>The<sp/>Ikarus<sp/>Developers<sp/>mueller@ibb.uni-stuttgart.de</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>SPDX-License-Identifier:<sp/>LGPL-3.0-or-later</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;assert.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;dune/common/diagonalmatrix.hh&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;dune/common/fmatrix.hh&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;dune/common/fvector.hh&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;dune/istl/scaledidmatrix.hh&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;Eigen/Core&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="a00411" kindref="compound">Ikarus</ref><sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ST,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size&gt;</highlight></codeline>
<codeline lineno="30" refid="a00411_1a0fdba7f3ebe4bf1ada6618f450b50221" refkind="member"><highlight class="normal"><ref refid="a01910" kindref="compound">Dune::FieldVector&lt;ST, size&gt;</ref><sp/><ref refid="a00411_1a0fdba7f3ebe4bf1ada6618f450b50221" kindref="member">toDune</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::Vector&lt;ST,<sp/>size&gt;&amp;<sp/>vec)<sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><ref refid="a01910" kindref="compound">Dune::FieldVector&lt;ST, size&gt;</ref><sp/>fieldVector;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>size;<sp/>++i)</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>fieldVector[i]<sp/>=<sp/>vec[i];</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fieldVector;</highlight></codeline>
<codeline lineno="35"><highlight class="normal">}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ST,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rows&gt;</highlight></codeline>
<codeline lineno="47" refid="a00411_1a4e9e21776afdaaa93c4a9d19554976fa" refkind="member"><highlight class="normal"><ref refid="a01910" kindref="compound">Dune::FieldVector&lt;ST, rows&gt;</ref><sp/><ref refid="a00411_1a0fdba7f3ebe4bf1ada6618f450b50221" kindref="member">toDune</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::Matrix&lt;ST,<sp/>rows,<sp/>0&gt;&amp;<sp/>vec)<sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/>assert(vec.cols()<sp/>==<sp/>1<sp/>&amp;&amp;<sp/></highlight><highlight class="stringliteral">&quot;The<sp/>passed<sp/>matrix<sp/>needs<sp/>to<sp/>have<sp/>a<sp/>single<sp/>column.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><ref refid="a01910" kindref="compound">Dune::FieldVector&lt;ST, rows&gt;</ref><sp/>fieldVector{0.0};</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>vec.rows();<sp/>++i)</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>fieldVector[i]<sp/>=<sp/>vec(i,<sp/>0);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fieldVector;</highlight></codeline>
<codeline lineno="54"><highlight class="normal">}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ST,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rows,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cols&gt;</highlight></codeline>
<codeline lineno="66" refid="a00411_1a83633e77ee5a35cb31a7cd2f02aedb7f" refkind="member"><highlight class="normal">Dune::FieldMatrix&lt;ST,<sp/>rows,<sp/>cols&gt;<sp/><ref refid="a00411_1a0fdba7f3ebe4bf1ada6618f450b50221" kindref="member">toDune</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::Matrix&lt;ST,<sp/>rows,<sp/>cols&gt;&amp;<sp/>mat)<sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/>Dune::FieldMatrix&lt;ST,<sp/>rows,<sp/>cols&gt;<sp/>fieldMatrix{0.0};</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>mat.rows();<sp/>++i)</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>mat.cols();<sp/>++j)</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fieldMatrix[i][j]<sp/>=<sp/>mat(i,<sp/>j);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fieldMatrix;</highlight></codeline>
<codeline lineno="73"><highlight class="normal">}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ST,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size&gt;</highlight></codeline>
<codeline lineno="83" refid="a00411_1aaa7e8e9b8bd8247afecc24cdd54ec658" refkind="member"><highlight class="normal">Eigen::Map&lt;const<sp/>Eigen::Vector&lt;ST,<sp/>size&gt;&gt;<sp/><ref refid="a00411_1aaa7e8e9b8bd8247afecc24cdd54ec658" kindref="member">toEigenMap</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="a01910" kindref="compound">Dune::FieldVector&lt;ST, size&gt;</ref>&amp;<sp/>vec)<sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{vec.data(),<sp/>size};</highlight></codeline>
<codeline lineno="85"><highlight class="normal">}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ST,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size&gt;</highlight></codeline>
<codeline lineno="95" refid="a00411_1aaac71220182c301ee8c864f2a507c3db" refkind="member"><highlight class="normal">Eigen::Map&lt;Eigen::Vector&lt;ST,<sp/>size&gt;&gt;<sp/><ref refid="a00411_1aaa7e8e9b8bd8247afecc24cdd54ec658" kindref="member">toEigenMap</ref>(<ref refid="a01910" kindref="compound">Dune::FieldVector&lt;ST, size&gt;</ref>&amp;<sp/>vec)<sp/>{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{vec.data(),<sp/>size};</highlight></codeline>
<codeline lineno="97"><highlight class="normal">}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>Ikarus</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/__w/ikarus/ikarus/repo/ikarus/utils/eigendunetransformations.hh"/>
  </compounddef>
</doxygen>
