<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="a00275" kind="file" language="C++">
    <compoundname>truss.hh</compoundname>
    <includes local="no">optional</includes>
    <includes local="no">dune/localfefunctions/eigenDuneTransformations.hh</includes>
    <includes refid="a00299" local="no">ikarus/finiteelements/fehelper.hh</includes>
    <includes refid="a00314" local="no">ikarus/finiteelements/ferequirements.hh</includes>
    <incdepgraph>
      <node id="18">
        <label>ikarus/assembler/dirichletbcenforcement.hh</label>
        <link refid="a00176"/>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>ikarus/finiteelements/fehelper.hh</label>
        <link refid="a00299"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>ikarus/finiteelements/ferequirements.hh</label>
        <link refid="a00314"/>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>ikarus/finiteelements/feresulttypes.hh</label>
        <link refid="a00305"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>ikarus/finiteelements/mechanics/materials/tags.hh</label>
        <link refid="a00242"/>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>truss.hh</label>
        <link refid="a00275"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>ikarus/utils/concepts.hh</label>
        <link refid="a00047"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>ikarus/utils/makeenum.hh</label>
        <link refid="a00005"/>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>ikarus/utils/math.hh</label>
        <link refid="a00038"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>ikarus/utils/tensorutils.hh</label>
        <link refid="a00032"/>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>ikarus/utils/traits.hh</label>
        <link refid="a00011"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>ikarus/utils/traversal.hh</label>
        <link refid="a00017"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>Eigen/Core</label>
      </node>
      <node id="15">
        <label>Eigen/Dense</label>
      </node>
      <node id="16">
        <label>Eigen/Sparse</label>
      </node>
      <node id="17">
        <label>autodiff/forward/dual/dual.hpp</label>
      </node>
      <node id="9">
        <label>concepts</label>
      </node>
      <node id="20">
        <label>dune/common/exceptions.hh</label>
      </node>
      <node id="24">
        <label>dune/common/hybridutilities.hh</label>
      </node>
      <node id="35">
        <label>dune/common/promotiontraits.hh</label>
      </node>
      <node id="13">
        <label>dune/functions/functionspacebases/basistags.hh</label>
      </node>
      <node id="14">
        <label>dune/functions/functionspacebases/lagrangebasis.hh</label>
      </node>
      <node id="3">
        <label>dune/localfefunctions/eigenDuneTransformations.hh</label>
      </node>
      <node id="6">
        <label>dune/localfefunctions/manifolds/realTuple.hh</label>
      </node>
      <node id="5">
        <label>functional</label>
      </node>
      <node id="26">
        <label>iosfwd</label>
      </node>
      <node id="27">
        <label>map</label>
      </node>
      <node id="32">
        <label>numeric</label>
      </node>
      <node id="2">
        <label>optional</label>
      </node>
      <node id="33">
        <label>ranges</label>
      </node>
      <node id="28">
        <label>set</label>
      </node>
      <node id="23">
        <label>tuple</label>
      </node>
      <node id="10">
        <label>type_traits</label>
      </node>
      <node id="34">
        <label>unsupported/Eigen/CXX11/Tensor</label>
      </node>
      <node id="11">
        <label>utility</label>
      </node>
      <node id="12">
        <label>vector</label>
      </node>
    </incdepgraph>
    <innerclass refid="a01536" prot="public">Ikarus::TrussPre</innerclass>
    <innerclass refid="a01532" prot="public">Ikarus::Truss</innerclass>
    <innerclass refid="a01540" prot="public">Ikarus::Truss::KinematicVariables</innerclass>
    <innernamespace refid="a00384">Ikarus</innernamespace>
    <briefdescription>
<para>Definition of the Truss class for finite element mechanics computations. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>SPDX-FileCopyrightText:<sp/>2021-2025<sp/>The<sp/>Ikarus<sp/>Developers<sp/>mueller@ibb.uni-stuttgart.de</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>SPDX-License-Identifier:<sp/>LGPL-3.0-or-later</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;optional&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;dune/localfefunctions/eigenDuneTransformations.hh&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="a00299" kindref="compound">ikarus/finiteelements/fehelper.hh</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="a00314" kindref="compound">ikarus/finiteelements/ferequirements.hh</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="a00384" kindref="compound">Ikarus</ref><sp/>{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>PreFE,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FE&gt;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Truss;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="27" refid="a01536" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="a01536" kindref="compound">TrussPre</ref></highlight></codeline>
<codeline lineno="28"><highlight class="normal">{</highlight></codeline>
<codeline lineno="29" refid="a01536_1ac9e7517a9be64fd9c743c1c11dfd30f9" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="a01536_1ac9e7517a9be64fd9c743c1c11dfd30f9" kindref="member">E</ref>;<sp/></highlight><highlight class="comment">//<sp/>Young&apos;s<sp/>modulus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="a01536_1adebed226744a01c44269cadd0bf9998f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="a01536_1adebed226744a01c44269cadd0bf9998f" kindref="member">A</ref>;<sp/></highlight><highlight class="comment">//<sp/>Cross-section<sp/>area</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>PreFE,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FE&gt;</highlight></codeline>
<codeline lineno="33" refid="a01536_1a3f0639915d0f7f93d3d939f301676545" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="a01532" kindref="compound">Skill</ref><sp/>=<sp/><ref refid="a01532" kindref="compound">Truss&lt;PreFE, FE&gt;</ref>;</highlight></codeline>
<codeline lineno="34"><highlight class="normal">};</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>PreFE,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FE&gt;</highlight></codeline>
<codeline lineno="45" refid="a01532" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="a01532" kindref="compound">Truss</ref></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="a01404" kindref="compound">ResultTypeBase</ref>&lt;ResultTypes::cauchyAxialForce,<sp/>ResultTypes::PK2AxialForce,<sp/>ResultTypes::linearAxialForce&gt;</highlight></codeline>
<codeline lineno="47"><highlight class="normal">{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="49" refid="a01532_1a654c3e629e27c55d748a00bdea36c3c8" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="a01408" kindref="compound">Traits</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="a01340_1a826c356a5afb013faffb5f7ac893cff4" kindref="member">PreFE::Traits</ref>;</highlight></codeline>
<codeline lineno="50" refid="a01532_1aa1f84ce75ed79a35a1f3daa0d7ecbb18" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="a01532_1aa1f84ce75ed79a35a1f3daa0d7ecbb18" kindref="member">BasisHandler</ref><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="a01408_1a129085c175bca28f94c71699b734ba04" kindref="member">Traits::BasisHandler</ref>;</highlight></codeline>
<codeline lineno="51" refid="a01532_1a6417a09910a66224d26c7436b478c0bb" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="a01532_1a6417a09910a66224d26c7436b478c0bb" kindref="member">FlatBasis</ref><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="a01408_1a81feef959fedef62b2e1daabbd52b5f2" kindref="member">Traits::FlatBasis</ref>;</highlight></codeline>
<codeline lineno="52" refid="a01532_1ac504734adac1da1bca9de8115550a74f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="a01368" kindref="compound">Requirement</ref><sp/>=</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="a01368" kindref="compound">FERequirementsFactory&lt;FESolutions::displacement, FEParameter::loadfactor, Traits::useEigenRef&gt;::type</ref>;</highlight></codeline>
<codeline lineno="54" refid="a01532_1a2fe6312a266dde582b526f80bab5513e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="a01532_1a2fe6312a266dde582b526f80bab5513e" kindref="member">LocalView</ref><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="a01408_1a06bdad066f621e46875af45a22677a3c" kindref="member">Traits::LocalView</ref>;</highlight></codeline>
<codeline lineno="55" refid="a01532_1a612cd26d67f7be9923188c46bfedeba3" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="a01532_1a612cd26d67f7be9923188c46bfedeba3" kindref="member">Geometry</ref><sp/><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="a01408_1a0b7be1104fba2d190e3fed46f291a851" kindref="member">Traits::Geometry</ref>;</highlight></codeline>
<codeline lineno="56" refid="a01532_1a703d7e18265f53bf4e24390a3123f24c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="a01532_1a703d7e18265f53bf4e24390a3123f24c" kindref="member">GridView</ref><sp/><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="a01408_1a3ec0294824df467074f5070cb58f5a91" kindref="member">Traits::GridView</ref>;</highlight></codeline>
<codeline lineno="57" refid="a01532_1ad953dbda6b497d1e6fe27405d2d74edd" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="a01532_1ad953dbda6b497d1e6fe27405d2d74edd" kindref="member">Element</ref><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="a01408_1ac4668b9c9142defdf3b70cca8eeb30c4" kindref="member">Traits::Element</ref>;</highlight></codeline>
<codeline lineno="58" refid="a01532_1ab3db78c617c0abe71269a2dfc156ea6e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="a01536" kindref="compound">Pre</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="a01536" kindref="compound">TrussPre</ref>;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60" refid="a01532_1ad0e7e96505e71d75eb2f64b079169acb" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="a01532_1ad0e7e96505e71d75eb2f64b079169acb" kindref="member">myDim</ref><sp/><sp/><sp/><sp/>=<sp/><ref refid="a01408_1ae15b8efa9f66a3caee81d99dd5c648de" kindref="member">Traits::mydim</ref>;</highlight></codeline>
<codeline lineno="61" refid="a01532_1a41e2a568f1739778e2277d5eec69cfce" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="a01532_1a41e2a568f1739778e2277d5eec69cfce" kindref="member">worldDim</ref><sp/>=<sp/><ref refid="a01408_1a5d611e1d48285bac5c5ebd6fda9c7cc7" kindref="member">Traits::worlddim</ref>;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static_assert</highlight><highlight class="normal">(<ref refid="a01532_1ad0e7e96505e71d75eb2f64b079169acb" kindref="member">myDim</ref><sp/>==<sp/>1,<sp/></highlight><highlight class="stringliteral">&quot;Truss<sp/>elements<sp/>should<sp/>have<sp/>myDim<sp/>==<sp/>1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ST&gt;</highlight></codeline>
<codeline lineno="73" refid="a01540" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="a01540" kindref="compound">KinematicVariables</ref></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="75" refid="a01540_1a05681746b98b7ea4259896cbd87727b5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="a01540_1a05681746b98b7ea4259896cbd87727b5" kindref="member">L</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="76" refid="a01540_1a507fe4fbad5adfb4df5f70e690987f27" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>ST<sp/><ref refid="a01540_1a507fe4fbad5adfb4df5f70e690987f27" kindref="member">l</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="77" refid="a01540_1a947ad2c350846f2abb6f94aff9106db7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>ST<sp/><ref refid="a01540_1a947ad2c350846f2abb6f94aff9106db7" kindref="member">Elin</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="78" refid="a01540_1a7d0090ec5c0de738cb936cf8b69d0985" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>ST<sp/><ref refid="a01540_1a7d0090ec5c0de738cb936cf8b69d0985" kindref="member">Egl</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="79" refid="a01540_1adad74786f3a49a82a7cd239aa3065bb0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::VectorX&lt;ST&gt;<sp/><ref refid="a01540_1adad74786f3a49a82a7cd239aa3065bb0" kindref="member">dEdu</ref>;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="80" refid="a01540_1a0647f4c61cc8ee370d1b3b795a48c8e6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::MatrixX&lt;ST&gt;<sp/><ref refid="a01540_1a0647f4c61cc8ee370d1b3b795a48c8e6" kindref="member">ddEddu</ref>;<sp/></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="87" refid="a01532_1a31c3128e6407c9b869b6eb4a3436aae6" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="a01532_1a31c3128e6407c9b869b6eb4a3436aae6" kindref="member">Truss</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="a01536" kindref="compound">Pre</ref>&amp;<sp/>pre)</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>E{pre.E},</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>A{pre.A}<sp/>{}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ST<sp/>=<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="100" refid="a01532_1af6a1883a353d39ea3aee75c1b5b59514" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="a01532_1af6a1883a353d39ea3aee75c1b5b59514" kindref="member">displacement</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="a01368" kindref="compound">Requirement</ref>&amp;<sp/>par,</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::optional&lt;std::reference_wrapper&lt;</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::VectorX&lt;ST&gt;&gt;&gt;&amp;<sp/>dx<sp/>=<sp/>std::nullopt)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>d<sp/>=<sp/>par.<ref refid="a01368_1a523ed390dfea00379b5b638e523ddb74" kindref="member">globalSolution</ref>();</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>disp<sp/><sp/><sp/><sp/><sp/>=<sp/>Ikarus::FEHelper::localSolutionBlockVector&lt;Traits&gt;(d,<sp/>underlying().localView(),<sp/>dx);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>disp;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>ST<sp/>=<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="117" refid="a01532_1aeab583c651a9704392133a98e58e6ad4" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="a01540" kindref="compound">KinematicVariables&lt;ST&gt;</ref><sp/><ref refid="a01532_1aeab583c651a9704392133a98e58e6ad4" kindref="member">computeStrain</ref>(</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="a01368" kindref="compound">Requirement</ref>&amp;<sp/>par,</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::optional&lt;std::reference_wrapper&lt;</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::VectorX&lt;ST&gt;&gt;&gt;&amp;<sp/>dx<sp/>=<sp/>std::nullopt)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="a01540" kindref="compound">KinematicVariables&lt;ST&gt;</ref><sp/>kin;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>localView<sp/><sp/><sp/><sp/>=<sp/>underlying().localView();</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>tree<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>localView.tree();</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>numberOfNodes<sp/>=<sp/>tree.child(0).finiteElement().size();</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>ele<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>localView.element();</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>X1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>Dune::toEigen(ele.geometry().corner(0));</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>X2<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>Dune::toEigen(ele.geometry().corner(1));</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>u<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="a00379_1gaf9d7cf401f9f03ce1aae728c646ce178" kindref="member">Dune::viewAsEigenMatrixAsDynFixed</ref>(<ref refid="a01532_1af6a1883a353d39ea3aee75c1b5b59514" kindref="member">displacement</ref>(par,<sp/>dx)).transpose().eval();</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>A1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>X2<sp/>-<sp/>X1;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ud1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>u.col(1)<sp/>-<sp/>u.col(0);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::Vector&lt;ST,<sp/>worldDim&gt;<sp/>x1<sp/>=<sp/>X1<sp/>+<sp/>u.col(0);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::Vector&lt;ST,<sp/>worldDim&gt;<sp/>x2<sp/>=<sp/>X2<sp/>+<sp/>u.col(1);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>Lsquared<sp/>=<sp/>A1.squaredNorm();</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ST<sp/>lsquared<sp/><sp/><sp/><sp/><sp/>=<sp/>(x2<sp/>-<sp/>x1).squaredNorm();</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>kin.<ref refid="a01540_1a05681746b98b7ea4259896cbd87727b5" kindref="member">L</ref><sp/>=<sp/>sqrt(Lsquared);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>kin.<ref refid="a01540_1a507fe4fbad5adfb4df5f70e690987f27" kindref="member">l</ref><sp/>=<sp/>sqrt(lsquared);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Linear<sp/>strain</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>kin.<ref refid="a01540_1a947ad2c350846f2abb6f94aff9106db7" kindref="member">Elin</ref><sp/>=<sp/>(kin.<ref refid="a01540_1a507fe4fbad5adfb4df5f70e690987f27" kindref="member">l</ref><sp/>-<sp/>kin.<ref refid="a01540_1a05681746b98b7ea4259896cbd87727b5" kindref="member">L</ref>)<sp/>/<sp/>kin.<ref refid="a01540_1a05681746b98b7ea4259896cbd87727b5" kindref="member">L</ref>;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Green-Lagrange<sp/>strains</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>kin.<ref refid="a01540_1a7d0090ec5c0de738cb936cf8b69d0985" kindref="member">Egl</ref><sp/>=<sp/>0.5<sp/>*<sp/>(lsquared<sp/>-<sp/>Lsquared)<sp/>/<sp/>Lsquared;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>First<sp/>derivative<sp/>of<sp/>Egl<sp/>w.r.t<sp/>displacements</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>kin.<ref refid="a01540_1adad74786f3a49a82a7cd239aa3065bb0" kindref="member">dEdu</ref>.setZero(<ref refid="a01532_1a41e2a568f1739778e2277d5eec69cfce" kindref="member">worldDim</ref><sp/>*<sp/>numberOfNodes);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>kin.<ref refid="a01540_1adad74786f3a49a82a7cd239aa3065bb0" kindref="member">dEdu</ref><sp/>&lt;&lt;<sp/>-A1<sp/>-<sp/>ud1,<sp/>A1<sp/>+<sp/>ud1;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>kin.<ref refid="a01540_1adad74786f3a49a82a7cd239aa3065bb0" kindref="member">dEdu</ref><sp/>/=<sp/>Lsquared;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Second<sp/>derivative<sp/>of<sp/>Egl<sp/>w.r.t<sp/>displacements</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>kin.<ref refid="a01540_1a0647f4c61cc8ee370d1b3b795a48c8e6" kindref="member">ddEddu</ref>.setIdentity(<ref refid="a01532_1a41e2a568f1739778e2277d5eec69cfce" kindref="member">worldDim</ref><sp/>*<sp/>numberOfNodes,<sp/><ref refid="a01532_1a41e2a568f1739778e2277d5eec69cfce" kindref="member">worldDim</ref><sp/>*<sp/>numberOfNodes);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>kin.<ref refid="a01540_1a0647f4c61cc8ee370d1b3b795a48c8e6" kindref="member">ddEddu</ref>.template<sp/>topRightCorner&lt;worldDim,<sp/>worldDim&gt;()<sp/><sp/><sp/>=<sp/>-Eigen::Matrix&lt;ST,<sp/>worldDim,<sp/>worldDim&gt;::Identity();</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>kin.<ref refid="a01540_1a0647f4c61cc8ee370d1b3b795a48c8e6" kindref="member">ddEddu</ref>.template<sp/>bottomLeftCorner&lt;worldDim,<sp/>worldDim&gt;()<sp/>=<sp/>-Eigen::Matrix&lt;ST,<sp/>worldDim,<sp/>worldDim&gt;::Identity();</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>kin.<ref refid="a01540_1a0647f4c61cc8ee370d1b3b795a48c8e6" kindref="member">ddEddu</ref><sp/>/=<sp/>Lsquared;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>kin;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">RT&gt;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">requires</highlight><highlight class="normal">(supportsResultType&lt;RT&gt;())</highlight></codeline>
<codeline lineno="173" refid="a01532_1a1e7e9cdb036a72153c163cb6e8fd2a18" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="a01532_1a1e7e9cdb036a72153c163cb6e8fd2a18" kindref="member">calculateAtImpl</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="a01368" kindref="compound">Requirement</ref>&amp;<sp/>req,<sp/>[[maybe_unused]]<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="a01784" kindref="compound">Dune::FieldVector&lt;double, Traits::mydim&gt;</ref>&amp;<sp/>local,</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Dune::PriorityTag&lt;0&gt;)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">RTWrapper<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="a01392" kindref="compound">ResultWrapper&lt;RT&lt;double, myDim, myDim&gt;</ref>,<sp/><ref refid="a00384_1acfb09bb7db104db62d3d1d2dc3e009b2a57dea6f5039281b7fee517fc43bf3110" kindref="member">ResultShape::Vector</ref>&gt;;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>[L,<sp/>l,<sp/>Elin,<sp/>Egl,<sp/>dEdu,<sp/>ddEddu]<sp/>=<sp/><ref refid="a01532_1aeab583c651a9704392133a98e58e6ad4" kindref="member">computeStrain</ref>(req);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>(isSameResultType&lt;RT,<sp/>ResultTypes::cauchyAxialForce&gt;)<sp/>{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>N<sp/>=<sp/>Eigen::Vector&lt;double,<sp/>1&gt;{E<sp/>*<sp/>A<sp/>*<sp/>Egl<sp/>*<sp/>l<sp/>/<sp/>L};<sp/></highlight><highlight class="comment">//<sp/>Axial<sp/>force<sp/>in<sp/>deformed<sp/>configuration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>RTWrapper{N};</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>(isSameResultType&lt;RT,<sp/>ResultTypes::PK2AxialForce&gt;)<sp/>{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>N<sp/>=<sp/>Eigen::Vector&lt;double,<sp/>1&gt;{E<sp/>*<sp/>A<sp/>*<sp/>Egl};<sp/></highlight><highlight class="comment">//<sp/>Axial<sp/>force<sp/>in<sp/>undeformed<sp/>configuration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>RTWrapper{N};</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>(isSameResultType&lt;RT,<sp/>ResultTypes::linearAxialForce&gt;)<sp/>{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>N<sp/>=<sp/>Eigen::Vector&lt;double,<sp/>1&gt;{E<sp/>*<sp/>A<sp/>*<sp/>Elin};</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>RTWrapper{N};</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//&gt;<sp/>CRTP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>underlying()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal"><ref refid="a01336" kindref="compound">FE</ref>&amp;</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(*this);<sp/>}</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>underlying()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">FE&amp;</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(*this);<sp/>}</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>E;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>A;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ScalarType&gt;</highlight></codeline>
<codeline lineno="201" refid="a01532_1a5955fba6251da3eda818f6c14ef5ca73" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="a01532_1a5955fba6251da3eda818f6c14ef5ca73" kindref="member">calculateMatrixImpl</ref>(</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="a01368" kindref="compound">Requirement</ref>&amp;<sp/>par,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="a00384_1a390d5311179ec61d163a29c943b3d1a0" kindref="member">MatrixAffordance</ref>&amp;<sp/>affordance,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Traits::template<sp/>MatrixType&lt;&gt;<sp/>K,</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::optional&lt;std::reference_wrapper&lt;</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::VectorX&lt;ScalarType&gt;&gt;&gt;&amp;<sp/>dx<sp/>=<sp/>std::nullopt)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>[L,<sp/>l,<sp/>Elin,<sp/>Egl,<sp/>dEdu,<sp/>ddEddu]<sp/>=<sp/><ref refid="a01532_1aeab583c651a9704392133a98e58e6ad4" kindref="member">computeStrain</ref>(par,<sp/>dx);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>K<sp/>+=<sp/>E<sp/>*<sp/>A<sp/>*<sp/>L<sp/>*<sp/>(dEdu<sp/>*<sp/>dEdu.transpose()<sp/>+<sp/>ddEddu<sp/>*<sp/>Egl);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ScalarType&gt;</highlight></codeline>
<codeline lineno="209" refid="a01532_1ad11254e9306f1a740bab191314ee3108" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="a01532_1ad11254e9306f1a740bab191314ee3108" kindref="member">calculateScalarImpl</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="a01368" kindref="compound">Requirement</ref>&amp;<sp/>par,<sp/><ref refid="a00384_1af6f894084edd9109762b86222995ef2a" kindref="member">ScalarAffordance</ref><sp/>affordance,</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::optional&lt;std::reference_wrapper&lt;</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::VectorX&lt;ScalarType&gt;&gt;&gt;&amp;<sp/>dx<sp/>=</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::nullopt)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>-&gt;<sp/>ScalarType<sp/>{</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>[L,<sp/>l,<sp/>Elin,<sp/>Egl,<sp/>dEdu,<sp/>ddEddu]<sp/>=<sp/><ref refid="a01532_1aeab583c651a9704392133a98e58e6ad4" kindref="member">computeStrain</ref>(par,<sp/>dx);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0.5<sp/>*<sp/>E<sp/>*<sp/>A<sp/>*<sp/>L<sp/>*<sp/>Egl<sp/>*<sp/>Egl;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ScalarType&gt;</highlight></codeline>
<codeline lineno="217" refid="a01532_1a1c9876db9b831de421fe04750e11d9ed" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="a01532_1a1c9876db9b831de421fe04750e11d9ed" kindref="member">calculateVectorImpl</ref>(</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="a01368" kindref="compound">Requirement</ref>&amp;<sp/>par,<sp/><ref refid="a00384_1aab9e3e38507d1db7602bc750718c302a" kindref="member">VectorAffordance</ref><sp/>affordance,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Traits::template<sp/>VectorType&lt;ScalarType&gt;<sp/>force,</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::optional&lt;std::reference_wrapper&lt;</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::VectorX&lt;ScalarType&gt;&gt;&gt;&amp;<sp/>dx<sp/>=<sp/>std::nullopt)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>[L,<sp/>l,<sp/>Elin,<sp/>Egl,<sp/>dEdu,<sp/>ddEddu]<sp/>=<sp/><ref refid="a01532_1aeab583c651a9704392133a98e58e6ad4" kindref="member">computeStrain</ref>(par,<sp/>dx);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/>force<sp/>+=<sp/>E<sp/>*<sp/>A<sp/>*<sp/>Egl<sp/>*<sp/>L<sp/>*<sp/>dEdu;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="223"><highlight class="normal">};</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="231" refid="a00384_1a1936b02a190200901c54cc8b1004506e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="a00384_1a1936b02a190200901c54cc8b1004506e" kindref="member">truss</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>E,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>A)<sp/>{</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><ref refid="a01536" kindref="compound">TrussPre</ref><sp/>pre(E,<sp/>A);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pre;</highlight></codeline>
<codeline lineno="235"><highlight class="normal">}</highlight></codeline>
<codeline lineno="236"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>Ikarus</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/truss.hh"/>
  </compounddef>
</doxygen>
