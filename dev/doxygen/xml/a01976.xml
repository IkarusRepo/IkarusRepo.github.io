<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="a01976" kind="concept">
    <compoundname>Ikarus::Concepts::VectorFlatAssembler</compoundname>
    <includes refid="a00047" local="no">ikarus/utils/concepts.hh</includes>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
    </templateparamlist>
    <initializer>template&lt;typename T&gt;
concept <ref refid="a01976" kindref="compound">Ikarus::Concepts::VectorFlatAssembler</ref> =  Concepts::ScalarFlatAssembler&lt;T&gt; and
                                requires(T t, const typename T::FERequirement&amp; req,
                                         typename T::AffordanceCollectionType affordance, DBCOption dbcOption) {
                                  {
                                    t.vector(req, affordance.vectorAffordance(), dbcOption)
                                  } -&gt; std::convertible_to&lt;const Eigen::VectorXd&amp;&gt;;
                                  { t.vector(dbcOption) } -&gt; std::convertible_to&lt;const Eigen::VectorXd&amp;&gt;;
                                  { t.vector() } -&gt; std::convertible_to&lt;const Eigen::VectorXd&amp;&gt;;
                                }    </initializer>
    <briefdescription>
<para>Concept representing the requirements for a VectorFlatAssembler.</para>
<para>A type T satisfies VectorFlatAssembler if it is a ScalarFlatAssembler and if it provides the necessary vector() member functions. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/__w/ikarus/ikarus/repo/ikarus/utils/concepts.hh" line="545" column="3"/>
  </compounddef>
</doxygen>
