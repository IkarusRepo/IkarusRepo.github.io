<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="a00422" kind="namespace" language="C++">
    <compoundname>Ikarus::Materials</compoundname>
    <innerclass refid="a01530" prot="public">Ikarus::Materials::ArrudaBoyceT</innerclass>
    <innerclass refid="a01534" prot="public">Ikarus::Materials::BlatzKoT</innerclass>
    <innerclass refid="a01550" prot="public">Ikarus::Materials::Deviatoric</innerclass>
    <innerclass refid="a01538" prot="public">Ikarus::Materials::DeviatoricInvariants</innerclass>
    <innerclass refid="a01546" prot="public">Ikarus::Materials::GentT</innerclass>
    <innerclass refid="a01562" prot="public">Ikarus::Materials::Hyperelastic</innerclass>
    <innerclass refid="a01554" prot="public">Ikarus::Materials::InvariantBasedT</innerclass>
    <innerclass refid="a01626" prot="public">Ikarus::Materials::LinearElasticityT</innerclass>
    <innerclass refid="a01622" prot="public">Ikarus::Materials::Material</innerclass>
    <innerclass refid="a01630" prot="public">Ikarus::Materials::MatrixIndexPair</innerclass>
    <innerclass refid="a01566" prot="public">Ikarus::Materials::NeoHookeT</innerclass>
    <innerclass refid="a01558" prot="public">Ikarus::Materials::OgdenT</innerclass>
    <innerclass refid="a01634" prot="public">Ikarus::Materials::StVenantKirchhoffT</innerclass>
    <innerclass refid="a01638" prot="public">Ikarus::Materials::VanishingStrain</innerclass>
    <innerclass refid="a01642" prot="public">Ikarus::Materials::VanishingStress</innerclass>
    <innerclass refid="a01574" prot="public">Ikarus::Materials::VF0</innerclass>
    <innerclass refid="a01578" prot="public">Ikarus::Materials::VF1</innerclass>
    <innerclass refid="a01614" prot="public">Ikarus::Materials::VF10</innerclass>
    <innerclass refid="a01618" prot="public">Ikarus::Materials::VF11</innerclass>
    <innerclass refid="a01582" prot="public">Ikarus::Materials::VF2</innerclass>
    <innerclass refid="a01586" prot="public">Ikarus::Materials::VF3</innerclass>
    <innerclass refid="a01590" prot="public">Ikarus::Materials::VF4</innerclass>
    <innerclass refid="a01594" prot="public">Ikarus::Materials::VF5</innerclass>
    <innerclass refid="a01598" prot="public">Ikarus::Materials::VF6</innerclass>
    <innerclass refid="a01602" prot="public">Ikarus::Materials::VF7</innerclass>
    <innerclass refid="a01606" prot="public">Ikarus::Materials::VF8</innerclass>
    <innerclass refid="a01610" prot="public">Ikarus::Materials::VF9</innerclass>
    <innerclass refid="a01570" prot="public">Ikarus::Materials::Volumetric</innerclass>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="a00422_1a70cada02f1f5f294f44c438fb1270982" prot="public" static="no">
        <type><ref refid="a01530" kindref="compound">ArrudaBoyceT</ref>&lt; double &gt;</type>
        <definition>using Ikarus::Materials::ArrudaBoyce = typedef ArrudaBoyceT&lt;double&gt;</definition>
        <argsstring></argsstring>
        <name>ArrudaBoyce</name>
        <qualifiedname>Ikarus::Materials::ArrudaBoyce</qualifiedname>
        <briefdescription>
<para>Alias for <ref refid="a01530" kindref="compound">ArrudaBoyceT</ref> with double as the default scalar type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/hyperelastic/deviatoric/arrudaboyce.hh" line="194" column="1" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/hyperelastic/deviatoric/arrudaboyce.hh" bodystart="194" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="a00422_1a7c7d4e399e30b088b7253771704bd01b" prot="public" static="no">
        <type><ref refid="a01534" kindref="compound">BlatzKoT</ref>&lt; double &gt;</type>
        <definition>using Ikarus::Materials::BlatzKo = typedef BlatzKoT&lt;double&gt;</definition>
        <argsstring></argsstring>
        <name>BlatzKo</name>
        <qualifiedname>Ikarus::Materials::BlatzKo</qualifiedname>
        <briefdescription>
<para>Alias for <ref refid="a01534" kindref="compound">BlatzKoT</ref> with double as the default scalar type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/hyperelastic/deviatoric/blatzko.hh" line="130" column="1" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/hyperelastic/deviatoric/blatzko.hh" bodystart="130" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="a00422_1a8d05a34baf0684f0e4e2a10a721bb80d" prot="public" static="no">
        <type><ref refid="a01546" kindref="compound">GentT</ref>&lt; double &gt;</type>
        <definition>using Ikarus::Materials::Gent = typedef GentT&lt;double&gt;</definition>
        <argsstring></argsstring>
        <name>Gent</name>
        <qualifiedname>Ikarus::Materials::Gent</qualifiedname>
        <briefdescription>
<para>Alias for <ref refid="a01546" kindref="compound">GentT</ref> with double as the default scalar type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/hyperelastic/deviatoric/gent.hh" line="183" column="1" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/hyperelastic/deviatoric/gent.hh" bodystart="183" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="a00422_1a54eda7633e477c02ff71fa6e3f40a1ab" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>int</type>
            <declname>n</declname>
            <defname>n</defname>
          </param>
        </templateparamlist>
        <type><ref refid="a01554" kindref="compound">InvariantBasedT</ref>&lt; double, n &gt;</type>
        <definition>using Ikarus::Materials::InvariantBased = typedef InvariantBasedT&lt;double, n&gt;</definition>
        <argsstring></argsstring>
        <name>InvariantBased</name>
        <qualifiedname>Ikarus::Materials::InvariantBased</qualifiedname>
        <briefdescription>
<para>Alias for <ref refid="a01554" kindref="compound">InvariantBasedT</ref> with double as the default scalar type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/hyperelastic/deviatoric/invariantbased.hh" line="230" column="1" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/hyperelastic/deviatoric/invariantbased.hh" bodystart="230" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="a00422_1a7759118d563e476dc3b7e737df439f4d" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>int</type>
            <declname>n</declname>
            <defname>n</defname>
          </param>
          <param>
            <type>PrincipalStretchTags</type>
            <declname>tag</declname>
            <defname>tag</defname>
          </param>
        </templateparamlist>
        <type><ref refid="a01558" kindref="compound">OgdenT</ref>&lt; double, n, tag &gt;</type>
        <definition>using Ikarus::Materials::Ogden = typedef OgdenT&lt;double, n, tag&gt;</definition>
        <argsstring></argsstring>
        <name>Ogden</name>
        <qualifiedname>Ikarus::Materials::Ogden</qualifiedname>
        <briefdescription>
<para>Alias for <ref refid="a01558" kindref="compound">OgdenT</ref> with double as the default scalar type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/hyperelastic/deviatoric/ogden.hh" line="213" column="1" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/hyperelastic/deviatoric/ogden.hh" bodystart="213" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="a00422_1a4bf1415fc81c6cacecd347ec4b928def" prot="public" static="no">
        <type><ref refid="a01566" kindref="compound">NeoHookeT</ref>&lt; double &gt;</type>
        <definition>using Ikarus::Materials::NeoHooke = typedef NeoHookeT&lt;double&gt;</definition>
        <argsstring></argsstring>
        <name>NeoHooke</name>
        <qualifiedname>Ikarus::Materials::NeoHooke</qualifiedname>
        <briefdescription>
<para>Alias for <ref refid="a01566" kindref="compound">NeoHookeT</ref> with double as the default scalar type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/hyperelastic/neohooke.hh" line="160" column="1" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/hyperelastic/neohooke.hh" bodystart="160" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="a00422_1af2ccffa80ee6f4471c03b826368f425d" prot="public" static="no">
        <type><ref refid="a01570" kindref="compound">Volumetric</ref>&lt; <ref refid="a01574" kindref="compound">VF0</ref> &gt;</type>
        <definition>using Ikarus::Materials::NoVolumetricPart = typedef Volumetric&lt;VF0&gt;</definition>
        <argsstring></argsstring>
        <name>NoVolumetricPart</name>
        <qualifiedname>Ikarus::Materials::NoVolumetricPart</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/hyperelastic/volumetric/volumetricfunctions.hh" line="357" column="1" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/hyperelastic/volumetric/volumetricfunctions.hh" bodystart="357" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="a00422_1a93b8b0e77767bbe61541863fcf4d054d" prot="public" static="no">
        <type><ref refid="a01626" kindref="compound">LinearElasticityT</ref>&lt; double &gt;</type>
        <definition>using Ikarus::Materials::LinearElasticity = typedef LinearElasticityT&lt;double&gt;</definition>
        <argsstring></argsstring>
        <name>LinearElasticity</name>
        <qualifiedname>Ikarus::Materials::LinearElasticity</qualifiedname>
        <briefdescription>
<para>Convenience typedef for LinearElasticity with double as ScalarType. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/linearelasticity.hh" line="130" column="1" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/linearelasticity.hh" bodystart="130" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="a00422_1a68ee2f9a7730fbcf6969940b0c5da418" prot="public" static="no">
        <type><ref refid="a01634" kindref="compound">StVenantKirchhoffT</ref>&lt; double &gt;</type>
        <definition>using Ikarus::Materials::StVenantKirchhoff = typedef StVenantKirchhoffT&lt;double&gt;</definition>
        <argsstring></argsstring>
        <name>StVenantKirchhoff</name>
        <qualifiedname>Ikarus::Materials::StVenantKirchhoff</qualifiedname>
        <briefdescription>
<para>Alias for <ref refid="a01634" kindref="compound">StVenantKirchhoffT</ref> with double as the default scalar type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/svk.hh" line="182" column="1" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/svk.hh" bodystart="182" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="a00422_1aa724b5f1275a41f266ad6aae180ed317" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto Ikarus::Materials::makeBlatzKo</definition>
        <argsstring>(double mu)</argsstring>
        <name>makeBlatzKo</name>
        <qualifiedname>Ikarus::Materials::makeBlatzKo</qualifiedname>
        <param>
          <type>double</type>
          <declname>mu</declname>
        </param>
        <briefdescription>
<para>A helper function to create a hyperelastic material model, where the deviatoric part is according to the Blatz-Ko model. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mu</parametername>
</parameternamelist>
<parameterdescription>
<para>The shear modulus.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A hyperelastic material model. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/hyperelastic/factory.hh" line="33" column="13" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/hyperelastic/factory.hh" bodystart="33" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="a00422_1af8c1c0f27639b0883f98f4e814aca8e5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>int</type>
            <declname>n</declname>
            <defname>n</defname>
          </param>
          <param>
            <type>PrincipalStretchTags</type>
            <declname>tag</declname>
            <defname>tag</defname>
          </param>
          <param>
            <type>typename VolumetricFunction</type>
            <defval>VF0</defval>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto Ikarus::Materials::makeOgden</definition>
        <argsstring>(const typename Ogden&lt; n, tag &gt;::MaterialParameters &amp;mu, const typename Ogden&lt; n, tag &gt;::MaterialExponents alpha, double K=0.0, const VolumetricFunction &amp;vf=VolumetricFunction{})</argsstring>
        <name>makeOgden</name>
        <qualifiedname>Ikarus::Materials::makeOgden</qualifiedname>
        <param>
          <type>const typename <ref refid="a00422_1a7759118d563e476dc3b7e737df439f4d" kindref="member">Ogden</ref>&lt; n, tag &gt;::MaterialParameters &amp;</type>
          <declname>mu</declname>
        </param>
        <param>
          <type>const typename <ref refid="a00422_1a7759118d563e476dc3b7e737df439f4d" kindref="member">Ogden</ref>&lt; n, tag &gt;::MaterialExponents</type>
          <declname>alpha</declname>
        </param>
        <param>
          <type>double</type>
          <declname>K</declname>
          <defval>0.0</defval>
        </param>
        <param>
          <type>const VolumetricFunction &amp;</type>
          <declname>vf</declname>
          <defval>VolumetricFunction{}</defval>
        </param>
        <briefdescription>
<para>A helper function to create a hyperelastic material model, where the deviatoric part is according to the Ogden model. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>n</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of Ogden material parameters. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>PrincipalStretchTags</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of the principal stretches, either total or deviatoric. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>VolumetricFunction</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of the volumetric function.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mu</parametername>
</parameternamelist>
<parameterdescription>
<para>The shear parameters (mu_i). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>alpha</parametername>
</parameternamelist>
<parameterdescription>
<para>The (exponential) parameters (alpha_i). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>K</parametername>
</parameternamelist>
<parameterdescription>
<para>Bulk modulus (or) Lamé&apos;s first parameter. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vf</parametername>
</parameternamelist>
<parameterdescription>
<para>The volumetric function.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A hyperelastic material model. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/hyperelastic/factory.hh" line="56" column="13" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/hyperelastic/factory.hh" bodystart="56" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="a00422_1a03ec75f725d4772d6e33532501cd10a8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>int</type>
            <declname>n</declname>
            <defname>n</defname>
          </param>
          <param>
            <type>typename VolumetricFunction</type>
            <defval>VF0</defval>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto Ikarus::Materials::makeInvariantBased</definition>
        <argsstring>(const typename InvariantBased&lt; n &gt;::MaterialParameters &amp;mu, const typename InvariantBased&lt; n &gt;::Exponents pex, const typename InvariantBased&lt; n &gt;::Exponents qex, double K=0.0, const VolumetricFunction &amp;vf=VolumetricFunction{})</argsstring>
        <name>makeInvariantBased</name>
        <qualifiedname>Ikarus::Materials::makeInvariantBased</qualifiedname>
        <param>
          <type>const typename <ref refid="a00422_1a54eda7633e477c02ff71fa6e3f40a1ab" kindref="member">InvariantBased</ref>&lt; n &gt;::MaterialParameters &amp;</type>
          <declname>mu</declname>
        </param>
        <param>
          <type>const typename <ref refid="a00422_1a54eda7633e477c02ff71fa6e3f40a1ab" kindref="member">InvariantBased</ref>&lt; n &gt;::Exponents</type>
          <declname>pex</declname>
        </param>
        <param>
          <type>const typename <ref refid="a00422_1a54eda7633e477c02ff71fa6e3f40a1ab" kindref="member">InvariantBased</ref>&lt; n &gt;::Exponents</type>
          <declname>qex</declname>
        </param>
        <param>
          <type>double</type>
          <declname>K</declname>
          <defval>0.0</defval>
        </param>
        <param>
          <type>const VolumetricFunction &amp;</type>
          <declname>vf</declname>
          <defval>VolumetricFunction{}</defval>
        </param>
        <briefdescription>
<para>A helper function to create a hyperelastic material model, where the deviatoric part is according to the general invariant-based model. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>n</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of material parameters. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>VolumetricFunction</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of the volumetric function.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mu</parametername>
</parameternamelist>
<parameterdescription>
<para>The shear parameters (mu_i). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pex</parametername>
</parameternamelist>
<parameterdescription>
<para>The exponents related to the first invariant. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>qex</parametername>
</parameternamelist>
<parameterdescription>
<para>The exponents related to the second invariant. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>K</parametername>
</parameternamelist>
<parameterdescription>
<para>Bulk modulus (or) Lamé&apos;s first parameter. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vf</parametername>
</parameternamelist>
<parameterdescription>
<para>The volumetric function.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A hyperelastic material model. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/hyperelastic/factory.hh" line="81" column="13" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/hyperelastic/factory.hh" bodystart="81" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="a00422_1a7ac025ab0f41d2021008bd54e51135b1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename VolumetricFunction</type>
            <defval>VF0</defval>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto Ikarus::Materials::makeMooneyRivlin</definition>
        <argsstring>(const typename InvariantBased&lt; 2 &gt;::MaterialParameters &amp;mu, double K=0.0, const VolumetricFunction &amp;vf=VolumetricFunction{})</argsstring>
        <name>makeMooneyRivlin</name>
        <qualifiedname>Ikarus::Materials::makeMooneyRivlin</qualifiedname>
        <param>
          <type>const typename <ref refid="a00422_1a54eda7633e477c02ff71fa6e3f40a1ab" kindref="member">InvariantBased</ref>&lt; 2 &gt;::MaterialParameters &amp;</type>
          <declname>mu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>K</declname>
          <defval>0.0</defval>
        </param>
        <param>
          <type>const VolumetricFunction &amp;</type>
          <declname>vf</declname>
          <defval>VolumetricFunction{}</defval>
        </param>
        <briefdescription>
<para>A helper function to create a hyperelastic material model, where the deviatoric part is according to the Mooney-Rivlin model (InvariantBased model with n = 2). </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>VolumetricFunction</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of the volumetric function.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mu</parametername>
</parameternamelist>
<parameterdescription>
<para>The shear parameters (mu_i). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>K</parametername>
</parameternamelist>
<parameterdescription>
<para>Bulk modulus (or) Lamé&apos;s first parameter. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vf</parametername>
</parameternamelist>
<parameterdescription>
<para>The volumetric function.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A hyperelastic material model. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/hyperelastic/factory.hh" line="105" column="13" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/hyperelastic/factory.hh" bodystart="105" bodyend="111"/>
      </memberdef>
      <memberdef kind="function" id="a00422_1a00567c7322e1a28e7575c67a19631201" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename VolumetricFunction</type>
            <defval>VF0</defval>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto Ikarus::Materials::makeYeoh</definition>
        <argsstring>(const typename InvariantBased&lt; 3 &gt;::MaterialParameters &amp;mu, double K=0.0, const VolumetricFunction &amp;vf=VolumetricFunction{})</argsstring>
        <name>makeYeoh</name>
        <qualifiedname>Ikarus::Materials::makeYeoh</qualifiedname>
        <param>
          <type>const typename <ref refid="a00422_1a54eda7633e477c02ff71fa6e3f40a1ab" kindref="member">InvariantBased</ref>&lt; 3 &gt;::MaterialParameters &amp;</type>
          <declname>mu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>K</declname>
          <defval>0.0</defval>
        </param>
        <param>
          <type>const VolumetricFunction &amp;</type>
          <declname>vf</declname>
          <defval>VolumetricFunction{}</defval>
        </param>
        <briefdescription>
<para>A helper function to create a hyperelastic material model, where the deviatoric part is according to the Yeoh model (InvariantBased model with n = 3). </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>VolumetricFunction</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of the volumetric function.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mu</parametername>
</parameternamelist>
<parameterdescription>
<para>The shear parameters (mu_i). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>K</parametername>
</parameternamelist>
<parameterdescription>
<para>Bulk modulus (or) Lamé&apos;s first parameter. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vf</parametername>
</parameternamelist>
<parameterdescription>
<para>The volumetric function.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A hyperelastic material model. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/hyperelastic/factory.hh" line="126" column="13" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/hyperelastic/factory.hh" bodystart="126" bodyend="132"/>
      </memberdef>
      <memberdef kind="function" id="a00422_1af561f0434312c4d30c22e4438f2c9a1a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename VolumetricFunction</type>
            <defval>VF0</defval>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto Ikarus::Materials::makeArrudaBoyce</definition>
        <argsstring>(const ArrudaBoyceMatParameters &amp;matPar, double K=0.0, const VolumetricFunction &amp;vf=VolumetricFunction{})</argsstring>
        <name>makeArrudaBoyce</name>
        <qualifiedname>Ikarus::Materials::makeArrudaBoyce</qualifiedname>
        <param>
          <type>const <ref refid="a01526" kindref="compound">ArrudaBoyceMatParameters</ref> &amp;</type>
          <declname>matPar</declname>
        </param>
        <param>
          <type>double</type>
          <declname>K</declname>
          <defval>0.0</defval>
        </param>
        <param>
          <type>const VolumetricFunction &amp;</type>
          <declname>vf</declname>
          <defval>VolumetricFunction{}</defval>
        </param>
        <briefdescription>
<para>A helper function to create a hyperelastic material model, where the deviatoric part is according to the Arruda-Boyce model. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>VolumetricFunction</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of the volumetric function.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>matPar</parametername>
</parameternamelist>
<parameterdescription>
<para>The Arruda-Boyce material parameters (C and lambdaM). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>K</parametername>
</parameternamelist>
<parameterdescription>
<para>Bulk modulus (or) Lamé&apos;s first parameter. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vf</parametername>
</parameternamelist>
<parameterdescription>
<para>The volumetric function.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A hyperelastic material model. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/hyperelastic/factory.hh" line="147" column="13" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/hyperelastic/factory.hh" bodystart="147" bodyend="154"/>
      </memberdef>
      <memberdef kind="function" id="a00422_1a02bb70b49abcfa023ae81f4f4f1d27de" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename VolumetricFunction</type>
            <defval>VF0</defval>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto Ikarus::Materials::makeGent</definition>
        <argsstring>(const GentMatParameters &amp;matPar, double K=0.0, const VolumetricFunction &amp;vf=VolumetricFunction{})</argsstring>
        <name>makeGent</name>
        <qualifiedname>Ikarus::Materials::makeGent</qualifiedname>
        <param>
          <type>const <ref refid="a01542" kindref="compound">GentMatParameters</ref> &amp;</type>
          <declname>matPar</declname>
        </param>
        <param>
          <type>double</type>
          <declname>K</declname>
          <defval>0.0</defval>
        </param>
        <param>
          <type>const VolumetricFunction &amp;</type>
          <declname>vf</declname>
          <defval>VolumetricFunction{}</defval>
        </param>
        <briefdescription>
<para>A helper function to create a hyperelastic material model, where the deviatoric part is according to the Gent model. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>VolumetricFunction</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of the volumetric function.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>matPar</parametername>
</parameternamelist>
<parameterdescription>
<para>The Gent material parameters (mu and Jm). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>K</parametername>
</parameternamelist>
<parameterdescription>
<para>Bulk modulus (or) Lamé&apos;s first parameter. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vf</parametername>
</parameternamelist>
<parameterdescription>
<para>The volumetric function.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A hyperelastic material model. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/hyperelastic/factory.hh" line="169" column="13" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/hyperelastic/factory.hh" bodystart="169" bodyend="176"/>
      </memberdef>
      <memberdef kind="function" id="a00422_1acd3877457d719128ff83d44c6253ece8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename MAT</type>
          </param>
          <param>
            <type>typename S</type>
          </param>
        </templateparamlist>
        <type>consteval bool</type>
        <definition>consteval bool Ikarus::Materials::hasCorrectSize</definition>
        <argsstring>()</argsstring>
        <name>hasCorrectSize</name>
        <qualifiedname>Ikarus::Materials::hasCorrectSize</qualifiedname>
        <briefdescription>
<para>Template function for checking if the strain size is correct. </para>
        </briefdescription>
        <detaileddescription>
<para>The given strain quantity has to be a Eigen::Vector6 or a Eigen::Matrix3</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>MAT</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of the material. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>S</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of the strains. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/interface.hh" line="41" column="16" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/interface.hh" bodystart="41" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="a00422_1a03d13518406d1cd5bb2a34aca2f95f01" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>MatrixIndexPair...</type>
            <declname>stressIndexPair</declname>
            <defname>stressIndexPair</defname>
          </param>
          <param>
            <type>typename MaterialImpl</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto Ikarus::Materials::makeVanishingStrain</definition>
        <argsstring>(MaterialImpl mat)</argsstring>
        <name>makeVanishingStrain</name>
        <qualifiedname>Ikarus::Materials::makeVanishingStrain</qualifiedname>
        <param>
          <type>MaterialImpl</type>
          <declname>mat</declname>
        </param>
        <briefdescription>
<para>Factory function to create a <ref refid="a01638" kindref="compound">VanishingStrain</ref> material with specified strain indices. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>matrixIndexPair</parametername>
</parameternamelist>
<parameterdescription>
<para>The array of <ref refid="a01630" kindref="compound">MatrixIndexPair</ref> representing fixed strain components. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>MaterialImpl</parametername>
</parameternamelist>
<parameterdescription>
<para>The underlying material model. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mat</parametername>
</parameternamelist>
<parameterdescription>
<para>The underlying material model. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_tol</parametername>
</parameternamelist>
<parameterdescription>
<para>Tolerance for stress reduction. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="a01642" kindref="compound">VanishingStress</ref> The created <ref refid="a01642" kindref="compound">VanishingStress</ref> material. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/vanishingstrain.hh" line="180" column="6" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/vanishingstrain.hh" bodystart="180" bodyend="182"/>
        <referencedby refid="a00422_1a5b428881c8ea5104acd909e769b7910b" compoundref="a00242" startline="197" endline="199">planeStrain</referencedby>
      </memberdef>
      <memberdef kind="function" id="a00422_1a5b428881c8ea5104acd909e769b7910b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename MaterialImpl</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto Ikarus::Materials::planeStrain</definition>
        <argsstring>(const MaterialImpl &amp;mat)</argsstring>
        <name>planeStrain</name>
        <qualifiedname>Ikarus::Materials::planeStrain</qualifiedname>
        <param>
          <type>const MaterialImpl &amp;</type>
          <declname>mat</declname>
        </param>
        <briefdescription>
<para>Factory function to create a <ref refid="a01638" kindref="compound">VanishingStrain</ref> material for plane strain conditions. </para>
        </briefdescription>
        <detaileddescription>
<para>The output is as follows for the stress and material tangent (in Voigt notation): <formula id="78">\[  \BS(\BE) \rightarrow \begin{bmatrix}
  S_{11} \\ S_{22} \\ S_{12}
\end{bmatrix}, \quad \BBC(\BE) \rightarrow  \begin{bmatrix}
  C_{11} &amp; C_{12} &amp; C_{13} \\ C_{21} &amp; C_{22} &amp; C_{23} \\ C_{31} &amp; C_{32} &amp; C_{33}
\end{bmatrix} \]</formula> <parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>MaterialImpl</parametername>
</parameternamelist>
<parameterdescription>
<para>The underlying material model. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mat</parametername>
</parameternamelist>
<parameterdescription>
<para>The underlying material model. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="a01638" kindref="compound">VanishingStrain</ref> The created <ref refid="a01638" kindref="compound">VanishingStrain</ref> material for plane strain case. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/vanishingstrain.hh" line="197" column="6" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/vanishingstrain.hh" bodystart="197" bodyend="199"/>
      </memberdef>
      <memberdef kind="function" id="a00422_1a3fc342156c1fa3be5bd78c8baffd0df7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>MatrixIndexPair...</type>
            <declname>stressIndexPair</declname>
            <defname>stressIndexPair</defname>
          </param>
          <param>
            <type>typename MaterialImpl</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto Ikarus::Materials::makeVanishingStress</definition>
        <argsstring>(MaterialImpl mat, typename MaterialImpl::ScalarType p_tol=1e-12)</argsstring>
        <name>makeVanishingStress</name>
        <qualifiedname>Ikarus::Materials::makeVanishingStress</qualifiedname>
        <param>
          <type>MaterialImpl</type>
          <declname>mat</declname>
        </param>
        <param>
          <type>typename MaterialImpl::ScalarType</type>
          <declname>p_tol</declname>
          <defval>1e-12</defval>
        </param>
        <briefdescription>
<para>Factory function to create a <ref refid="a01642" kindref="compound">VanishingStress</ref> material with specified stress indices. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>matrixIndexPair</parametername>
</parameternamelist>
<parameterdescription>
<para>The array of <ref refid="a01630" kindref="compound">MatrixIndexPair</ref> representing fixed stress components. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>MaterialImpl</parametername>
</parameternamelist>
<parameterdescription>
<para>The underlying material model. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mat</parametername>
</parameternamelist>
<parameterdescription>
<para>The underlying material model. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_tol</parametername>
</parameternamelist>
<parameterdescription>
<para>Tolerance for stress reduction. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="a01642" kindref="compound">VanishingStress</ref> The created <ref refid="a01642" kindref="compound">VanishingStress</ref> material. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/vanishingstress.hh" line="230" column="6" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/vanishingstress.hh" bodystart="230" bodyend="232"/>
        <referencedby refid="a00422_1ab89e3a8a28d4e7241ab9dfd41fbbd153" compoundref="a00239" startline="268" endline="270">beamMaterial</referencedby>
        <referencedby refid="a00422_1aa7b4cfc28796165e32b16cb12ab8ccd4" compoundref="a00239" startline="242" endline="244">planeStress</referencedby>
        <referencedby refid="a00422_1a87bf89dc04e6f4021681129ae4e9a0ee" compoundref="a00239" startline="255" endline="257">shellMaterial</referencedby>
      </memberdef>
      <memberdef kind="function" id="a00422_1aa7b4cfc28796165e32b16cb12ab8ccd4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename MaterialImpl</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto Ikarus::Materials::planeStress</definition>
        <argsstring>(const MaterialImpl &amp;mat, typename MaterialImpl::ScalarType tol=1e-8)</argsstring>
        <name>planeStress</name>
        <qualifiedname>Ikarus::Materials::planeStress</qualifiedname>
        <param>
          <type>const MaterialImpl &amp;</type>
          <declname>mat</declname>
        </param>
        <param>
          <type>typename MaterialImpl::ScalarType</type>
          <declname>tol</declname>
          <defval>1e-8</defval>
        </param>
        <briefdescription>
<para>Factory function to create a <ref refid="a01642" kindref="compound">VanishingStress</ref> material for plane stress conditions. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>MaterialImpl</parametername>
</parameternamelist>
<parameterdescription>
<para>The underlying material model. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mat</parametername>
</parameternamelist>
<parameterdescription>
<para>The underlying material model. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tol</parametername>
</parameternamelist>
<parameterdescription>
<para>Tolerance for stress reduction. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="a01642" kindref="compound">VanishingStress</ref> The created <ref refid="a01642" kindref="compound">VanishingStress</ref> material for plane stress. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/vanishingstress.hh" line="242" column="6" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/vanishingstress.hh" bodystart="242" bodyend="244"/>
      </memberdef>
      <memberdef kind="function" id="a00422_1a87bf89dc04e6f4021681129ae4e9a0ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename MaterialImpl</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto Ikarus::Materials::shellMaterial</definition>
        <argsstring>(const MaterialImpl &amp;mat, typename MaterialImpl::ScalarType tol=1e-8)</argsstring>
        <name>shellMaterial</name>
        <qualifiedname>Ikarus::Materials::shellMaterial</qualifiedname>
        <param>
          <type>const MaterialImpl &amp;</type>
          <declname>mat</declname>
        </param>
        <param>
          <type>typename MaterialImpl::ScalarType</type>
          <declname>tol</declname>
          <defval>1e-8</defval>
        </param>
        <briefdescription>
<para>Factory function to create a <ref refid="a01642" kindref="compound">VanishingStress</ref> material for a shell material with zero normal stress condition. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>MaterialImpl</parametername>
</parameternamelist>
<parameterdescription>
<para>The underlying material model. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mat</parametername>
</parameternamelist>
<parameterdescription>
<para>The underlying material model. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tol</parametername>
</parameternamelist>
<parameterdescription>
<para>Tolerance for stress reduction. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="a01642" kindref="compound">VanishingStress</ref> The created <ref refid="a01642" kindref="compound">VanishingStress</ref> material for plane stress. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/vanishingstress.hh" line="255" column="6" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/vanishingstress.hh" bodystart="255" bodyend="257"/>
      </memberdef>
      <memberdef kind="function" id="a00422_1ab89e3a8a28d4e7241ab9dfd41fbbd153" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename MaterialImpl</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto Ikarus::Materials::beamMaterial</definition>
        <argsstring>(const MaterialImpl &amp;mat, typename MaterialImpl::ScalarType tol=1e-8)</argsstring>
        <name>beamMaterial</name>
        <qualifiedname>Ikarus::Materials::beamMaterial</qualifiedname>
        <param>
          <type>const MaterialImpl &amp;</type>
          <declname>mat</declname>
        </param>
        <param>
          <type>typename MaterialImpl::ScalarType</type>
          <declname>tol</declname>
          <defval>1e-8</defval>
        </param>
        <briefdescription>
<para>Factory function to create a <ref refid="a01642" kindref="compound">VanishingStress</ref> material for a beam material with two zero normal stress condition. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>MaterialImpl</parametername>
</parameternamelist>
<parameterdescription>
<para>The underlying material model. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mat</parametername>
</parameternamelist>
<parameterdescription>
<para>The underlying material model. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_tol</parametername>
</parameternamelist>
<parameterdescription>
<para>Tolerance for stress reduction. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="a01642" kindref="compound">VanishingStress</ref> The created <ref refid="a01642" kindref="compound">VanishingStress</ref> material for plane stress. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/vanishingstress.hh" line="268" column="6" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/vanishingstress.hh" bodystart="268" bodyend="270"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/hyperelastic/deviatoric/arrudaboyce.hh" line="27" column="1"/>
  </compounddef>
</doxygen>
