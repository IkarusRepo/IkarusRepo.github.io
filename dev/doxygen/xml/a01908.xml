<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="a01908" kind="struct" language="C++" prot="public">
    <compoundname>Ikarus::traits::isSpecializationNonTypeAndTypes&lt; Type, Type&lt; T, N... &gt; &gt;</compoundname>
    <basecompoundref prot="public" virt="non-virtual">std::true_type</basecompoundref>
    <includes refid="a00011" local="no">ikarus/utils/traits.hh</includes>
    <templateparamlist>
      <param>
        <type>template&lt; auto, typename... &gt; class</type>
        <declname>Type</declname>
        <defname>Type</defname>
      </param>
      <param>
        <type>auto</type>
        <declname>T</declname>
        <defname>T</defname>
      </param>
      <param>
        <type>typename...</type>
        <declname>N</declname>
        <defname>N</defname>
      </param>
    </templateparamlist>
    <briefdescription>
<para>Type trait to check if a class is a specialization of a template with a non-type parameter and types. </para>
    </briefdescription>
    <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Type</parametername>
</parameternamelist>
<parameterdescription>
<para>Template class with a non-type parameter and types. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Non-type parameter. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>N</parametername>
</parameternamelist>
<parameterdescription>
<para>Types used to instantiate the template. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>Ikarus::traits::isSpecializationNonTypeAndTypes&lt; Type, Type&lt; T, N... &gt; &gt;</label>
        <link refid="a01908"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>std::true_type</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>Ikarus::traits::isSpecializationNonTypeAndTypes&lt; Type, Type&lt; T, N... &gt; &gt;</label>
        <link refid="a01908"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>std::true_type</label>
      </node>
    </collaborationgraph>
    <location file="/__w/ikarus/ikarus/repo/ikarus/utils/traits.hh" line="196" column="1" bodyfile="/__w/ikarus/ikarus/repo/ikarus/utils/traits.hh" bodystart="197" bodyend="198"/>
    <listofallmembers>
    </listofallmembers>
  </compounddef>
</doxygen>
