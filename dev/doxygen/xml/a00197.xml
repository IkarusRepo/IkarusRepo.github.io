<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="a00197" kind="file" language="C++">
    <compoundname>ferequirements.hh</compoundname>
    <includes local="no">iosfwd</includes>
    <includes local="no">map</includes>
    <includes local="no">set</includes>
    <includes local="no">vector</includes>
    <includes local="no">dune/common/exceptions.hh</includes>
    <includes local="no">Eigen/Core</includes>
    <includes refid="a00302" local="no">ikarus/finiteelements/feresulttypes.hh</includes>
    <includes refid="a00011" local="no">ikarus/utils/makeenum.hh</includes>
    <includedby refid="a00365" local="no">_ikarus.cc</includedby>
    <includedby refid="a00344" local="no">assemblermanipulatorbuildingblocks.hh</includedby>
    <includedby refid="a00209" local="no">autodifffe.hh</includedby>
    <includedby refid="a03080" local="no">basis.hh</includedby>
    <includedby refid="a03086" local="no">dirichletvalues.hh</includedby>
    <includedby refid="a00221" local="no">enhancedassumedstrains.hh</includedby>
    <includedby refid="a00200" local="no">febase.hh</includedby>
    <includedby refid="a00305" local="no">fetraits.hh</includedby>
    <includedby refid="a00164" local="no">flatassembler.hh</includedby>
    <includedby refid="a00161" local="no">flatassemblermanipulator.hh</includedby>
    <includedby refid="a03065" local="no">interface.hh</includedby>
    <includedby refid="a00284" local="no">kirchhoffloveshell.hh</includedby>
    <includedby refid="a00224" local="no">linearelastic.hh</includedby>
    <includedby refid="a00290" local="no">nonlinearelastic.hh</includedby>
    <includedby refid="a00029" local="no">nonlinopfactory.hh</includedby>
    <includedby refid="a00350" local="no">resultfunction.hh</includedby>
    <includedby refid="a00335" local="no">simpleassemblers.hh</includedby>
    <includedby refid="a00299" local="no">traction.hh</includedby>
    <includedby refid="a00281" local="no">truss.hh</includedby>
    <includedby refid="a00296" local="no">volume.hh</includedby>
    <includedby refid="a03095" local="no">vtkwriter.hh</includedby>
    <incdepgraph>
      <node id="23">
        <label>ikarus/assembler/dirichletbcenforcement.hh</label>
        <link refid="a00347"/>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>ferequirements.hh</label>
        <link refid="a00197"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>ikarus/finiteelements/feresulttypes.hh</label>
        <link refid="a00302"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>ikarus/finiteelements/mechanics/materials/tags.hh</label>
        <link refid="a00233"/>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>ikarus/utils/concepts.hh</label>
        <link refid="a03101"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>ikarus/utils/makeenum.hh</label>
        <link refid="a00011"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>ikarus/utils/math.hh</label>
        <link refid="a00044"/>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>ikarus/utils/tensorutils.hh</label>
        <link refid="a00032"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>ikarus/utils/traits.hh</label>
        <link refid="a00068"/>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>Eigen/Core</label>
      </node>
      <node id="20">
        <label>Eigen/Dense</label>
      </node>
      <node id="21">
        <label>Eigen/Sparse</label>
      </node>
      <node id="22">
        <label>autodiff/forward/dual/dual.hpp</label>
      </node>
      <node id="16">
        <label>concepts</label>
      </node>
      <node id="6">
        <label>dune/common/exceptions.hh</label>
      </node>
      <node id="29">
        <label>dune/common/hybridutilities.hh</label>
      </node>
      <node id="14">
        <label>dune/common/promotiontraits.hh</label>
      </node>
      <node id="18">
        <label>dune/functions/functionspacebases/basistags.hh</label>
      </node>
      <node id="19">
        <label>dune/functions/functionspacebases/lagrangebasis.hh</label>
      </node>
      <node id="27">
        <label>functional</label>
      </node>
      <node id="2">
        <label>iosfwd</label>
      </node>
      <node id="3">
        <label>map</label>
      </node>
      <node id="11">
        <label>numeric</label>
      </node>
      <node id="12">
        <label>ranges</label>
      </node>
      <node id="4">
        <label>set</label>
      </node>
      <node id="28">
        <label>tuple</label>
      </node>
      <node id="9">
        <label>type_traits</label>
      </node>
      <node id="13">
        <label>unsupported/Eigen/CXX11/Tensor</label>
      </node>
      <node id="17">
        <label>utility</label>
      </node>
      <node id="5">
        <label>vector</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="3">
        <label>assemblermanipulatorbuildingblocks.hh</label>
        <link refid="a00344"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>assemblermanipulatorfuser.hh</label>
        <link refid="a00341"/>
      </node>
      <node id="17">
        <label>interface.hh</label>
        <link refid="a03065"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>simpleassemblers.hh</label>
        <link refid="a00335"/>
      </node>
      <node id="23">
        <label>pathfollowing.hh</label>
        <link refid="a00329"/>
      </node>
      <node id="5">
        <label>autodifffe.hh</label>
        <link refid="a00209"/>
      </node>
      <node id="9">
        <label>febase.hh</label>
        <link refid="a00200"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>fefactory.hh</label>
        <link refid="a00206"/>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>ferequirements.hh</label>
        <link refid="a00197"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>fetraits.hh</label>
        <link refid="a00305"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>enhancedassumedstrains.hh</label>
        <link refid="a00221"/>
      </node>
      <node id="19">
        <label>kirchhoffloveshell.hh</label>
        <link refid="a00284"/>
      </node>
      <node id="20">
        <label>linearelastic.hh</label>
        <link refid="a00224"/>
      </node>
      <node id="33">
        <label>loads.hh</label>
        <link refid="a00287"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>traction.hh</label>
        <link refid="a00299"/>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>volume.hh</label>
        <link refid="a00296"/>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>materials.hh</label>
        <link refid="a03059"/>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>vanishingstress.hh</label>
        <link refid="a00239"/>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>nonlinearelastic.hh</label>
        <link refid="a00290"/>
      </node>
      <node id="34">
        <label>truss.hh</label>
        <link refid="a00281"/>
      </node>
      <node id="14">
        <label>mixin.hh</label>
        <link refid="a00308"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>resultevaluators.hh</label>
        <link refid="a00353"/>
      </node>
      <node id="29">
        <label>resultfunction.hh</label>
        <link refid="a00350"/>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>vtkwriter.hh</label>
        <link refid="a03092"/>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>flatassembler.hh</label>
        <link refid="a00164"/>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>flatassemblermanipulator.hh</label>
        <link refid="a00161"/>
      </node>
      <node id="6">
        <label>basis.hh</label>
        <link refid="a03080"/>
      </node>
      <node id="7">
        <label>dirichletvalues.hh</label>
        <link refid="a03086"/>
      </node>
      <node id="11">
        <label>fe.hh</label>
        <link refid="a00155"/>
      </node>
      <node id="26">
        <label>material.hh</label>
        <link refid="a00158"/>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>vtkwriter.hh</label>
        <link refid="a03095"/>
      </node>
      <node id="22">
        <label>nonlinearsolverfactory.hh</label>
        <link refid="a00125"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>nonlinopfactory.hh</label>
        <link refid="a00029"/>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>_ikarus.cc</label>
        <link refid="a00365"/>
      </node>
      <node id="27">
        <label>materials.hh</label>
        <link refid="a03062"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="a01386" prot="public">Ikarus::AffordanceCollection</innerclass>
    <innerclass refid="a01402" prot="public">Ikarus::FERequirements</innerclass>
    <innerclass refid="a01406" prot="public">Ikarus::FERequirementsFactory</innerclass>
    <innernamespace refid="a00411">Ikarus</innernamespace>
    <innernamespace refid="a00417">Ikarus::AffordanceCollections</innernamespace>
    <briefdescription>
<para>Definition of the LinearElastic class for finite element mechanics computations. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>SPDX-FileCopyrightText:<sp/>2021-2025<sp/>The<sp/>Ikarus<sp/>Developers<sp/>mueller@ibb.uni-stuttgart.de</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>SPDX-License-Identifier:<sp/>LGPL-3.0-or-later</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iosfwd&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;set&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;dune/common/exceptions.hh&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;Eigen/Core&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="a00302" kindref="compound">ikarus/finiteelements/feresulttypes.hh</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="a00011" kindref="compound">ikarus/utils/makeenum.hh</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="a00411" kindref="compound">Ikarus</ref><sp/>{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//<sp/>clang-format<sp/>off</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">//<sp/>cppcheck-suppress<sp/>MAKE_ENUM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><ref refid="a00406_1ga14ad7d33267cea1c93f97f3998081657" kindref="member">MAKE_ENUM</ref>(<ref refid="a00411_1af6f894084edd9109762b86222995ef2a" kindref="member">ScalarAffordance</ref>,</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>noAffordance,</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mechanicalPotentialEnergy,</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>microMagneticPotentialEnergy</highlight></codeline>
<codeline lineno="37" refid="a00411_1af6f894084edd9109762b86222995ef2a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><ref refid="a00406_1ga14ad7d33267cea1c93f97f3998081657" kindref="member">MAKE_ENUM</ref>(<ref refid="a00411_1aab9e3e38507d1db7602bc750718c302a" kindref="member">VectorAffordance</ref>,</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>noAffordance,</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="a00411_1a79f92cdef4ce37a01fd76e7cbc460cb4" kindref="member">forces</ref>,</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>microMagneticForces</highlight></codeline>
<codeline lineno="48" refid="a00411_1aecab2e77f1da6ec0d77b728b96f7fed8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><ref refid="a00406_1ga14ad7d33267cea1c93f97f3998081657" kindref="member">MAKE_ENUM</ref>(<ref refid="a00411_1a390d5311179ec61d163a29c943b3d1a0" kindref="member">MatrixAffordance</ref>,</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>noAffordance,</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="a00411_1a5bd2b9f6fec9989fd5e5e9d7e3cd986e" kindref="member">stiffness</ref>,</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>materialstiffness,</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>geometricstiffness,</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="a00411_1a0ceb0c9442d4755cb5c2bd47ea46a22f" kindref="member">stiffnessdiffBucklingVector</ref>,</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>microMagneticHessian,</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="a00411_1ad8479f7f6217f57442ec18948b7aece1" kindref="member">mass</ref></highlight></codeline>
<codeline lineno="63" refid="a00411_1a390d5311179ec61d163a29c943b3d1a0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><ref refid="a00406_1ga14ad7d33267cea1c93f97f3998081657" kindref="member">MAKE_ENUM</ref>(<ref refid="a00398_1ga0c1577fd05efee8475b0f7fef795bbbe" kindref="member">FEParameter</ref>,</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>noParameter,</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>loadfactor,</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>time</highlight></codeline>
<codeline lineno="74" refid="a00398_1ga0c1577fd05efee8475b0f7fef795bbbe" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><ref refid="a00406_1ga14ad7d33267cea1c93f97f3998081657" kindref="member">MAKE_ENUM</ref>(<ref refid="a00398_1gaea763c94a1cecbeefc4f8661debcc5a3" kindref="member">FESolutions</ref>,</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>noSolution,</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>displacement,</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>velocity,</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>director,</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>magnetizationAndVectorPotential</highlight></codeline>
<codeline lineno="87" refid="a00398_1gaea763c94a1cecbeefc4f8661debcc5a3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="comment">//<sp/>clang-format<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="95" refid="a02067" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">concept<sp/></highlight><highlight class="normal"><ref refid="a02067" kindref="compound">FEAffordance</ref><sp/>=<sp/>std::is_same_v&lt;std::remove_cvref_t&lt;T&gt;,<sp/><ref refid="a00411_1af6f894084edd9109762b86222995ef2a" kindref="member">ScalarAffordance</ref>&gt;<sp/>or</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::is_same_v&lt;std::remove_cvref_t&lt;T&gt;,<sp/><ref refid="a00411_1aab9e3e38507d1db7602bc750718c302a" kindref="member">VectorAffordance</ref>&gt;<sp/>or</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::is_same_v&lt;std::remove_cvref_t&lt;T&gt;,<sp/><ref refid="a00411_1a390d5311179ec61d163a29c943b3d1a0" kindref="member">MatrixAffordance</ref>&gt;;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<ref refid="a02067" kindref="compound">FEAffordance</ref>...<sp/>Affordances&gt;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="keyword">requires</highlight><highlight class="normal">(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">...(Affordances)<sp/>&lt;=<sp/>3)</highlight></codeline>
<codeline lineno="104" refid="a01386" refkind="compound"><highlight class="normal">struct<sp/><ref refid="a01386" kindref="compound">AffordanceCollection</ref><sp/>:<sp/>public<sp/><ref refid="a00410" kindref="compound">std</ref>::tuple&lt;Affordances...&gt;</highlight></codeline>
<codeline lineno="105"><highlight class="normal">{</highlight></codeline>
<codeline lineno="106" refid="a01386_1a2b9d60bd2360e957781527f81646ecc9" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="a01386_1a2b9d60bd2360e957781527f81646ecc9" kindref="member">Base</ref><sp/>=<sp/>std::tuple&lt;Affordances...&gt;;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108" refid="a01386_1ac9d8a54a3f26be877cb43cf05fae20a8" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="a01386_1ac9d8a54a3f26be877cb43cf05fae20a8" kindref="member">AffordanceCollection</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="109" refid="a01386_1aa0f58694e1148fe110562d59d73c74b9" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/><ref refid="a01386_1aa0f58694e1148fe110562d59d73c74b9" kindref="member">AffordanceCollection</ref>(Affordances...<sp/>affordances)</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="a01386_1a2b9d60bd2360e957781527f81646ecc9" kindref="member">Base</ref>(affordances...)<sp/>{}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112" refid="a01386_1abff0c7489d3ce4d83bf7f078e3e6bdfe" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>hasScalarAffordance<sp/>=<sp/><ref refid="a02018" kindref="compound">traits::hasType</ref>&lt;<ref refid="a00411_1af6f894084edd9109762b86222995ef2a" kindref="member">ScalarAffordance</ref>,<sp/>std::tuple&lt;Affordances...&gt;&gt;::value;</highlight></codeline>
<codeline lineno="113" refid="a01386_1ae6aad73f09ae60f45f049a71307cb98a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>hasVectorAffordance<sp/>=<sp/><ref refid="a02018" kindref="compound">traits::hasType</ref>&lt;<ref refid="a00411_1aab9e3e38507d1db7602bc750718c302a" kindref="member">VectorAffordance</ref>,<sp/>std::tuple&lt;Affordances...&gt;&gt;::value;</highlight></codeline>
<codeline lineno="114" refid="a01386_1a34091db9c2c461a74f8fd9d99253b0a3" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>hasMatrixAffordance<sp/>=<sp/><ref refid="a02018" kindref="compound">traits::hasType</ref>&lt;<ref refid="a00411_1a390d5311179ec61d163a29c943b3d1a0" kindref="member">MatrixAffordance</ref>,<sp/>std::tuple&lt;Affordances...&gt;&gt;::value;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;FEAffordance<sp/>Affordance&gt;</highlight></codeline>
<codeline lineno="125" refid="a01386_1adee1d19ea072ea23bc30baec706bb773" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="a01386_1adee1d19ea072ea23bc30baec706bb773" kindref="member">hasAffordance</ref>(Affordance&amp;&amp;<sp/>affordances)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">AffordanceRaw<sp/>=<sp/>std::remove_cvref_t&lt;Affordance&gt;;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>(std::is_same_v&lt;AffordanceRaw,<sp/>AffordanceCollection&gt;)</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>affordances<sp/>==<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>(std::is_same_v&lt;AffordanceRaw,<sp/>ScalarAffordance&gt;)<sp/>{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>(hasScalarAffordance)</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>affordances<sp/>==<sp/>std::get&lt;ScalarAffordance&gt;(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>(std::is_same_v&lt;AffordanceRaw,<sp/>VectorAffordance&gt;)<sp/>{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>(hasVectorAffordance)</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>affordances<sp/>==<sp/>std::get&lt;VectorAffordance&gt;(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>(std::is_same_v&lt;AffordanceRaw,<sp/>MatrixAffordance&gt;)<sp/>{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>(hasMatrixAffordance)</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>affordances<sp/>==<sp/>std::get&lt;MatrixAffordance&gt;(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152" refid="a01386_1ac56ebfd26cad078d15800d620a9b1e93" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="a01386_1ac56ebfd26cad078d15800d620a9b1e93" kindref="member">scalarAffordance</ref>()<sp/>const</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/>requires<sp/>hasScalarAffordance</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::get&lt;ScalarAffordance&gt;(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="157" refid="a01386_1a9e6b82aa35f9d301b9ccdd661dbb8dde" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="a01386_1a9e6b82aa35f9d301b9ccdd661dbb8dde" kindref="member">vectorAffordance</ref>()<sp/>const</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/>requires<sp/>hasVectorAffordance</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::get&lt;VectorAffordance&gt;(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="162" refid="a01386_1af7b6303f0ef9cc6677744559786d8966" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="a01386_1af7b6303f0ef9cc6677744559786d8966" kindref="member">matrixAffordance</ref>()<sp/>const</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/>requires<sp/>hasMatrixAffordance</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::get&lt;MatrixAffordance&gt;(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="167"><highlight class="normal">};</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169" refid="a00411_1a79f92cdef4ce37a01fd76e7cbc460cb4" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/><ref refid="a00411_1aab9e3e38507d1db7602bc750718c302a" kindref="member">VectorAffordance</ref><sp/><ref refid="a00411_1a79f92cdef4ce37a01fd76e7cbc460cb4" kindref="member">forces</ref><sp/>=<sp/><ref refid="a00411_1aab9e3e38507d1db7602bc750718c302aa2c05161a7e67e946ddc889571aac4e89" kindref="member">VectorAffordance::forces</ref>;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171" refid="a00411_1a5bd2b9f6fec9989fd5e5e9d7e3cd986e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/><ref refid="a00411_1a390d5311179ec61d163a29c943b3d1a0" kindref="member">MatrixAffordance</ref><sp/><ref refid="a00411_1a5bd2b9f6fec9989fd5e5e9d7e3cd986e" kindref="member">stiffness</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="a00411_1a390d5311179ec61d163a29c943b3d1a0a086e8b527490b8abe606a8dd76586ab1" kindref="member">MatrixAffordance::stiffness</ref>;</highlight></codeline>
<codeline lineno="172" refid="a00411_1a0ceb0c9442d4755cb5c2bd47ea46a22f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/><ref refid="a00411_1a390d5311179ec61d163a29c943b3d1a0" kindref="member">MatrixAffordance</ref><sp/><ref refid="a00411_1a0ceb0c9442d4755cb5c2bd47ea46a22f" kindref="member">stiffnessdiffBucklingVector</ref><sp/>=<sp/><ref refid="a00411_1a390d5311179ec61d163a29c943b3d1a0adaa7ff7d704732b763943e3355764532" kindref="member">MatrixAffordance::stiffnessdiffBucklingVector</ref>;</highlight></codeline>
<codeline lineno="173" refid="a00411_1ad8479f7f6217f57442ec18948b7aece1" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/><ref refid="a00411_1a390d5311179ec61d163a29c943b3d1a0" kindref="member">MatrixAffordance</ref><sp/><ref refid="a00411_1ad8479f7f6217f57442ec18948b7aece1" kindref="member">mass</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="a00411_1a390d5311179ec61d163a29c943b3d1a0ad90ccffa01275a7a7795fb6d1274e75f" kindref="member">MatrixAffordance::mass</ref>;</highlight></codeline>
<codeline lineno="174" refid="a00411_1a8c6efe61469638e139724dc7c9bdaa9d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/><ref refid="a00411_1af6f894084edd9109762b86222995ef2a" kindref="member">ScalarAffordance</ref><sp/><ref refid="a00411_1a8c6efe61469638e139724dc7c9bdaa9d" kindref="member">potentialEnergy</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="a00411_1af6f894084edd9109762b86222995ef2aa814f34f472acef493e9ecf0ffccdcae6" kindref="member">ScalarAffordance::mechanicalPotentialEnergy</ref>;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176" refid="a00411_1a2597fb8b5ba646668b01bcc4e5f75818" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="a00411_1a2597fb8b5ba646668b01bcc4e5f75818" kindref="member">vectorAffordance</ref>(<ref refid="a00411_1a390d5311179ec61d163a29c943b3d1a0" kindref="member">MatrixAffordance</ref><sp/>affordanceM)<sp/>{</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(affordanceM<sp/>==<sp/><ref refid="a00411_1a390d5311179ec61d163a29c943b3d1a0a086e8b527490b8abe606a8dd76586ab1" kindref="member">MatrixAffordance::stiffness</ref>)</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="a00411_1aab9e3e38507d1db7602bc750718c302aa2c05161a7e67e946ddc889571aac4e89" kindref="member">VectorAffordance::forces</ref>;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(affordanceM<sp/>==<sp/><ref refid="a00411_1a390d5311179ec61d163a29c943b3d1a0a1b0fce0a361af9d6e59694b4c51524f9" kindref="member">MatrixAffordance::microMagneticHessian</ref>)</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="a00411_1aab9e3e38507d1db7602bc750718c302aa3cc975e7798ac76d6af4f624e23c6ddc" kindref="member">VectorAffordance::microMagneticForces</ref>;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="a00411_1aab9e3e38507d1db7602bc750718c302aa9a280b29988e2eac8c0767e0fcefb49c" kindref="member">VectorAffordance::noAffordance</ref>;</highlight></codeline>
<codeline lineno="183"><highlight class="normal">}</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185" refid="a00411_1a9f58a3849d4736e5cc314f6f995fe9e7" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="a00411_1a9f58a3849d4736e5cc314f6f995fe9e7" kindref="member">scalarAffordance</ref>(<ref refid="a00411_1a390d5311179ec61d163a29c943b3d1a0" kindref="member">MatrixAffordance</ref><sp/>affordanceM)<sp/>{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(affordanceM<sp/>==<sp/><ref refid="a00411_1a390d5311179ec61d163a29c943b3d1a0a086e8b527490b8abe606a8dd76586ab1" kindref="member">MatrixAffordance::stiffness</ref>)</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="a00411_1af6f894084edd9109762b86222995ef2aa814f34f472acef493e9ecf0ffccdcae6" kindref="member">ScalarAffordance::mechanicalPotentialEnergy</ref>;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(affordanceM<sp/>==<sp/><ref refid="a00411_1a390d5311179ec61d163a29c943b3d1a0a1b0fce0a361af9d6e59694b4c51524f9" kindref="member">MatrixAffordance::microMagneticHessian</ref>)</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="a00411_1af6f894084edd9109762b86222995ef2aae45c0886135e58c01a313bda2d69e29a" kindref="member">ScalarAffordance::microMagneticPotentialEnergy</ref>;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="a00411_1af6f894084edd9109762b86222995ef2aa9a280b29988e2eac8c0767e0fcefb49c" kindref="member">ScalarAffordance::noAffordance</ref>;</highlight></codeline>
<codeline lineno="192"><highlight class="normal">}</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194" refid="a00411_1ac600b73743c56f0668ae66be56c37c87" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="a00411_1a9f58a3849d4736e5cc314f6f995fe9e7" kindref="member">scalarAffordance</ref>(<ref refid="a00411_1aab9e3e38507d1db7602bc750718c302a" kindref="member">VectorAffordance</ref><sp/>affordanceV)<sp/>{</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(affordanceV<sp/>==<sp/><ref refid="a00411_1aab9e3e38507d1db7602bc750718c302aa2c05161a7e67e946ddc889571aac4e89" kindref="member">VectorAffordance::forces</ref>)</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="a00411_1af6f894084edd9109762b86222995ef2aa814f34f472acef493e9ecf0ffccdcae6" kindref="member">ScalarAffordance::mechanicalPotentialEnergy</ref>;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(affordanceV<sp/>==<sp/><ref refid="a00411_1aab9e3e38507d1db7602bc750718c302aa3cc975e7798ac76d6af4f624e23c6ddc" kindref="member">VectorAffordance::microMagneticForces</ref>)</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="a00411_1af6f894084edd9109762b86222995ef2aae45c0886135e58c01a313bda2d69e29a" kindref="member">ScalarAffordance::microMagneticPotentialEnergy</ref>;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="a00411_1af6f894084edd9109762b86222995ef2aa9a280b29988e2eac8c0767e0fcefb49c" kindref="member">ScalarAffordance::noAffordance</ref>;</highlight></codeline>
<codeline lineno="201"><highlight class="normal">}</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203" refid="a00417" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">AffordanceCollections<sp/>{</highlight></codeline>
<codeline lineno="204" refid="a00417_1abd125ab98018456fb4bd3bdfe28466dc" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/><ref refid="a01386" kindref="compound">AffordanceCollection</ref><sp/><ref refid="a00417_1abd125ab98018456fb4bd3bdfe28466dc" kindref="member">elastoStatics</ref>(<ref refid="a00411_1af6f894084edd9109762b86222995ef2aa814f34f472acef493e9ecf0ffccdcae6" kindref="member">ScalarAffordance::mechanicalPotentialEnergy</ref>,</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="a00411_1aab9e3e38507d1db7602bc750718c302aa2c05161a7e67e946ddc889571aac4e89" kindref="member">VectorAffordance::forces</ref>,<sp/><ref refid="a00411_1a390d5311179ec61d163a29c943b3d1a0a086e8b527490b8abe606a8dd76586ab1" kindref="member">MatrixAffordance::stiffness</ref>);</highlight></codeline>
<codeline lineno="206"><highlight class="normal">}</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">Impl<sp/>{</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">DeduceTypes</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">InputType<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>T&amp;;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">StorageType<sp/><sp/><sp/><sp/><sp/>=<sp/>std::reference_wrapper&lt;T&gt;;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="a00409_1ga0ba1bf25ee478b1b1d9e96c1dcd831a0" kindref="member">ReturnType</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>T&amp;;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">ConstReturnType<sp/>=<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">DeduceTypes&lt;<ref refid="a00410" kindref="compound">std</ref>::reference_wrapper&lt;T&gt;&gt;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">InputType<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>T&amp;;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">StorageType<sp/><sp/><sp/><sp/><sp/>=<sp/>std::reference_wrapper&lt;T&gt;;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="a00409_1ga0ba1bf25ee478b1b1d9e96c1dcd831a0" kindref="member">ReturnType</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>T&amp;;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">ConstReturnType<sp/>=<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">DeduceTypes&lt;<ref refid="a00427" kindref="compound">Eigen</ref>::Ref&lt;T&gt;&gt;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">InputType<sp/><sp/><sp/>=<sp/>Eigen::Ref&lt;T&gt;&amp;;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">StorageType<sp/>=<sp/>Eigen::Ref&lt;T&gt;;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="a00409_1ga0ba1bf25ee478b1b1d9e96c1dcd831a0" kindref="member">ReturnType</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>Eigen::Ref&lt;T&gt;&amp;;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">ConstReturnType<sp/>=<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::Ref&lt;T&gt;&amp;;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="236"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>Impl</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;FESolutions<sp/>sol,<sp/>FEParameter<sp/>para,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>SV<sp/>=<sp/>Eigen::VectorXd,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>PM<sp/>=<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="251" refid="a01402" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="a01402" kindref="compound">FERequirements</ref></highlight></codeline>
<codeline lineno="252"><highlight class="normal">{</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="254" refid="a01402_1ae48f408b98e9eca509c0c344699d53c3" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/><ref refid="a00398_1gaea763c94a1cecbeefc4f8661debcc5a3" kindref="member">FESolutions</ref><sp/><ref refid="a01402_1ae48f408b98e9eca509c0c344699d53c3" kindref="member">globalSolutionTag</ref><sp/>=<sp/>sol;</highlight></codeline>
<codeline lineno="255" refid="a01402_1a3354974c6322fb936ccbef303aaf5650" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/><ref refid="a00398_1ga0c1577fd05efee8475b0f7fef795bbbe" kindref="member">FEParameter</ref><sp/><ref refid="a01402_1a3354974c6322fb936ccbef303aaf5650" kindref="member">parameterTag</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>para;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">SVHelper<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>Impl::DeduceTypes&lt;std::remove_cvref_t&lt;SV&gt;&gt;;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">PMHelper<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>Impl::DeduceTypes&lt;std::remove_cvref_t&lt;PM&gt;&gt;;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">SolutionVectorReturnType<sp/><sp/>=<sp/><ref refid="a00409_1ga0ba1bf25ee478b1b1d9e96c1dcd831a0" kindref="member">SVHelper::ReturnType</ref>;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">ParameterReturnType<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="a00409_1ga0ba1bf25ee478b1b1d9e96c1dcd831a0" kindref="member">PMHelper::ReturnType</ref>;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">SolutionVectorStorageType<sp/>=<sp/>SVHelper::StorageType;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">ParameterStorageType<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>PMHelper::StorageType;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">SolutionVectorInputType<sp/><sp/><sp/>=<sp/>SVHelper::InputType;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">ParameterInputType<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>PMHelper::InputType;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="268" refid="a01402_1a438e8f848c50755740ef8ee17620a284" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="a01402_1a438e8f848c50755740ef8ee17620a284" kindref="member">SolutionVectorType</ref><sp/>=<sp/>SV;</highlight></codeline>
<codeline lineno="269" refid="a01402_1a50a1c42fc0b05811dfc370217fb70169" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="a01402_1a50a1c42fc0b05811dfc370217fb70169" kindref="member">ParameterType</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>PM;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271" refid="a01402_1a00236d0a4c182e56eb7012ba90deabfa" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="a01402_1a00236d0a4c182e56eb7012ba90deabfa" kindref="member">FERequirements</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="272" refid="a01402_1ae5c8a6ed35bbdcc935bb8f41eaffc4b0" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="a01402_1ae5c8a6ed35bbdcc935bb8f41eaffc4b0" kindref="member">FERequirements</ref>(SolutionVectorInputType<sp/>solVec,<sp/>ParameterInputType<sp/><ref refid="a01402_1af11316c1f0fca6982a2d7497bc71a10c" kindref="member">parameter</ref>)</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>sol_{solVec},</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parameter_{<ref refid="a01402_1af11316c1f0fca6982a2d7497bc71a10c" kindref="member">parameter</ref>}<sp/>{}</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="284" refid="a01402_1aafb4ad2fa6c16a3845596f76e6cdeb16" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="a01402" kindref="compound">FERequirements</ref>&amp;<sp/><ref refid="a01402_1aafb4ad2fa6c16a3845596f76e6cdeb16" kindref="member">insertParameter</ref>(ParameterInputType<sp/>val)<sp/>{</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/>parameter_<sp/>=<sp/>val;</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="297" refid="a01402_1ada341483ec62ec030c03d43ab4bd86c9" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="a01402" kindref="compound">FERequirements</ref>&amp;<sp/><ref refid="a01402_1ada341483ec62ec030c03d43ab4bd86c9" kindref="member">insertGlobalSolution</ref>(SolutionVectorInputType<sp/>solVec)<sp/>{</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/>sol_<sp/>=<sp/>solVec;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="308" refid="a01402_1a523ed390dfea00379b5b638e523ddb74" refkind="member"><highlight class="normal"><sp/><sp/>SolutionVectorReturnType<sp/><ref refid="a01402_1a523ed390dfea00379b5b638e523ddb74" kindref="member">globalSolution</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sol_.value();<sp/>}</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="316" refid="a01402_1af9e3a5992b27f22449d1469069e6a964" refkind="member"><highlight class="normal"><sp/><sp/>SVHelper::ConstReturnType<sp/><ref refid="a01402_1af9e3a5992b27f22449d1469069e6a964" kindref="member">globalSolution</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sol_.value();<sp/>}</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="325" refid="a01402_1af11316c1f0fca6982a2d7497bc71a10c" refkind="member"><highlight class="normal"><sp/><sp/>PMHelper::ConstReturnType<sp/><ref refid="a01402_1af11316c1f0fca6982a2d7497bc71a10c" kindref="member">parameter</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>parameter_.value();</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/>;</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="336" refid="a01402_1ad23d77e15365c85e02538358a1803e04" refkind="member"><highlight class="normal"><sp/><sp/>ParameterReturnType<sp/><ref refid="a01402_1ad23d77e15365c85e02538358a1803e04" kindref="member">parameter</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>parameter_.value();<sp/>}</highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight></codeline>
<codeline lineno="344" refid="a01402_1a13fa6d13d47cc0bdf781477c744312c9" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="a01402_1a13fa6d13d47cc0bdf781477c744312c9" kindref="member">populated</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sol_.has_value()<sp/>and<sp/>parameter_.has_value();<sp/>}</highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/>std::optional&lt;SolutionVectorStorageType&gt;<sp/>sol_;</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/>std::optional&lt;ParameterStorageType&gt;<sp/>parameter_;</highlight></codeline>
<codeline lineno="349"><highlight class="normal">};</highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<ref refid="a00398_1gaea763c94a1cecbeefc4f8661debcc5a3" kindref="member">FESolutions</ref><sp/>sol,<sp/><ref refid="a00398_1ga0c1577fd05efee8475b0f7fef795bbbe" kindref="member">FEParameter</ref><sp/>para,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>wrapWithRef<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>SV<sp/>=<sp/>Eigen::VectorXd,</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>PM<sp/>=<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="353" refid="a01406" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="a01406" kindref="compound">FERequirementsFactory</ref></highlight></codeline>
<codeline lineno="354"><highlight class="normal">{</highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">typeEigen<sp/>=<sp/>std::conditional_t&lt;wrapWithRef<sp/>and<sp/>Ikarus::Concepts::EigenMatrix&lt;SV&gt;,<sp/>Eigen::Ref&lt;SV&gt;,<sp/>SV&gt;;</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="359" refid="a01406_1aaa1726433d7a8f409b5d8b54ce5f7e45" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="a01402" kindref="compound">type</ref><sp/>=<sp/><ref refid="a01402" kindref="compound">FERequirements&lt;sol, para, typeEigen, PM&gt;</ref>;</highlight></codeline>
<codeline lineno="360"><highlight class="normal">};</highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>Ikarus</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/ferequirements.hh"/>
  </compounddef>
</doxygen>
