<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="a01956" kind="concept">
    <compoundname>Ikarus::Concepts::NonLinearSolverCheckForPathFollowing</compoundname>
    <includes refid="a00047" local="no">ikarus/utils/concepts.hh</includes>
    <templateparamlist>
      <param>
        <type>typename NLS</type>
      </param>
    </templateparamlist>
    <initializer>template&lt;typename NLS&gt;
concept <ref refid="a01956" kindref="compound">Ikarus::Concepts::NonLinearSolverCheckForPathFollowing</ref> =  requires {
    std::tuple_size&lt;typename NLS::NonLinearOperator::ParameterValues&gt;::value == 2;
    not(std::is_same_v&lt;typename NLS::NonLinearOperator::ValueType, double&gt; and
        ((traits::isSpecializationTypeAndNonTypes&lt;Eigen::Matrix,
                                                  typename NLS::NonLinearOperator::DerivativeType&gt;::value) or
         (traits::isSpecializationTypeNonTypeAndType&lt;Eigen::SparseMatrix,
                                                     typename NLS::NonLinearOperator::DerivativeType&gt;::value)));
  }    </initializer>
    <briefdescription>
<para>Concept to check if a non-linear solver with its non-linear operator satisfies requirements for path following. </para>
    </briefdescription>
    <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>NLS</parametername>
</parameternamelist>
<parameterdescription>
<para>The non-linear solver type. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
    </detaileddescription>
    <location file="/__w/ikarus/ikarus/repo/ikarus/utils/concepts.hh" line="229" column="3"/>
  </compounddef>
</doxygen>
