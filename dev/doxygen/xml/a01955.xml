<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="a01955" kind="class" language="C++" prot="public">
    <compoundname>Ikarus::NonLinearSolverLogger</compoundname>
    <basecompoundref refid="a01959" prot="public" virt="non-virtual">Ikarus::IObserver&lt; NonLinearSolverMessages &gt;</basecompoundref>
    <includes refid="a00137" local="no">ikarus/utils/observer/nonlinearsolverlogger.hh</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="a01955_1ace16ad175fa3ed8a5e3997f519e6d896" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Ikarus::NonLinearSolverLogger::iters_</definition>
        <argsstring></argsstring>
        <name>iters_</name>
        <qualifiedname>Ikarus::NonLinearSolverLogger::iters_</qualifiedname>
        <initializer>{0}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/nonlinearsolverlogger.hh" line="47" column="7" bodyfile="/__w/ikarus/ikarus/repo/ikarus/utils/observer/nonlinearsolverlogger.hh" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="a01955_1a80db03b29b0126a1105af6dcf9d41bfc" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double Ikarus::NonLinearSolverLogger::dNorm_</definition>
        <argsstring></argsstring>
        <name>dNorm_</name>
        <qualifiedname>Ikarus::NonLinearSolverLogger::dNorm_</qualifiedname>
        <initializer>{0}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/nonlinearsolverlogger.hh" line="48" column="10" bodyfile="/__w/ikarus/ikarus/repo/ikarus/utils/observer/nonlinearsolverlogger.hh" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="a01955_1ac370ee8fe9fe91ee0bdfecfeccace3fe" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double Ikarus::NonLinearSolverLogger::rNorm_</definition>
        <argsstring></argsstring>
        <name>rNorm_</name>
        <qualifiedname>Ikarus::NonLinearSolverLogger::rNorm_</qualifiedname>
        <initializer>{0}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/nonlinearsolverlogger.hh" line="49" column="10" bodyfile="/__w/ikarus/ikarus/repo/ikarus/utils/observer/nonlinearsolverlogger.hh" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="a01955_1a401fe49e7356cf0646fc14f5e18b27d7" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double Ikarus::NonLinearSolverLogger::lambda_</definition>
        <argsstring></argsstring>
        <name>lambda_</name>
        <qualifiedname>Ikarus::NonLinearSolverLogger::lambda_</qualifiedname>
        <initializer>{0}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/nonlinearsolverlogger.hh" line="50" column="10" bodyfile="/__w/ikarus/ikarus/repo/ikarus/utils/observer/nonlinearsolverlogger.hh" bodystart="50" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="a01955_1a131da094b77cab07c39b4017d5419dac" prot="public" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>void</type>
        <definition>void Ikarus::NonLinearSolverLogger::updateImpl</definition>
        <argsstring>(NonLinearSolverMessages message) final</argsstring>
        <name>updateImpl</name>
        <qualifiedname>Ikarus::NonLinearSolverLogger::updateImpl</qualifiedname>
        <reimplements refid="a01959_1ac6dc170df122bd224f2a440cedf33934">updateImpl</reimplements>
        <param>
          <type><ref refid="a00390_1ga662b2b6a80547adf4b9ce8b30d87fab5" kindref="member">NonLinearSolverMessages</ref></type>
          <declname>message</declname>
        </param>
        <briefdescription>
<para>Handles the update when a NonLinearSolverMessages is received. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>The NonLinearSolverMessages received. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/nonlinearsolverlogger.hh" line="28" column="8"/>
      </memberdef>
      <memberdef kind="function" id="a01955_1a17558ed4ad25de4e80b2bccdbf670e0b" prot="public" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>void</type>
        <definition>void Ikarus::NonLinearSolverLogger::updateImpl</definition>
        <argsstring>(NonLinearSolverMessages message, double val) final</argsstring>
        <name>updateImpl</name>
        <qualifiedname>Ikarus::NonLinearSolverLogger::updateImpl</qualifiedname>
        <reimplements refid="a01959_1a80d3fd9872a76a02452f42511f780253">updateImpl</reimplements>
        <param>
          <type><ref refid="a00390_1ga662b2b6a80547adf4b9ce8b30d87fab5" kindref="member">NonLinearSolverMessages</ref></type>
          <declname>message</declname>
        </param>
        <param>
          <type>double</type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>Handles the update when a NonLinearSolverMessages with a double value is received. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>The NonLinearSolverMessages received. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>The double value associated with the message. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/nonlinearsolverlogger.hh" line="36" column="8"/>
      </memberdef>
      <memberdef kind="function" id="a01955_1a2a30782a175f8fc1dfb583531718cabf" prot="public" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>void</type>
        <definition>void Ikarus::NonLinearSolverLogger::updateImpl</definition>
        <argsstring>(NonLinearSolverMessages message, int intVal) final</argsstring>
        <name>updateImpl</name>
        <qualifiedname>Ikarus::NonLinearSolverLogger::updateImpl</qualifiedname>
        <reimplements refid="a01959_1a873494234cf33b9cc7179d90ff6f095e">updateImpl</reimplements>
        <param>
          <type><ref refid="a00390_1ga662b2b6a80547adf4b9ce8b30d87fab5" kindref="member">NonLinearSolverMessages</ref></type>
          <declname>message</declname>
        </param>
        <param>
          <type>int</type>
          <declname>intVal</declname>
        </param>
        <briefdescription>
<para>Handles the update when a NonLinearSolverMessages with an integer value is received. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>The NonLinearSolverMessages received. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>intVal</parametername>
</parameternamelist>
<parameterdescription>
<para>The integer value associated with numberOfIterations. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/nonlinearsolverlogger.hh" line="44" column="8"/>
      </memberdef>
      <memberdef kind="function" id="a01959_1aafa35019b0bd7577d9e5b2c209c785bd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ikarus::IObserver&lt; NonLinearSolverMessages  &gt;::update</definition>
        <argsstring>(MessageType message)</argsstring>
        <name>update</name>
        <qualifiedname>Ikarus::IObserver&lt; NonLinearSolverMessages &gt;::update</qualifiedname>
        <param>
          <type><ref refid="a00390_1ga662b2b6a80547adf4b9ce8b30d87fab5" kindref="member">MessageType</ref></type>
          <declname>message</declname>
        </param>
        <briefdescription>
<para>Update method for receiving notifications with a message. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>The message to be received. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" line="36" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" bodystart="36" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="a01959_1a3a477ef465bf14acd9e21673e2bfc595" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ikarus::IObserver&lt; NonLinearSolverMessages  &gt;::update</definition>
        <argsstring>(MessageType message, double val)</argsstring>
        <name>update</name>
        <qualifiedname>Ikarus::IObserver&lt; NonLinearSolverMessages &gt;::update</qualifiedname>
        <param>
          <type><ref refid="a00390_1ga662b2b6a80547adf4b9ce8b30d87fab5" kindref="member">MessageType</ref></type>
          <declname>message</declname>
        </param>
        <param>
          <type>double</type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>Update method for receiving notifications with a message and a double value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>The message to be received. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>The double value associated with the message. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" line="46" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" bodystart="46" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="a01959_1a9ec023872625942d0b64244709966464" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ikarus::IObserver&lt; NonLinearSolverMessages  &gt;::update</definition>
        <argsstring>(MessageType message, int val)</argsstring>
        <name>update</name>
        <qualifiedname>Ikarus::IObserver&lt; NonLinearSolverMessages &gt;::update</qualifiedname>
        <param>
          <type><ref refid="a00390_1ga662b2b6a80547adf4b9ce8b30d87fab5" kindref="member">MessageType</ref></type>
          <declname>message</declname>
        </param>
        <param>
          <type>int</type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>Update method for receiving notifications with a message and an integer value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>The message to be received. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>The integer value associated with the message. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" line="56" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" bodystart="56" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="a01959_1aaa06f0740f435636da206c35951f8c81" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ikarus::IObserver&lt; NonLinearSolverMessages  &gt;::update</definition>
        <argsstring>(MessageType message, const std::string &amp;val)</argsstring>
        <name>update</name>
        <qualifiedname>Ikarus::IObserver&lt; NonLinearSolverMessages &gt;::update</qualifiedname>
        <param>
          <type><ref refid="a00390_1ga662b2b6a80547adf4b9ce8b30d87fab5" kindref="member">MessageType</ref></type>
          <declname>message</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>Update method for receiving notifications with a message and a string value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>The message to be received. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>The string value associated with the message. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" line="66" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" bodystart="66" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="a01959_1a92045cc1701c89ac62395a8e77ff3eba" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ikarus::IObserver&lt; NonLinearSolverMessages  &gt;::update</definition>
        <argsstring>(MessageType message, int val1, double val2)</argsstring>
        <name>update</name>
        <qualifiedname>Ikarus::IObserver&lt; NonLinearSolverMessages &gt;::update</qualifiedname>
        <param>
          <type><ref refid="a00390_1ga662b2b6a80547adf4b9ce8b30d87fab5" kindref="member">MessageType</ref></type>
          <declname>message</declname>
        </param>
        <param>
          <type>int</type>
          <declname>val1</declname>
        </param>
        <param>
          <type>double</type>
          <declname>val2</declname>
        </param>
        <briefdescription>
<para>Update method for receiving notifications with a message and two values (integer and double). </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>The message to be received. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val1</parametername>
</parameternamelist>
<parameterdescription>
<para>The integer value associated with the message. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val2</parametername>
</parameternamelist>
<parameterdescription>
<para>The double value associated with the message. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" line="77" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" bodystart="77" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="a01959_1a04b8667b08713503e82ede950a337950" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ikarus::IObserver&lt; NonLinearSolverMessages  &gt;::update</definition>
        <argsstring>(MessageType message, int val1, const std::string &amp;val2)</argsstring>
        <name>update</name>
        <qualifiedname>Ikarus::IObserver&lt; NonLinearSolverMessages &gt;::update</qualifiedname>
        <param>
          <type><ref refid="a00390_1ga662b2b6a80547adf4b9ce8b30d87fab5" kindref="member">MessageType</ref></type>
          <declname>message</declname>
        </param>
        <param>
          <type>int</type>
          <declname>val1</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>val2</declname>
        </param>
        <briefdescription>
<para>Update method for receiving notifications with a message, an integer value, and a string value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>The message to be received. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val1</parametername>
</parameternamelist>
<parameterdescription>
<para>The integer value associated with the message. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val2</parametername>
</parameternamelist>
<parameterdescription>
<para>The string value associated with the message. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" line="88" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" bodystart="88" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="a01959_1a1d1ef2313a9aecf4e9d475cce837476e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ikarus::IObserver&lt; NonLinearSolverMessages  &gt;::update</definition>
        <argsstring>(MessageType message, const Eigen::VectorXd &amp;vec)</argsstring>
        <name>update</name>
        <qualifiedname>Ikarus::IObserver&lt; NonLinearSolverMessages &gt;::update</qualifiedname>
        <param>
          <type><ref refid="a00390_1ga662b2b6a80547adf4b9ce8b30d87fab5" kindref="member">MessageType</ref></type>
          <declname>message</declname>
        </param>
        <param>
          <type>const Eigen::VectorXd &amp;</type>
          <declname>vec</declname>
        </param>
        <briefdescription>
<para>Update method for receiving notifications with a message and an Eigen::VectorXd. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>The message to be received. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vec</parametername>
</parameternamelist>
<parameterdescription>
<para>The Eigen::VectorXd associated with the message. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" line="98" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" bodystart="98" bodyend="101"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="a01959_1adc6a89c0396fc98e0c095cd8df17b075" prot="public" static="no">
        <type><ref refid="a00390_1ga662b2b6a80547adf4b9ce8b30d87fab5" kindref="member">NonLinearSolverMessages</ref></type>
        <definition>using Ikarus::IObserver&lt; NonLinearSolverMessages  &gt;::MessageType =  NonLinearSolverMessages</definition>
        <argsstring></argsstring>
        <name>MessageType</name>
        <qualifiedname>Ikarus::IObserver&lt; NonLinearSolverMessages &gt;::MessageType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" line="28" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" bodystart="28" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="a01959_1a54cfb0283f65810089183deebc9b4858" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void Ikarus::IObserver&lt; NonLinearSolverMessages  &gt;::updateImpl</definition>
        <argsstring>(MessageType message, const std::string &amp;val)</argsstring>
        <name>updateImpl</name>
        <qualifiedname>Ikarus::IObserver&lt; NonLinearSolverMessages &gt;::updateImpl</qualifiedname>
        <param>
          <type><ref refid="a00390_1ga662b2b6a80547adf4b9ce8b30d87fab5" kindref="member">MessageType</ref></type>
          <declname>message</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" line="107" column="16" bodyfile="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" bodystart="107" bodyend="107"/>
      </memberdef>
      <memberdef kind="function" id="a01959_1a75b2d9ce4234e841256066b2cd051bc9" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void Ikarus::IObserver&lt; NonLinearSolverMessages  &gt;::updateImpl</definition>
        <argsstring>(MessageType message, int val1, const std::string &amp;val2)</argsstring>
        <name>updateImpl</name>
        <qualifiedname>Ikarus::IObserver&lt; NonLinearSolverMessages &gt;::updateImpl</qualifiedname>
        <param>
          <type><ref refid="a00390_1ga662b2b6a80547adf4b9ce8b30d87fab5" kindref="member">MessageType</ref></type>
          <declname>message</declname>
        </param>
        <param>
          <type>int</type>
          <declname>val1</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>val2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" line="108" column="16" bodyfile="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" bodystart="108" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="a01959_1ae6d9838e1ced7fcf14b20457144a47b2" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void Ikarus::IObserver&lt; NonLinearSolverMessages  &gt;::updateImpl</definition>
        <argsstring>(MessageType message, int val1, double val2)</argsstring>
        <name>updateImpl</name>
        <qualifiedname>Ikarus::IObserver&lt; NonLinearSolverMessages &gt;::updateImpl</qualifiedname>
        <param>
          <type><ref refid="a00390_1ga662b2b6a80547adf4b9ce8b30d87fab5" kindref="member">MessageType</ref></type>
          <declname>message</declname>
        </param>
        <param>
          <type>int</type>
          <declname>val1</declname>
        </param>
        <param>
          <type>double</type>
          <declname>val2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" line="109" column="16" bodyfile="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" bodystart="109" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="a01959_1a5d9bfa8a6046d612106e4a2cb8e8d735" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void Ikarus::IObserver&lt; NonLinearSolverMessages  &gt;::updateImpl</definition>
        <argsstring>(MessageType message, const Eigen::VectorXd &amp;vec)</argsstring>
        <name>updateImpl</name>
        <qualifiedname>Ikarus::IObserver&lt; NonLinearSolverMessages &gt;::updateImpl</qualifiedname>
        <param>
          <type><ref refid="a00390_1ga662b2b6a80547adf4b9ce8b30d87fab5" kindref="member">MessageType</ref></type>
          <declname>message</declname>
        </param>
        <param>
          <type>const Eigen::VectorXd &amp;</type>
          <declname>vec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" line="110" column="16" bodyfile="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" bodystart="110" bodyend="110"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Implementation of an observer for logging non-linear solvers.</para>
<para>This class inherits from the <ref refid="a01959" kindref="compound">IObserver</ref> class and provides specific implementations for updating based on NonLinearSolverMessages. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>Ikarus::IObserver&lt; NonLinearSolverMessages &gt;</label>
        <link refid="a01959"/>
        <childnode refid="3" relation="template-instance">
          <edgelabel>&lt; NonLinearSolverMessages &gt;</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>Ikarus::IObserver&lt; MT &gt;</label>
        <link refid="a01959"/>
      </node>
      <node id="1">
        <label>Ikarus::NonLinearSolverLogger</label>
        <link refid="a01955"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>Ikarus::IObserver&lt; NonLinearSolverMessages &gt;</label>
        <link refid="a01959"/>
        <childnode refid="3" relation="template-instance">
          <edgelabel>&lt; NonLinearSolverMessages &gt;</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>Ikarus::IObserver&lt; MT &gt;</label>
        <link refid="a01959"/>
      </node>
      <node id="1">
        <label>Ikarus::NonLinearSolverLogger</label>
        <link refid="a01955"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/nonlinearsolverlogger.hh" line="20" column="1" bodyfile="/__w/ikarus/ikarus/repo/ikarus/utils/observer/nonlinearsolverlogger.hh" bodystart="21" bodyend="51"/>
    <listofallmembers>
      <member refid="a01955_1a80db03b29b0126a1105af6dcf9d41bfc" prot="private" virt="non-virtual"><scope>Ikarus::NonLinearSolverLogger</scope><name>dNorm_</name></member>
      <member refid="a01955_1ace16ad175fa3ed8a5e3997f519e6d896" prot="private" virt="non-virtual"><scope>Ikarus::NonLinearSolverLogger</scope><name>iters_</name></member>
      <member refid="a01955_1a401fe49e7356cf0646fc14f5e18b27d7" prot="private" virt="non-virtual"><scope>Ikarus::NonLinearSolverLogger</scope><name>lambda_</name></member>
      <member refid="a01959_1adc6a89c0396fc98e0c095cd8df17b075" prot="public" virt="non-virtual"><scope>Ikarus::NonLinearSolverLogger</scope><name>MessageType</name></member>
      <member refid="a01955_1ac370ee8fe9fe91ee0bdfecfeccace3fe" prot="private" virt="non-virtual"><scope>Ikarus::NonLinearSolverLogger</scope><name>rNorm_</name></member>
      <member refid="a01959_1aafa35019b0bd7577d9e5b2c209c785bd" prot="public" virt="non-virtual"><scope>Ikarus::NonLinearSolverLogger</scope><name>update</name></member>
      <member refid="a01959_1a3a477ef465bf14acd9e21673e2bfc595" prot="public" virt="non-virtual"><scope>Ikarus::NonLinearSolverLogger</scope><name>update</name></member>
      <member refid="a01959_1a9ec023872625942d0b64244709966464" prot="public" virt="non-virtual"><scope>Ikarus::NonLinearSolverLogger</scope><name>update</name></member>
      <member refid="a01959_1aaa06f0740f435636da206c35951f8c81" prot="public" virt="non-virtual"><scope>Ikarus::NonLinearSolverLogger</scope><name>update</name></member>
      <member refid="a01959_1a92045cc1701c89ac62395a8e77ff3eba" prot="public" virt="non-virtual"><scope>Ikarus::NonLinearSolverLogger</scope><name>update</name></member>
      <member refid="a01959_1a04b8667b08713503e82ede950a337950" prot="public" virt="non-virtual"><scope>Ikarus::NonLinearSolverLogger</scope><name>update</name></member>
      <member refid="a01959_1a1d1ef2313a9aecf4e9d475cce837476e" prot="public" virt="non-virtual"><scope>Ikarus::NonLinearSolverLogger</scope><name>update</name></member>
      <member refid="a01955_1a131da094b77cab07c39b4017d5419dac" prot="public" virt="virtual"><scope>Ikarus::NonLinearSolverLogger</scope><name>updateImpl</name></member>
      <member refid="a01955_1a17558ed4ad25de4e80b2bccdbf670e0b" prot="public" virt="virtual"><scope>Ikarus::NonLinearSolverLogger</scope><name>updateImpl</name></member>
      <member refid="a01955_1a2a30782a175f8fc1dfb583531718cabf" prot="public" virt="virtual"><scope>Ikarus::NonLinearSolverLogger</scope><name>updateImpl</name></member>
      <member refid="a01959_1a54cfb0283f65810089183deebc9b4858" prot="protected" virt="virtual" ambiguityscope="IObserver&lt; NonLinearSolverMessages &gt;::"><scope>Ikarus::NonLinearSolverLogger</scope><name>updateImpl</name></member>
      <member refid="a01959_1a75b2d9ce4234e841256066b2cd051bc9" prot="protected" virt="virtual" ambiguityscope="IObserver&lt; NonLinearSolverMessages &gt;::"><scope>Ikarus::NonLinearSolverLogger</scope><name>updateImpl</name></member>
      <member refid="a01959_1ae6d9838e1ced7fcf14b20457144a47b2" prot="protected" virt="virtual" ambiguityscope="IObserver&lt; NonLinearSolverMessages &gt;::"><scope>Ikarus::NonLinearSolverLogger</scope><name>updateImpl</name></member>
      <member refid="a01959_1a5d9bfa8a6046d612106e4a2cb8e8d735" prot="protected" virt="virtual" ambiguityscope="IObserver&lt; NonLinearSolverMessages &gt;::"><scope>Ikarus::NonLinearSolverLogger</scope><name>updateImpl</name></member>
      <member refid="a01959_1a39df4c52c73f721bb2ef1c90fe76d74a" prot="public" virt="virtual"><scope>Ikarus::NonLinearSolverLogger</scope><name>~IObserver</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
