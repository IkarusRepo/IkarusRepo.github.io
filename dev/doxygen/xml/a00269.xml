<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="a00269" kind="file" language="C++">
    <compoundname>neohooke.hh</compoundname>
    <includes refid="a03068" local="no">ikarus/finiteelements/mechanics/materials/interface.hh</includes>
    <includes refid="a00275" local="no">ikarus/finiteelements/mechanics/materials/materialhelpers.hh</includes>
    <includes refid="a00032" local="no">ikarus/utils/tensorutils.hh</includes>
    <includedby refid="a00266" local="no">factory.hh</includedby>
    <incdepgraph>
      <node id="24">
        <label>ikarus/assembler/dirichletbcenforcement.hh</label>
        <link refid="a00347"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>neohooke.hh</label>
        <link refid="a00269"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>ikarus/finiteelements/mechanics/materials/interface.hh</label>
        <link refid="a03068"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>ikarus/finiteelements/mechanics/materials/materialhelpers.hh</label>
        <link refid="a00275"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>ikarus/finiteelements/mechanics/materials/strainconversions.hh</label>
        <link refid="a00230"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>tags.hh</label>
        <link refid="a00233"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>ikarus/finiteelements/physicshelper.hh</label>
        <link refid="a00194"/>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>ikarus/utils/concepts.hh</label>
        <link refid="a03101"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>ikarus/utils/linearalgebrahelper.hh</label>
        <link refid="a00017"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>ikarus/utils/makeenum.hh</label>
        <link refid="a00011"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>ikarus/utils/math.hh</label>
        <link refid="a00044"/>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>ikarus/utils/tensorutils.hh</label>
        <link refid="a00032"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>ikarus/utils/traits.hh</label>
        <link refid="a00068"/>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>Eigen/Core</label>
      </node>
      <node id="21">
        <label>Eigen/Dense</label>
      </node>
      <node id="22">
        <label>Eigen/Sparse</label>
      </node>
      <node id="23">
        <label>autodiff/forward/dual/dual.hpp</label>
      </node>
      <node id="15">
        <label>concepts</label>
      </node>
      <node id="6">
        <label>dune/common/exceptions.hh</label>
      </node>
      <node id="31">
        <label>dune/common/float_cmp.hh</label>
      </node>
      <node id="28">
        <label>dune/common/hybridutilities.hh</label>
      </node>
      <node id="13">
        <label>dune/common/promotiontraits.hh</label>
      </node>
      <node id="35">
        <label>dune/common/tuplevector.hh</label>
      </node>
      <node id="19">
        <label>dune/functions/functionspacebases/basistags.hh</label>
      </node>
      <node id="20">
        <label>dune/functions/functionspacebases/lagrangebasis.hh</label>
      </node>
      <node id="36">
        <label>dune/istl/bvector.hh</label>
      </node>
      <node id="26">
        <label>functional</label>
      </node>
      <node id="33">
        <label>iosfwd</label>
      </node>
      <node id="10">
        <label>numeric</label>
      </node>
      <node id="34">
        <label>random</label>
      </node>
      <node id="11">
        <label>ranges</label>
      </node>
      <node id="27">
        <label>tuple</label>
      </node>
      <node id="16">
        <label>type_traits</label>
      </node>
      <node id="12">
        <label>unsupported/Eigen/CXX11/Tensor</label>
      </node>
      <node id="7">
        <label>unsupported/Eigen/MatrixFunctions</label>
      </node>
      <node id="17">
        <label>utility</label>
      </node>
      <node id="18">
        <label>vector</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="4">
        <label>linearelastic.hh</label>
        <link refid="a00224"/>
      </node>
      <node id="3">
        <label>materials.hh</label>
        <link refid="a03059"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>factory.hh</label>
        <link refid="a00266"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>neohooke.hh</label>
        <link refid="a00269"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>resultevaluators.hh</label>
        <link refid="a00353"/>
      </node>
      <node id="5">
        <label>material.hh</label>
        <link refid="a00158"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>_ikarus.cc</label>
        <link refid="a00365"/>
      </node>
      <node id="6">
        <label>materials.hh</label>
        <link refid="a03062"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="a01566" prot="public">Ikarus::Materials::NeoHookeT</innerclass>
    <innernamespace refid="a00411">Ikarus</innernamespace>
    <innernamespace refid="a00422">Ikarus::Materials</innernamespace>
    <briefdescription>
<para>Implementation of the NeoHooke material model. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>SPDX-FileCopyrightText:<sp/>2021-2025<sp/>The<sp/>Ikarus<sp/>Developers<sp/>mueller@ibb.uni-stuttgart.de</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>SPDX-License-Identifier:<sp/>LGPL-3.0-or-later</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="a03068" kindref="compound">ikarus/finiteelements/mechanics/materials/interface.hh</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="a00275" kindref="compound">ikarus/finiteelements/mechanics/materials/materialhelpers.hh</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="a00032" kindref="compound">ikarus/utils/tensorutils.hh</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="a00422" kindref="compound">Ikarus::Materials</ref><sp/>{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ST&gt;</highlight></codeline>
<codeline lineno="37" refid="a01566" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="a01566" kindref="compound">NeoHookeT</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="a01622" kindref="compound">Material</ref>&lt;NeoHookeT&lt;ST&gt;&gt;</highlight></codeline>
<codeline lineno="38"><highlight class="normal">{</highlight></codeline>
<codeline lineno="39" refid="a01566_1a3dba82ed47fda4d4552755130694cf45" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="a01566_1a3dba82ed47fda4d4552755130694cf45" kindref="member">ScalarType</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>ST;</highlight></codeline>
<codeline lineno="40" refid="a01566_1a5780894401186bf48c3de6a11e2665f5" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="a01566_1a5780894401186bf48c3de6a11e2665f5" kindref="member">dim</ref><sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="41" refid="a01566_1ab439ece776e63f03eb2fe4d330353196" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="a01566_1ab439ece776e63f03eb2fe4d330353196" kindref="member">StrainMatrix</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>Eigen::Matrix&lt;ScalarType,<sp/>dim,<sp/>dim&gt;;</highlight></codeline>
<codeline lineno="42" refid="a01566_1a3f1a8232d382de393877cf5886a75c89" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="a01566_1a3f1a8232d382de393877cf5886a75c89" kindref="member">StressMatrix</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="a01566_1ab439ece776e63f03eb2fe4d330353196" kindref="member">StrainMatrix</ref>;</highlight></codeline>
<codeline lineno="43" refid="a01566_1a83c093e1b1475f4fe70067b55331233c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="a01566_1a83c093e1b1475f4fe70067b55331233c" kindref="member">MaterialTensor</ref><sp/><sp/><sp/><sp/><sp/>=<sp/>Eigen::TensorFixedSize&lt;ScalarType,<sp/>Eigen::Sizes&lt;dim,<sp/>dim,<sp/>dim,<sp/>dim&gt;&gt;;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45" refid="a01566_1adaf344b4b732a57b259f6bbfbe24b40a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="a01710" kindref="compound">MaterialParameters</ref><sp/>=<sp/><ref refid="a01710" kindref="compound">LamesFirstParameterAndShearModulus</ref>;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="a01566_1aa5a10299ec0ec07b2f7b8d6d33da7f45" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="a01566_1aa5a10299ec0ec07b2f7b8d6d33da7f45" kindref="member">strainTag</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="a00400_1ggacef1e451de1a99845c59d7391064fb8faea40a9960a7a89c4f366beeab85d07d2" kindref="member">StrainTags::rightCauchyGreenTensor</ref>;</highlight></codeline>
<codeline lineno="48" refid="a01566_1a8b3890e8fcee130fff7d144ba5f245b0" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="a01566_1a8b3890e8fcee130fff7d144ba5f245b0" kindref="member">stressTag</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="a00400_1gga70b4ce43c53cc5e949d49919f437501eab13248d68ac5516c015337b68346fc21" kindref="member">StressTags::PK2</ref>;</highlight></codeline>
<codeline lineno="49" refid="a01566_1af214c69a1e904c098bc647c3786518d8" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="a01566_1af214c69a1e904c098bc647c3786518d8" kindref="member">tangentModuliTag</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="a00400_1gga05ac785124262c1e323d2f937d520a1bad92a8333dd3ccb895cc65f7455b71206" kindref="member">TangentModuliTags::Material</ref>;</highlight></codeline>
<codeline lineno="50" refid="a01566_1ad54b9a96b0184f30eca97121e902a753" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="a01566_1ad54b9a96b0184f30eca97121e902a753" kindref="member">energyAcceptsVoigt</ref><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="51" refid="a01566_1a79c4e41a110784e9d6aac5006ce08479" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="a01566_1a79c4e41a110784e9d6aac5006ce08479" kindref="member">stressToVoigt</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="52" refid="a01566_1a82a588fd6e602b10831f25dacaa23239" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="a01566_1a82a588fd6e602b10831f25dacaa23239" kindref="member">stressAcceptsVoigt</ref><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="53" refid="a01566_1a73a0152530e9583450136710d9a15593" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="a01566_1a73a0152530e9583450136710d9a15593" kindref="member">moduliToVoigt</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="54" refid="a01566_1a4887a57a3267c6fa57eff665fa6a418e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="a01566_1a4887a57a3267c6fa57eff665fa6a418e" kindref="member">moduliAcceptsVoigt</ref><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="55" refid="a01566_1adcaf4114163835af544b5f626889629c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="a01566_1adcaf4114163835af544b5f626889629c" kindref="member">derivativeFactorImpl</ref><sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57" refid="a01566_1ab7409557fd6b8664c9a17a74ed429221" refkind="member"><highlight class="normal"><sp/><sp/>[[nodiscard]]<sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="a01566_1ab7409557fd6b8664c9a17a74ed429221" kindref="member">nameImpl</ref>()<sp/>noexcept<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;NeoHooke&quot;</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="63" refid="a01566_1a99479e4c203b411bbda554d36c6cba3d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="a01566_1a99479e4c203b411bbda554d36c6cba3d" kindref="member">NeoHookeT</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="a01710" kindref="compound">MaterialParameters</ref>&amp;<sp/>mpt)</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>materialParameter_{mpt}<sp/>{}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="69" refid="a01566_1a4576e0e649587e2bc050395b423bc76d" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="a01710" kindref="compound">MaterialParameters</ref><sp/><ref refid="a01566_1a4576e0e649587e2bc050395b423bc76d" kindref="member">materialParametersImpl</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>materialParameter_;<sp/>}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Derived&gt;</highlight></codeline>
<codeline lineno="78" refid="a01566_1a8ff14eaeedc7a42428bb3a5236c60fdf" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="a01566_1a3dba82ed47fda4d4552755130694cf45" kindref="member">ScalarType</ref><sp/><ref refid="a01566_1a8ff14eaeedc7a42428bb3a5236c60fdf" kindref="member">storedEnergyImpl</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::MatrixBase&lt;Derived&gt;&amp;<sp/>C)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_assert</highlight><highlight class="normal">(Concepts::EigenMatrixOrVoigtNotation3&lt;Derived&gt;);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>(!<ref refid="a02096" kindref="compound">Concepts::EigenVector&lt;Derived&gt;</ref>)<sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>traceC<sp/>=<sp/>C.trace();</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>detC<sp/><sp/><sp/>=<sp/>C.determinant();</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Impl::checkPositiveOrAbort(detC);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>logdetF<sp/>=<sp/>log(sqrt(detC));</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>materialParameter_.<ref refid="a01710_1a3558ad06d2a831f0d412d76956d516f8" kindref="member">mu</ref><sp/>/<sp/>2.0<sp/>*<sp/>(traceC<sp/>-<sp/>3<sp/>-<sp/>2<sp/>*<sp/>logdetF)<sp/>+</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>materialParameter_.<ref refid="a01710_1a0157695e9fc8b735e86f828cc35b64fc" kindref="member">lambda</ref><sp/>/<sp/>2.0<sp/>*<sp/>logdetF<sp/>*<sp/>logdetF;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_assert</highlight><highlight class="normal">(!<ref refid="a02096" kindref="compound">Concepts::EigenVector&lt;Derived&gt;</ref>,</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;NeoHooke<sp/>energy<sp/>can<sp/>only<sp/>be<sp/>called<sp/>with<sp/>a<sp/>matrix<sp/>and<sp/>not<sp/>a<sp/>vector<sp/>in<sp/>Voigt<sp/>notation&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>voigt,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Derived&gt;</highlight></codeline>
<codeline lineno="100" refid="a01566_1a9c9a397c7c951d33adc8887f795a87c2" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="a01566_1a3f1a8232d382de393877cf5886a75c89" kindref="member">StressMatrix</ref><sp/><ref refid="a01566_1a9c9a397c7c951d33adc8887f795a87c2" kindref="member">stressesImpl</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::MatrixBase&lt;Derived&gt;&amp;<sp/>C)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_assert</highlight><highlight class="normal">(Concepts::EigenMatrixOrVoigtNotation3&lt;Derived&gt;);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>(!voigt)<sp/>{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>(!<ref refid="a02096" kindref="compound">Concepts::EigenVector&lt;Derived&gt;</ref>)<sp/>{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>detC<sp/>=<sp/>C.determinant();</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Impl::checkPositiveOrAbort(detC);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>logdetF<sp/>=<sp/>log(sqrt(detC));</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>invC<sp/><sp/><sp/><sp/>=<sp/>C.inverse().eval();</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(materialParameter_.<ref refid="a01710_1a3558ad06d2a831f0d412d76956d516f8" kindref="member">mu</ref><sp/>*<sp/>(StrainMatrix::Identity()<sp/>-<sp/>invC)<sp/>+<sp/>materialParameter_.<ref refid="a01710_1a0157695e9fc8b735e86f828cc35b64fc" kindref="member">lambda</ref><sp/>*<sp/>logdetF<sp/>*<sp/>invC)</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.eval();</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_assert</highlight><highlight class="normal">(!<ref refid="a02096" kindref="compound">Concepts::EigenVector&lt;Derived&gt;</ref>,</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;NeoHooke<sp/>can<sp/>only<sp/>be<sp/>called<sp/>with<sp/>a<sp/>matrix<sp/>and<sp/>not<sp/>a<sp/>vector<sp/>in<sp/>Voigt<sp/>notation&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_assert</highlight><highlight class="normal">(voigt<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;NeoHooke<sp/>does<sp/>not<sp/>support<sp/>returning<sp/>stresses<sp/>in<sp/>Voigt<sp/>notation&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>voigt,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Derived&gt;</highlight></codeline>
<codeline lineno="125" refid="a01566_1a92c9a4a1de6a303ade0393299b587657" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="a01566_1a83c093e1b1475f4fe70067b55331233c" kindref="member">MaterialTensor</ref><sp/><ref refid="a01566_1a92c9a4a1de6a303ade0393299b587657" kindref="member">tangentModuliImpl</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::MatrixBase&lt;Derived&gt;&amp;<sp/>C)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_assert</highlight><highlight class="normal">(Concepts::EigenMatrixOrVoigtNotation3&lt;Derived&gt;);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>(!voigt)<sp/>{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>invC<sp/>=<sp/>C.inverse().eval();</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>detC<sp/>=<sp/>C.determinant();</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Impl::checkPositiveOrAbort(detC);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>logdetF<sp/>=<sp/>log(sqrt(detC));</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>CTinv<sp/><sp/><sp/>=<sp/><ref refid="a00407_1ga5cfd9d098384fb067d897b3c0499b447" kindref="member">tensorView</ref>(invC,<sp/>std::array&lt;Eigen::Index,<sp/>2&gt;({3,<sp/>3}));</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="a01566_1a83c093e1b1475f4fe70067b55331233c" kindref="member">MaterialTensor</ref><sp/>moduli<sp/>=<sp/>(materialParameter_.<ref refid="a01710_1a0157695e9fc8b735e86f828cc35b64fc" kindref="member">lambda</ref><sp/>*<sp/><ref refid="a00407_1gab2cea9ac847cc3635812467c9d96ceb4" kindref="member">dyadic</ref>(CTinv,<sp/>CTinv)<sp/>+</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2<sp/>*<sp/>(materialParameter_.<ref refid="a01710_1a3558ad06d2a831f0d412d76956d516f8" kindref="member">mu</ref><sp/>-<sp/>materialParameter_.<ref refid="a01710_1a0157695e9fc8b735e86f828cc35b64fc" kindref="member">lambda</ref><sp/>*<sp/>logdetF)<sp/>*</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="a00407_1gaea03dbfcd8f85ef7af004c7e09244aa9" kindref="member">symTwoSlots</ref>(<ref refid="a00407_1ga8fa2b440586483c1ee0f9b90b9081da2" kindref="member">fourthOrderIKJL</ref>(invC,<sp/>invC),<sp/>{2,<sp/>3}))</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.eval();</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>moduli;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_assert</highlight><highlight class="normal">(voigt<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;NeoHooke<sp/>does<sp/>not<sp/>support<sp/>returning<sp/>tangent<sp/>moduli<sp/>in<sp/>Voigt<sp/>notation&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>STO&gt;</highlight></codeline>
<codeline lineno="149" refid="a01566_1a2b1ec4bb9f62bdcfbfb9c0d43a2e3955" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="a01566_1a2b1ec4bb9f62bdcfbfb9c0d43a2e3955" kindref="member">rebind</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="a01566" kindref="compound">NeoHookeT&lt;STO&gt;</ref>(materialParameter_);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><ref refid="a01566_1adaf344b4b732a57b259f6bbfbe24b40a" kindref="member">MaterialParameters</ref><sp/>materialParameter_;</highlight></codeline>
<codeline lineno="155"><highlight class="normal">};</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="160" refid="a00422_1a4bf1415fc81c6cacecd347ec4b928def" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="a01566" kindref="compound">NeoHooke</ref><sp/>=<sp/><ref refid="a01566" kindref="compound">NeoHookeT&lt;double&gt;</ref>;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>Ikarus::Materials</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/hyperelastic/neohooke.hh"/>
  </compounddef>
</doxygen>
