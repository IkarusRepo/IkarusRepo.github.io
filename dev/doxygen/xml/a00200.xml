<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="a00200" kind="file" language="C++">
    <compoundname>adaptivestepsizing.hh</compoundname>
    <includes refid="a00197" local="no">ikarus/controlroutines/pathfollowingfunctions.hh</includes>
    <includes refid="a00152" local="no">ikarus/solver/nonlinearsolver/solverinfos.hh</includes>
    <includedby refid="a00194" local="no">pathfollowing.hh</includedby>
    <includedby refid="a00188" local="no">pathfollowing.inl</includedby>
    <incdepgraph>
      <node id="23">
        <label>ikarus/assembler/dirichletbcenforcement.hh</label>
        <link refid="a00176"/>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>adaptivestepsizing.hh</label>
        <link refid="a00200"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>ikarus/controlroutines/pathfollowingfunctions.hh</label>
        <link refid="a00197"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>ikarus/finiteelements/mechanics/materials/tags.hh</label>
        <link refid="a00242"/>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>ikarus/solver/linearsolver/linearsolver.hh</label>
        <link refid="a00146"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>ikarus/solver/nonlinearsolver/solverinfos.hh</label>
        <link refid="a00152"/>
      </node>
      <node id="16">
        <label>ikarus/utils/concepts.hh</label>
        <link refid="a00047"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>ikarus/utils/defaultfunctions.hh</label>
        <link refid="a00065"/>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>linearalgebrahelper.hh</label>
        <link refid="a00023"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>ikarus/utils/makeenum.hh</label>
        <link refid="a00005"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>ikarus/utils/traits.hh</label>
        <link refid="a00011"/>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>Eigen/Core</label>
      </node>
      <node id="20">
        <label>Eigen/Dense</label>
      </node>
      <node id="21">
        <label>Eigen/Sparse</label>
      </node>
      <node id="14">
        <label>Eigen/SparseCore</label>
      </node>
      <node id="22">
        <label>autodiff/forward/dual/dual.hpp</label>
      </node>
      <node id="3">
        <label>cmath</label>
      </node>
      <node id="17">
        <label>concepts</label>
      </node>
      <node id="8">
        <label>dune/common/exceptions.hh</label>
      </node>
      <node id="28">
        <label>dune/common/hybridutilities.hh</label>
      </node>
      <node id="34">
        <label>dune/common/tuplevector.hh</label>
      </node>
      <node id="18">
        <label>dune/functions/functionspacebases/basistags.hh</label>
      </node>
      <node id="19">
        <label>dune/functions/functionspacebases/lagrangebasis.hh</label>
      </node>
      <node id="35">
        <label>dune/istl/bvector.hh</label>
      </node>
      <node id="26">
        <label>functional</label>
      </node>
      <node id="31">
        <label>iosfwd</label>
      </node>
      <node id="11">
        <label>memory</label>
      </node>
      <node id="4">
        <label>optional</label>
      </node>
      <node id="32">
        <label>random</label>
      </node>
      <node id="33">
        <label>ranges</label>
      </node>
      <node id="5">
        <label>string</label>
      </node>
      <node id="27">
        <label>tuple</label>
      </node>
      <node id="12">
        <label>type_traits</label>
      </node>
      <node id="6">
        <label>utility</label>
      </node>
      <node id="13">
        <label>variant</label>
      </node>
      <node id="7">
        <label>vector</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1">
        <label>adaptivestepsizing.hh</label>
        <link refid="a00200"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>pathfollowing.hh</label>
        <link refid="a00194"/>
      </node>
      <node id="3">
        <label>pathfollowing.inl</label>
        <link refid="a00188"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="a01296" prot="public">Ikarus::AdaptiveStepSizing::NoOp</innerclass>
    <innerclass refid="a01300" prot="public">Ikarus::AdaptiveStepSizing::IterationBased</innerclass>
    <innernamespace refid="a00384">Ikarus</innernamespace>
    <innernamespace refid="a00386">Ikarus::AdaptiveStepSizing</innernamespace>
    <briefdescription>
<para>Contains the AdaptiveStepSizing namespace with strategies for adaptive step sizing. </para>
    </briefdescription>
    <detaileddescription>
<para>This file defines two strategies for adaptive step sizing: NoOp and IterationBased. </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>SPDX-FileCopyrightText:<sp/>2021-2025<sp/>The<sp/>Ikarus<sp/>Developers<sp/>mueller@ibb.uni-stuttgart.de</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>SPDX-License-Identifier:<sp/>LGPL-3.0-or-later</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="a00197" kindref="compound">ikarus/controlroutines/pathfollowingfunctions.hh</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="a00152" kindref="compound">ikarus/solver/nonlinearsolver/solverinfos.hh</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17" refid="a00386" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="a00386" kindref="compound">Ikarus::AdaptiveStepSizing</ref><sp/>{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="24" refid="a01296" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="a01296" kindref="compound">NoOp</ref></highlight></codeline>
<codeline lineno="25"><highlight class="normal">{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>NLO&gt;</highlight></codeline>
<codeline lineno="37" refid="a01296_1a7e3bcfe2fdfa61730adaccde62fad844" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="a01296_1a7e3bcfe2fdfa61730adaccde62fad844" kindref="member">operator()</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="a01712" kindref="compound">NonLinearSolverInformation</ref>&amp;<sp/>solverInfo,<sp/><ref refid="a01316" kindref="compound">SubsidiaryArgs</ref>&amp;<sp/>subsidiaryArgs,</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>NLO&amp;<sp/>nonLinearOperator)<sp/>{}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="a01296_1af42dff6b9945230918607a14f159e52e" refkind="member"><highlight class="normal"><sp/><sp/>[[nodiscard]]<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="a01296_1af42dff6b9945230918607a14f159e52e" kindref="member">targetIterations</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/>}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="50" refid="a01296_1aae9af895e735c2c5f87a9e2eb77aa737" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="a01296_1aae9af895e735c2c5f87a9e2eb77aa737" kindref="member">setTargetIterations</ref>([[maybe_unused]]<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="a01296_1af42dff6b9945230918607a14f159e52e" kindref="member">targetIterations</ref>)<sp/>{}</highlight></codeline>
<codeline lineno="51"><highlight class="normal">};</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="63" refid="a01300" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="a01300" kindref="compound">IterationBased</ref></highlight></codeline>
<codeline lineno="64"><highlight class="normal">{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>NLO&gt;</highlight></codeline>
<codeline lineno="76" refid="a01300_1a5869ac09a02a7b2222873ca31a30989e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="a01300_1a5869ac09a02a7b2222873ca31a30989e" kindref="member">operator()</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="a01712" kindref="compound">NonLinearSolverInformation</ref>&amp;<sp/>solverInfo,<sp/><ref refid="a01316" kindref="compound">SubsidiaryArgs</ref>&amp;<sp/>subsidiaryArgs,</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>NLO&amp;<sp/>nonLinearOperator)<sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(subsidiaryArgs.<ref refid="a01316_1a217c729e1ae8b05a98c852f19b0d6ae5" kindref="member">currentStep</ref><sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(targetIterations_<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DUNE_THROW(Dune::InvalidStateException,</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;TargetIterations<sp/>should<sp/>not<sp/>be<sp/>equal<sp/>to<sp/>0.<sp/>Try<sp/>calling<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;setTargetIterations(int)<sp/>first.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>previousIterations<sp/>=<sp/>solverInfo.<ref refid="a01712_1a81570cd3d9f6589a4d1ba81211f41b99" kindref="member">iterations</ref>;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(previousIterations<sp/>&gt;<sp/>targetIterations_)</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>subsidiaryArgs.<ref refid="a01316_1a9c0bca7ed999dcf751648d41b5d9aa78" kindref="member">stepSize</ref><sp/>=</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sqrt(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(targetIterations_)<sp/>/<sp/>previousIterations)<sp/>*<sp/>subsidiaryArgs.<ref refid="a01316_1a9c0bca7ed999dcf751648d41b5d9aa78" kindref="member">stepSize</ref>;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="94" refid="a01300_1aabdaad05b950b53e014624271a16fd9c" refkind="member"><highlight class="normal"><sp/><sp/>[[nodiscard]]<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="a01300_1aabdaad05b950b53e014624271a16fd9c" kindref="member">targetIterations</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>targetIterations_;<sp/>}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="100" refid="a01300_1a52017ebcd89859d5ae214cc8767ef78d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="a01300_1a52017ebcd89859d5ae214cc8767ef78d" kindref="member">setTargetIterations</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="a01300_1aabdaad05b950b53e014624271a16fd9c" kindref="member">targetIterations</ref>)<sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="a01300_1aabdaad05b950b53e014624271a16fd9c" kindref="member">targetIterations</ref><sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DUNE_THROW(Dune::InvalidStateException,<sp/></highlight><highlight class="stringliteral">&quot;TargetIterations<sp/>should<sp/>not<sp/>be<sp/>equal<sp/>to<sp/>0.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>targetIterations_<sp/>=<sp/><ref refid="a01300_1aabdaad05b950b53e014624271a16fd9c" kindref="member">targetIterations</ref>;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>targetIterations_{0};</highlight></codeline>
<codeline lineno="108"><highlight class="normal">};</highlight></codeline>
<codeline lineno="109"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>Ikarus::AdaptiveStepSizing</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/__w/ikarus/ikarus/repo/ikarus/controlroutines/adaptivestepsizing.hh"/>
  </compounddef>
</doxygen>
