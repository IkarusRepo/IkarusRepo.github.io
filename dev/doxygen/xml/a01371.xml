<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="a01371" kind="struct" language="C++" prot="public">
    <compoundname>Ikarus::AffordanceCollection</compoundname>
    <basecompoundref prot="public" virt="non-virtual">std::tuple&lt; Affordances... &gt;</basecompoundref>
    <includes refid="a00323" local="no">ikarus/finiteelements/ferequirements.hh</includes>
    <templateparamlist>
      <param>
        <type>FEAffordance...</type>
        <declname>Affordances</declname>
        <defname>Affordances</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="a01371_1a2b9d60bd2360e957781527f81646ecc9" prot="public" static="no">
        <type>std::tuple&lt; Affordances... &gt;</type>
        <definition>using Ikarus::AffordanceCollection&lt; Affordances &gt;::Base =  std::tuple&lt;Affordances...&gt;</definition>
        <argsstring></argsstring>
        <name>Base</name>
        <qualifiedname>Ikarus::AffordanceCollection::Base</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/ferequirements.hh" line="106" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/ferequirements.hh" bodystart="106" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="a01371_1abff0c7489d3ce4d83bf7f078e3e6bdfe" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr bool</type>
        <definition>constexpr bool Ikarus::AffordanceCollection&lt; Affordances &gt;::hasScalarAffordance</definition>
        <argsstring></argsstring>
        <name>hasScalarAffordance</name>
        <qualifiedname>Ikarus::AffordanceCollection::hasScalarAffordance</qualifiedname>
        <initializer>= <ref refid="a01975" kindref="compound">traits::hasType</ref>&lt;<ref refid="a00396_1af6f894084edd9109762b86222995ef2a" kindref="member">ScalarAffordance</ref>, std::tuple&lt;Affordances...&gt;&gt;::value</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/ferequirements.hh" line="112" column="25" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/ferequirements.hh" bodystart="112" bodyend="-1"/>
        <referencedby refid="a01939_1a644858005534ab498b1802bb633bb37b" compoundref="a00026" startline="22" endline="65">Ikarus::NonLinearOperatorFactory::op</referencedby>
      </memberdef>
      <memberdef kind="variable" id="a01371_1ae6aad73f09ae60f45f049a71307cb98a" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr bool</type>
        <definition>constexpr bool Ikarus::AffordanceCollection&lt; Affordances &gt;::hasVectorAffordance</definition>
        <argsstring></argsstring>
        <name>hasVectorAffordance</name>
        <qualifiedname>Ikarus::AffordanceCollection::hasVectorAffordance</qualifiedname>
        <initializer>= <ref refid="a01975" kindref="compound">traits::hasType</ref>&lt;<ref refid="a00396_1aab9e3e38507d1db7602bc750718c302a" kindref="member">VectorAffordance</ref>, std::tuple&lt;Affordances...&gt;&gt;::value</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/ferequirements.hh" line="113" column="25" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/ferequirements.hh" bodystart="113" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="a01371_1a34091db9c2c461a74f8fd9d99253b0a3" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr bool</type>
        <definition>constexpr bool Ikarus::AffordanceCollection&lt; Affordances &gt;::hasMatrixAffordance</definition>
        <argsstring></argsstring>
        <name>hasMatrixAffordance</name>
        <qualifiedname>Ikarus::AffordanceCollection::hasMatrixAffordance</qualifiedname>
        <initializer>= <ref refid="a01975" kindref="compound">traits::hasType</ref>&lt;<ref refid="a00396_1a390d5311179ec61d163a29c943b3d1a0" kindref="member">MatrixAffordance</ref>, std::tuple&lt;Affordances...&gt;&gt;::value</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/ferequirements.hh" line="114" column="25" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/ferequirements.hh" bodystart="114" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="a01371_1ac9d8a54a3f26be877cb43cf05fae20a8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Ikarus::AffordanceCollection&lt; Affordances &gt;::AffordanceCollection</definition>
        <argsstring>()=default</argsstring>
        <name>AffordanceCollection</name>
        <qualifiedname>Ikarus::AffordanceCollection::AffordanceCollection</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/ferequirements.hh" line="108" column="3"/>
      </memberdef>
      <memberdef kind="function" id="a01371_1aa0f58694e1148fe110562d59d73c74b9" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr Ikarus::AffordanceCollection&lt; Affordances &gt;::AffordanceCollection</definition>
        <argsstring>(Affordances... affordances)</argsstring>
        <name>AffordanceCollection</name>
        <qualifiedname>Ikarus::AffordanceCollection::AffordanceCollection</qualifiedname>
        <param>
          <type>Affordances...</type>
          <declname>affordances</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/ferequirements.hh" line="109" column="13" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/ferequirements.hh" bodystart="109" bodyend="110"/>
      </memberdef>
      <memberdef kind="function" id="a01371_1adee1d19ea072ea23bc30baec706bb773" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>FEAffordance</type>
            <declname>Affordance</declname>
            <defname>Affordance</defname>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>constexpr bool Ikarus::AffordanceCollection&lt; Affordances &gt;::hasAffordance</definition>
        <argsstring>(Affordance &amp;&amp;affordances) const</argsstring>
        <name>hasAffordance</name>
        <qualifiedname>Ikarus::AffordanceCollection::hasAffordance</qualifiedname>
        <param>
          <type>Affordance &amp;&amp;</type>
          <declname>affordances</declname>
        </param>
        <briefdescription>
<para>Check if a specific affordance is present in the requirements. </para>
        </briefdescription>
        <detaileddescription>
<para>This function checks if the specified affordance is present in the requirements.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Affordance</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of affordance to be checked. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>affordance</parametername>
</parameternamelist>
<parameterdescription>
<para>The affordance to be checked. This can also be an affordance collection. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if the affordance is present, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/ferequirements.hh" line="125" column="18" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/ferequirements.hh" bodystart="125" bodyend="150"/>
      </memberdef>
      <memberdef kind="function" id="a01371_1ac56ebfd26cad078d15800d620a9b1e93" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto Ikarus::AffordanceCollection&lt; Affordances &gt;::scalarAffordance</definition>
        <argsstring>() const</argsstring>
        <name>scalarAffordance</name>
        <qualifiedname>Ikarus::AffordanceCollection::scalarAffordance</qualifiedname>
    <requiresclause>hasScalarAffordance    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/ferequirements.hh" line="152" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/ferequirements.hh" bodystart="152" bodyend="156"/>
        <referencedby refid="a01939_1a644858005534ab498b1802bb633bb37b" compoundref="a00026" startline="22" endline="65">Ikarus::NonLinearOperatorFactory::op</referencedby>
      </memberdef>
      <memberdef kind="function" id="a01371_1a9e6b82aa35f9d301b9ccdd661dbb8dde" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto Ikarus::AffordanceCollection&lt; Affordances &gt;::vectorAffordance</definition>
        <argsstring>() const</argsstring>
        <name>vectorAffordance</name>
        <qualifiedname>Ikarus::AffordanceCollection::vectorAffordance</qualifiedname>
    <requiresclause>hasVectorAffordance    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/ferequirements.hh" line="157" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/ferequirements.hh" bodystart="157" bodyend="161"/>
        <referencedby refid="a01939_1a644858005534ab498b1802bb633bb37b" compoundref="a00026" startline="22" endline="65">Ikarus::NonLinearOperatorFactory::op</referencedby>
      </memberdef>
      <memberdef kind="function" id="a01371_1af7b6303f0ef9cc6677744559786d8966" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto Ikarus::AffordanceCollection&lt; Affordances &gt;::matrixAffordance</definition>
        <argsstring>() const</argsstring>
        <name>matrixAffordance</name>
        <qualifiedname>Ikarus::AffordanceCollection::matrixAffordance</qualifiedname>
    <requiresclause>hasMatrixAffordance    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/ferequirements.hh" line="162" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/ferequirements.hh" bodystart="162" bodyend="166"/>
        <referencedby refid="a01939_1a644858005534ab498b1802bb633bb37b" compoundref="a00026" startline="22" endline="65">Ikarus::NonLinearOperatorFactory::op</referencedby>
      </memberdef>
      </sectiondef>
    <requiresclause>(sizeof...(Affordances) &lt;= 3)    </requiresclause>
    <briefdescription>
<para>Struct representing a collection of affordances. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>Ikarus::AffordanceCollection&lt; Affordances &gt;</label>
        <link refid="a01371"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>std::tuple&lt; Affordances... &gt;</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>Ikarus::AffordanceCollection&lt; Affordances &gt;</label>
        <link refid="a01371"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>std::tuple&lt; Affordances... &gt;</label>
      </node>
    </collaborationgraph>
    <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/ferequirements.hh" line="104" column="1" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/ferequirements.hh" bodystart="105" bodyend="167"/>
    <listofallmembers>
      <member refid="a01371_1ac9d8a54a3f26be877cb43cf05fae20a8" prot="public" virt="non-virtual"><scope>Ikarus::AffordanceCollection</scope><name>AffordanceCollection</name></member>
      <member refid="a01371_1aa0f58694e1148fe110562d59d73c74b9" prot="public" virt="non-virtual"><scope>Ikarus::AffordanceCollection</scope><name>AffordanceCollection</name></member>
      <member refid="a01371_1a2b9d60bd2360e957781527f81646ecc9" prot="public" virt="non-virtual"><scope>Ikarus::AffordanceCollection</scope><name>Base</name></member>
      <member refid="a01371_1adee1d19ea072ea23bc30baec706bb773" prot="public" virt="non-virtual"><scope>Ikarus::AffordanceCollection</scope><name>hasAffordance</name></member>
      <member refid="a01371_1a34091db9c2c461a74f8fd9d99253b0a3" prot="public" virt="non-virtual"><scope>Ikarus::AffordanceCollection</scope><name>hasMatrixAffordance</name></member>
      <member refid="a01371_1abff0c7489d3ce4d83bf7f078e3e6bdfe" prot="public" virt="non-virtual"><scope>Ikarus::AffordanceCollection</scope><name>hasScalarAffordance</name></member>
      <member refid="a01371_1ae6aad73f09ae60f45f049a71307cb98a" prot="public" virt="non-virtual"><scope>Ikarus::AffordanceCollection</scope><name>hasVectorAffordance</name></member>
      <member refid="a01371_1af7b6303f0ef9cc6677744559786d8966" prot="public" virt="non-virtual"><scope>Ikarus::AffordanceCollection</scope><name>matrixAffordance</name></member>
      <member refid="a01371_1ac56ebfd26cad078d15800d620a9b1e93" prot="public" virt="non-virtual"><scope>Ikarus::AffordanceCollection</scope><name>scalarAffordance</name></member>
      <member refid="a01371_1a9e6b82aa35f9d301b9ccdd661dbb8dde" prot="public" virt="non-virtual"><scope>Ikarus::AffordanceCollection</scope><name>vectorAffordance</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
