<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="a00146" kind="file" language="C++">
    <compoundname>scalarwrapper.hh</compoundname>
    <includes local="no">dune/common/referencehelper.hh</includes>
    <includedby refid="a00365" local="no">_ikarus.cc</includedby>
    <includedby refid="a00161" local="no">flatassemblermanipulator.hh</includedby>
    <includedby refid="a00152" local="no">registerferequirements.hh</includedby>
    <incdepgraph>
      <node id="1">
        <label>scalarwrapper.hh</label>
        <link refid="a00146"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>dune/common/referencehelper.hh</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="3">
        <label>flatassemblermanipulator.hh</label>
        <link refid="a00161"/>
      </node>
      <node id="5">
        <label>fe.hh</label>
        <link refid="a00155"/>
      </node>
      <node id="4">
        <label>registerferequirements.hh</label>
        <link refid="a00152"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>scalarwrapper.hh</label>
        <link refid="a00146"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>_ikarus.cc</label>
        <link refid="a00365"/>
      </node>
    </invincdepgraph>
    <innerclass refid="a01794" prot="public">ScalarWrapper</innerclass>
    <briefdescription>
<para>Provides a wrapper for scalar types to support passing by reference in <ref refid="a00436" kindref="compound">Python</ref> bindings. </para>
    </briefdescription>
    <detaileddescription>
<para>Since <ref refid="a00436" kindref="compound">Python</ref> does not support passing python float by reference to a double&amp;, we have to wrap everything. See also: <ulink url="https://pybind11.readthedocs.io/en/stable/faq.html#limitations-involving-reference-arguments">https://pybind11.readthedocs.io/en/stable/faq.html#limitations-involving-reference-arguments</ulink> </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>SPDX-FileCopyrightText:<sp/>2021-2025<sp/>The<sp/>Ikarus<sp/>Developers<sp/>mueller@ibb.uni-stuttgart.de</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>SPDX-License-Identifier:<sp/>LGPL-3.0-or-later</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;dune/common/referencehelper.hh&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="26" refid="a01794" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="a01794" kindref="compound">ScalarWrapper</ref></highlight></codeline>
<codeline lineno="27"><highlight class="normal">{</highlight></codeline>
<codeline lineno="32" refid="a01794_1a80b399092b2ac4564095a63271e34acd" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="a01794_1a80b399092b2ac4564095a63271e34acd" kindref="member">ScalarWrapper</ref>(T<sp/>val)</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>val{val}<sp/>{}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35" refid="a01794_1af539d8935624e801016ecdd02852e493" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="a01794_1af539d8935624e801016ecdd02852e493" kindref="member">RawScalarType</ref><sp/>=<sp/>Dune::ResolveRef_t&lt;T&gt;;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="a01794_1a66478624f4d84c5223afc1cc339691ff" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="normal"><sp/><ref refid="a01794_1af539d8935624e801016ecdd02852e493" kindref="member">RawScalarType</ref>&amp;()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Dune::resolveRef(val);<sp/>}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="a01794_1a0f885d047f898e549e8ece9cac3adea8" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="a01794_1af539d8935624e801016ecdd02852e493" kindref="member">RawScalarType</ref>&amp;<sp/><ref refid="a01794_1a0f885d047f898e549e8ece9cac3adea8" kindref="member">value</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Dune::resolveRef(val);<sp/>}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="53" refid="a01794_1a58aca37297368d4b3122461982ff3074" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="a01794_1af539d8935624e801016ecdd02852e493" kindref="member">RawScalarType</ref>&amp;<sp/><ref refid="a01794_1a58aca37297368d4b3122461982ff3074" kindref="member">value</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Dune::resolveRef(val);<sp/>}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="60" refid="a01794_1a7c5087c50a8cda53bdb7dc0b1af65c7d" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="a01794_1af539d8935624e801016ecdd02852e493" kindref="member">RawScalarType</ref><sp/><ref refid="a01794_1a7c5087c50a8cda53bdb7dc0b1af65c7d" kindref="member">operator+</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="a01794" kindref="compound">ScalarWrapper</ref>&amp;<sp/>v)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="a01794_1af539d8935624e801016ecdd02852e493" kindref="member">RawScalarType</ref>{Dune::resolveRef(val)<sp/>+<sp/>Dune::resolveRef(v.val)};</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="68" refid="a01794_1a14f5de10abdaaa63ef31cf3398b75122" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="a01794_1af539d8935624e801016ecdd02852e493" kindref="member">RawScalarType</ref><sp/><ref refid="a01794_1a14f5de10abdaaa63ef31cf3398b75122" kindref="member">operator-</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="a01794" kindref="compound">ScalarWrapper</ref>&amp;<sp/>v)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="a01794_1af539d8935624e801016ecdd02852e493" kindref="member">RawScalarType</ref>{Dune::resolveRef(val)<sp/>-<sp/>Dune::resolveRef(v.val)};</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="76" refid="a01794_1afbdab913b105074552a44b4d05e4b8dc" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="a01794_1af539d8935624e801016ecdd02852e493" kindref="member">RawScalarType</ref><sp/><ref refid="a01794_1afbdab913b105074552a44b4d05e4b8dc" kindref="member">operator-</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="a01794_1af539d8935624e801016ecdd02852e493" kindref="member">RawScalarType</ref>{-Dune::resolveRef(val)};<sp/>}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="83" refid="a01794_1a01d184d748414b40f51b06e891bc309b" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="a01794_1af539d8935624e801016ecdd02852e493" kindref="member">RawScalarType</ref><sp/><ref refid="a01794_1a01d184d748414b40f51b06e891bc309b" kindref="member">operator*</ref>(<ref refid="a01794_1af539d8935624e801016ecdd02852e493" kindref="member">RawScalarType</ref><sp/><ref refid="a01794_1a0f885d047f898e549e8ece9cac3adea8" kindref="member">value</ref>)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="a01794_1af539d8935624e801016ecdd02852e493" kindref="member">RawScalarType</ref>{val<sp/>*<sp/><ref refid="a01794_1a0f885d047f898e549e8ece9cac3adea8" kindref="member">value</ref>};<sp/>}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="90" refid="a01794_1aedb7b9287f9b954fcb9759ef0aa7f803" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="a01794" kindref="compound">ScalarWrapper</ref>&amp;<sp/><ref refid="a01794_1aedb7b9287f9b954fcb9759ef0aa7f803" kindref="member">operator+=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="a01794" kindref="compound">ScalarWrapper</ref>&amp;<sp/>v)<sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>Dune::resolveRef(val)<sp/>+=<sp/>Dune::resolveRef(v.val);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="100" refid="a01794_1a1f3ea426a4264d9c26278e2ddfc605d1" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="a01794" kindref="compound">ScalarWrapper</ref>&amp;<sp/><ref refid="a01794_1a1f3ea426a4264d9c26278e2ddfc605d1" kindref="member">operator-=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="a01794" kindref="compound">ScalarWrapper</ref>&amp;<sp/>v)<sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>Dune::resolveRef(val)<sp/>-=<sp/>Dune::resolveRef(v.val);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="110" refid="a01794_1ac43277d6068945530d445976aef3b5be" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="a01794" kindref="compound">ScalarWrapper</ref>&amp;<sp/><ref refid="a01794_1ac43277d6068945530d445976aef3b5be" kindref="member">operator*=</ref>(<ref refid="a01794_1af539d8935624e801016ecdd02852e493" kindref="member">RawScalarType</ref><sp/>v)<sp/>{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>Dune::resolveRef(val)<sp/>*=<sp/>v;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="120" refid="a01794_1abe4b2960b4cc9bd8546aed01a6e74f51" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="a01794" kindref="compound">ScalarWrapper</ref>&amp;<sp/><ref refid="a01794_1abe4b2960b4cc9bd8546aed01a6e74f51" kindref="member">operator/=</ref>(<ref refid="a01794_1af539d8935624e801016ecdd02852e493" kindref="member">RawScalarType</ref><sp/>v)<sp/>{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>Dune::resolveRef(val)<sp/>/=<sp/>v;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/>T<sp/>val;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="134" refid="a01794_1a93c93e03a96d5f1cbfa7e74ccb1e190e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/><ref refid="a01794_1af539d8935624e801016ecdd02852e493" kindref="member">RawScalarType</ref><sp/><ref refid="a01794_1a93c93e03a96d5f1cbfa7e74ccb1e190e" kindref="member">operator*</ref>(<ref refid="a01794_1af539d8935624e801016ecdd02852e493" kindref="member">RawScalarType</ref><sp/>f,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="a01794" kindref="compound">ScalarWrapper</ref>&amp;<sp/>v)<sp/>{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="a01794_1af539d8935624e801016ecdd02852e493" kindref="member">RawScalarType</ref>{f<sp/>*<sp/>Dune::resolveRef(v.val)};</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="137"><highlight class="normal">};</highlight></codeline>
    </programlisting>
    <location file="/__w/ikarus/ikarus/repo/ikarus/python/finiteelements/scalarwrapper.hh"/>
  </compounddef>
</doxygen>
