<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="a02069" kind="concept">
    <compoundname>Ikarus::Concepts::VolumetricFunction</compoundname>
    <includes refid="a03098" local="no">ikarus/finiteelements/mechanics/materials/hyperelastic/concepts.hh</includes>
    <templateparamlist>
      <param>
        <type>typename VF</type>
      </param>
    </templateparamlist>
    <initializer>template&lt;typename VF&gt;
concept <ref refid="a02069" kindref="compound">Ikarus::Concepts::VolumetricFunction</ref> =  requires(VF vf, const double&amp; j) {
  { vf.storedEnergyImpl(j) } -&gt; std::same_as&lt;double&gt;;
  { vf.firstDerivativeImpl(j) } -&gt; std::same_as&lt;double&gt;;
  { vf.secondDerivativeImpl(j) } -&gt; std::same_as&lt;double&gt;;
  { vf.name() } -&gt; std::convertible_to&lt;std::string&gt;;
}    </initializer>
    <briefdescription>
<para>Concept to check if the underlying function is a volumetric function. </para>
    </briefdescription>
    <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Type</parametername>
</parameternamelist>
<parameterdescription>
<para>of the volumetric function. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
    </detaileddescription>
    <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/hyperelastic/concepts.hh" line="53" column="1"/>
  </compounddef>
</doxygen>
