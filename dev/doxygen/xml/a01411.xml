<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="a01411" kind="struct" language="C++" prot="public">
    <compoundname>Ikarus::ResultWrapper</compoundname>
    <basecompoundref prot="public" virt="non-virtual">RT</basecompoundref>
    <includes refid="a00314" local="no">ikarus/finiteelements/feresulttypes.hh</includes>
    <templateparamlist>
      <param>
        <type>typename RT</type>
      </param>
      <param>
        <type><ref refid="a00396_1acfb09bb7db104db62d3d1d2dc3e009b2" kindref="member">ResultShape</ref></type>
        <declname>storedResultShape</declname>
        <defname>storedResultShape</defname>
        <defval><ref refid="a00396_1acfb09bb7db104db62d3d1d2dc3e009b2a57dea6f5039281b7fee517fc43bf3110" kindref="member">ResultShape::Vector</ref></defval>
      </param>
    </templateparamlist>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="a01411_1ac1b738aa86c092e8cd4cadf2ac0f9c26" prot="private" static="no">
        <type>typename RT::type</type>
        <definition>using Ikarus::ResultWrapper&lt; RT, storedResultShape &gt;::ResultTypeValueType =  typename RT::type</definition>
        <argsstring></argsstring>
        <name>ResultTypeValueType</name>
        <qualifiedname>Ikarus::ResultWrapper::ResultTypeValueType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/feresulttypes.hh" line="166" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/feresulttypes.hh" bodystart="166" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="a01411_1ad2e94e390a1a328d7abd8006f29dbbd2" prot="public" static="no">
        <type>std::invoke_result_t&lt; decltype(&amp;RT::Vectorizer::template transform&lt; ResultTypeValueType &gt;), const ResultTypeValueType &amp; &gt;</type>
        <definition>using Ikarus::ResultWrapper&lt; RT, storedResultShape &gt;::VecType =  std::invoke_result_t&lt;decltype(&amp;RT::Vectorizer::template transform&lt;ResultTypeValueType&gt;), const ResultTypeValueType&amp;&gt;</definition>
        <argsstring></argsstring>
        <name>VecType</name>
        <qualifiedname>Ikarus::ResultWrapper::VecType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/feresulttypes.hh" line="172" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/feresulttypes.hh" bodystart="173" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="a01411_1a3be8a4f7e4b67bc2bb90a826c1ed7c85" prot="public" static="no">
        <type>std::invoke_result_t&lt; decltype(&amp;RT::Matricizer::template transform&lt; <ref refid="a01411_1ad2e94e390a1a328d7abd8006f29dbbd2" kindref="member">VecType</ref>, rowsAtCompileTime, colsAtCompileTime &gt;), const <ref refid="a01411_1ad2e94e390a1a328d7abd8006f29dbbd2" kindref="member">VecType</ref> &amp;, int, int &gt;</type>
        <definition>using Ikarus::ResultWrapper&lt; RT, storedResultShape &gt;::MatType =  std::invoke_result_t&lt;decltype(&amp;RT::Matricizer::template transform&lt;VecType, rowsAtCompileTime, colsAtCompileTime&gt;), const VecType&amp;, int, int&gt;</definition>
        <argsstring></argsstring>
        <name>MatType</name>
        <qualifiedname>Ikarus::ResultWrapper::MatType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/feresulttypes.hh" line="174" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/feresulttypes.hh" bodystart="176" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="a01411_1a1baf31b4a8525d6b81860c8f0a0b6a84" prot="public" static="no">
        <type>std::conditional_t&lt; storedValueIsVector, <ref refid="a01411_1ad2e94e390a1a328d7abd8006f29dbbd2" kindref="member">VecType</ref>, <ref refid="a01411_1a3be8a4f7e4b67bc2bb90a826c1ed7c85" kindref="member">MatType</ref> &gt;</type>
        <definition>using Ikarus::ResultWrapper&lt; RT, storedResultShape &gt;::StoredType =  std::conditional_t&lt;storedValueIsVector, VecType, MatType&gt;</definition>
        <argsstring></argsstring>
        <name>StoredType</name>
        <qualifiedname>Ikarus::ResultWrapper::StoredType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/feresulttypes.hh" line="177" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/feresulttypes.hh" bodystart="177" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="a01411_1aef0efc55342d144366f8eddbc6fe00f9" prot="public" static="no">
        <type>RT</type>
        <definition>using Ikarus::ResultWrapper&lt; RT, storedResultShape &gt;::ResultType =  RT</definition>
        <argsstring></argsstring>
        <name>ResultType</name>
        <qualifiedname>Ikarus::ResultWrapper::ResultType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/feresulttypes.hh" line="178" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/feresulttypes.hh" bodystart="178" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="a01411_1a6d818b78299d21d8d5277e8c8a1edd19" prot="private" static="yes" constexpr="yes" mutable="no">
        <type>constexpr Eigen::Index</type>
        <definition>constexpr Eigen::Index Ikarus::ResultWrapper&lt; RT, storedResultShape &gt;::rowsAtCompileTime</definition>
        <argsstring></argsstring>
        <name>rowsAtCompileTime</name>
        <qualifiedname>Ikarus::ResultWrapper::rowsAtCompileTime</qualifiedname>
        <initializer>= ResultTypeValueType::RowsAtCompileTime</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/feresulttypes.hh" line="167" column="33" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/feresulttypes.hh" bodystart="167" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="a01411_1a40555d6fc31b093def3813f7d74ae057" prot="private" static="yes" constexpr="yes" mutable="no">
        <type>constexpr Eigen::Index</type>
        <definition>constexpr Eigen::Index Ikarus::ResultWrapper&lt; RT, storedResultShape &gt;::colsAtCompileTime</definition>
        <argsstring></argsstring>
        <name>colsAtCompileTime</name>
        <qualifiedname>Ikarus::ResultWrapper::colsAtCompileTime</qualifiedname>
        <initializer>= ResultTypeValueType::ColsAtCompileTime</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/feresulttypes.hh" line="168" column="33" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/feresulttypes.hh" bodystart="168" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="a01411_1a09b38437a6a77fbfcc043528aaffd83f" prot="private" static="yes" constexpr="yes" mutable="no">
        <type>constexpr bool</type>
        <definition>constexpr bool Ikarus::ResultWrapper&lt; RT, storedResultShape &gt;::storedValueIsVector</definition>
        <argsstring></argsstring>
        <name>storedValueIsVector</name>
        <qualifiedname>Ikarus::ResultWrapper::storedValueIsVector</qualifiedname>
        <initializer>= storedResultShape == <ref refid="a00396_1acfb09bb7db104db62d3d1d2dc3e009b2a57dea6f5039281b7fee517fc43bf3110" kindref="member">ResultShape::Vector</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/feresulttypes.hh" line="169" column="25" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/feresulttypes.hh" bodystart="169" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="a01411_1aedebaa0389d5f986335317925fa0aa06" prot="private" static="no" mutable="no">
        <type><ref refid="a01411_1a1baf31b4a8525d6b81860c8f0a0b6a84" kindref="member">StoredType</ref></type>
        <definition>StoredType Ikarus::ResultWrapper&lt; RT, storedResultShape &gt;::value_</definition>
        <argsstring></argsstring>
        <name>value_</name>
        <qualifiedname>Ikarus::ResultWrapper::value_</qualifiedname>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/feresulttypes.hh" line="224" column="14" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/feresulttypes.hh" bodystart="224" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="a01411_1ae1be56ef0981f28e1dfa4f77453251d3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto Ikarus::ResultWrapper&lt; RT, storedResultShape &gt;::asVec</definition>
        <argsstring>() const</argsstring>
        <name>asVec</name>
        <qualifiedname>Ikarus::ResultWrapper::asVec</qualifiedname>
        <briefdescription>
<para>Returns the stored value as Vector. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>vector representation of the stored value </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/feresulttypes.hh" line="184" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/feresulttypes.hh" bodystart="184" bodyend="189"/>
      </memberdef>
      <memberdef kind="function" id="a01411_1ae5c30a9c8da8fe6bb01b1cee0fc43155" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto Ikarus::ResultWrapper&lt; RT, storedResultShape &gt;::asMat</definition>
        <argsstring>(Eigen::Index rows=rowsAtCompileTime, Eigen::Index cols=colsAtCompileTime) const</argsstring>
        <name>asMat</name>
        <qualifiedname>Ikarus::ResultWrapper::asMat</qualifiedname>
        <param>
          <type>Eigen::Index</type>
          <declname>rows</declname>
          <defval>rowsAtCompileTime</defval>
        </param>
        <param>
          <type>Eigen::Index</type>
          <declname>cols</declname>
          <defval>colsAtCompileTime</defval>
        </param>
        <briefdescription>
<para>Returns the stored value as Matrix (if possible) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rows</parametername>
</parameternamelist>
<parameterdescription>
<para>specify the rows of the matrix for dynamic sized Result Types </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cols</parametername>
</parameternamelist>
<parameterdescription>
<para>specify the columns of the matrix for dynamic sized Result Types </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>matrix representation of the stored value </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/feresulttypes.hh" line="197" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/feresulttypes.hh" bodystart="197" bodyend="210"/>
      </memberdef>
      <memberdef kind="function" id="a01411_1a826dcccf70e97474b01126970e2839ac" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>Ikarus::ResultWrapper&lt; RT, storedResultShape &gt;::ResultWrapper</definition>
        <argsstring>()=default</argsstring>
        <name>ResultWrapper</name>
        <qualifiedname>Ikarus::ResultWrapper::ResultWrapper</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/feresulttypes.hh" line="211" column="12"/>
      </memberdef>
      <memberdef kind="function" id="a01411_1a623510c28007eb075ed7719de10562b2" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Ikarus::ResultWrapper&lt; RT, storedResultShape &gt;::ResultWrapper</definition>
        <argsstring>(StoredType &amp;&amp;value)</argsstring>
        <name>ResultWrapper</name>
        <qualifiedname>Ikarus::ResultWrapper::ResultWrapper</qualifiedname>
        <param>
          <type><ref refid="a01411_1a1baf31b4a8525d6b81860c8f0a0b6a84" kindref="member">StoredType</ref> &amp;&amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/feresulttypes.hh" line="212" column="12" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/feresulttypes.hh" bodystart="212" bodyend="212"/>
      </memberdef>
      <memberdef kind="function" id="a01411_1ae3ec0250a8cce10dae2b6eacec3ffe11" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Ikarus::ResultWrapper&lt; RT, storedResultShape &gt;::ResultWrapper</definition>
        <argsstring>(const StoredType &amp;value)</argsstring>
        <name>ResultWrapper</name>
        <qualifiedname>Ikarus::ResultWrapper::ResultWrapper</qualifiedname>
        <param>
          <type>const <ref refid="a01411_1a1baf31b4a8525d6b81860c8f0a0b6a84" kindref="member">StoredType</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/feresulttypes.hh" line="213" column="12" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/feresulttypes.hh" bodystart="213" bodyend="213"/>
      </memberdef>
      <memberdef kind="function" id="a01411_1adbc957bfc9a97390ce57d778dd7c91a1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="a01411" kindref="compound">ResultWrapper</ref> &amp;</type>
        <definition>ResultWrapper &amp; Ikarus::ResultWrapper&lt; RT, storedResultShape &gt;::operator=</definition>
        <argsstring>(const StoredType &amp;value)</argsstring>
        <name>operator=</name>
        <qualifiedname>Ikarus::ResultWrapper::operator=</qualifiedname>
        <param>
          <type>const <ref refid="a01411_1a1baf31b4a8525d6b81860c8f0a0b6a84" kindref="member">StoredType</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/feresulttypes.hh" line="214" column="17" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/feresulttypes.hh" bodystart="214" bodyend="217"/>
      </memberdef>
      <memberdef kind="function" id="a01411_1a6a1deb7c814879d79eaa5fe467666b2f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="a01411" kindref="compound">ResultWrapper</ref> &amp;</type>
        <definition>ResultWrapper &amp; Ikarus::ResultWrapper&lt; RT, storedResultShape &gt;::operator=</definition>
        <argsstring>(StoredType &amp;&amp;value)</argsstring>
        <name>operator=</name>
        <qualifiedname>Ikarus::ResultWrapper::operator=</qualifiedname>
        <param>
          <type><ref refid="a01411_1a1baf31b4a8525d6b81860c8f0a0b6a84" kindref="member">StoredType</ref> &amp;&amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/feresulttypes.hh" line="218" column="17" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/feresulttypes.hh" bodystart="218" bodyend="221"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Container that is used for <ref refid="a01355" kindref="compound">FE</ref> Results. It gives access to the stored value, but can also be used to access the result in Matrix and Vector form. </para>
    </briefdescription>
    <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>RT</parametername>
</parameternamelist>
<parameterdescription>
<para>A specified ResultType </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>storedResultShape</parametername>
</parameternamelist>
<parameterdescription>
<para>boolean indicating whether the stored result is in its vector form, defaults to true </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>Ikarus::ResultWrapper&lt; RT, storedResultShape &gt;</label>
        <link refid="a01411"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>RT</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>Ikarus::ResultWrapper&lt; RT, storedResultShape &gt;</label>
        <link refid="a01411"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>RT</label>
      </node>
    </collaborationgraph>
    <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/feresulttypes.hh" line="163" column="1" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/feresulttypes.hh" bodystart="164" bodyend="225"/>
    <listofallmembers>
      <member refid="a01411_1ae5c30a9c8da8fe6bb01b1cee0fc43155" prot="public" virt="non-virtual"><scope>Ikarus::ResultWrapper</scope><name>asMat</name></member>
      <member refid="a01411_1ae1be56ef0981f28e1dfa4f77453251d3" prot="public" virt="non-virtual"><scope>Ikarus::ResultWrapper</scope><name>asVec</name></member>
      <member refid="a01411_1a40555d6fc31b093def3813f7d74ae057" prot="private" virt="non-virtual"><scope>Ikarus::ResultWrapper</scope><name>colsAtCompileTime</name></member>
      <member refid="a01411_1a3be8a4f7e4b67bc2bb90a826c1ed7c85" prot="public" virt="non-virtual"><scope>Ikarus::ResultWrapper</scope><name>MatType</name></member>
      <member refid="a01411_1adbc957bfc9a97390ce57d778dd7c91a1" prot="public" virt="non-virtual"><scope>Ikarus::ResultWrapper</scope><name>operator=</name></member>
      <member refid="a01411_1a6a1deb7c814879d79eaa5fe467666b2f" prot="public" virt="non-virtual"><scope>Ikarus::ResultWrapper</scope><name>operator=</name></member>
      <member refid="a01411_1aef0efc55342d144366f8eddbc6fe00f9" prot="public" virt="non-virtual"><scope>Ikarus::ResultWrapper</scope><name>ResultType</name></member>
      <member refid="a01411_1ac1b738aa86c092e8cd4cadf2ac0f9c26" prot="private" virt="non-virtual"><scope>Ikarus::ResultWrapper</scope><name>ResultTypeValueType</name></member>
      <member refid="a01411_1a826dcccf70e97474b01126970e2839ac" prot="public" virt="non-virtual"><scope>Ikarus::ResultWrapper</scope><name>ResultWrapper</name></member>
      <member refid="a01411_1a623510c28007eb075ed7719de10562b2" prot="public" virt="non-virtual"><scope>Ikarus::ResultWrapper</scope><name>ResultWrapper</name></member>
      <member refid="a01411_1ae3ec0250a8cce10dae2b6eacec3ffe11" prot="public" virt="non-virtual"><scope>Ikarus::ResultWrapper</scope><name>ResultWrapper</name></member>
      <member refid="a01411_1a6d818b78299d21d8d5277e8c8a1edd19" prot="private" virt="non-virtual"><scope>Ikarus::ResultWrapper</scope><name>rowsAtCompileTime</name></member>
      <member refid="a01411_1a1baf31b4a8525d6b81860c8f0a0b6a84" prot="public" virt="non-virtual"><scope>Ikarus::ResultWrapper</scope><name>StoredType</name></member>
      <member refid="a01411_1a09b38437a6a77fbfcc043528aaffd83f" prot="private" virt="non-virtual"><scope>Ikarus::ResultWrapper</scope><name>storedValueIsVector</name></member>
      <member refid="a01411_1aedebaa0389d5f986335317925fa0aa06" prot="private" virt="non-virtual"><scope>Ikarus::ResultWrapper</scope><name>value_</name></member>
      <member refid="a01411_1ad2e94e390a1a328d7abd8006f29dbbd2" prot="public" virt="non-virtual"><scope>Ikarus::ResultWrapper</scope><name>VecType</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
