<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="a01583" kind="struct" language="C++" prot="public">
    <compoundname>Ikarus::Materials::LinearElasticityT</compoundname>
    <basecompoundref refid="a01579" prot="public" virt="non-virtual">Ikarus::Materials::Material&lt; LinearElasticityT&lt; ST &gt; &gt;</basecompoundref>
    <includes refid="a00266" local="no">ikarus/finiteelements/mechanics/materials/linearelasticity.hh</includes>
    <templateparamlist>
      <param>
        <type>typename ST</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="a01583_1ab4db5d32aab85031851f53ffb57244d3" prot="public" static="no">
        <type>ST</type>
        <definition>using Ikarus::Materials::LinearElasticityT&lt; ST &gt;::ScalarType =  ST</definition>
        <argsstring></argsstring>
        <name>ScalarType</name>
        <qualifiedname>Ikarus::Materials::LinearElasticityT::ScalarType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/linearelasticity.hh" line="36" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/linearelasticity.hh" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="a01583_1a115fa825a0799eec974c082ddbb452c3" prot="public" static="no">
        <type><ref refid="a01591" kindref="compound">StVenantKirchhoffT</ref>&lt; <ref refid="a01583_1ab4db5d32aab85031851f53ffb57244d3" kindref="member">ScalarType</ref> &gt;</type>
        <definition>using Ikarus::Materials::LinearElasticityT&lt; ST &gt;::Base =  StVenantKirchhoffT&lt;ScalarType&gt;</definition>
        <argsstring></argsstring>
        <name>Base</name>
        <qualifiedname>Ikarus::Materials::LinearElasticityT::Base</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/linearelasticity.hh" line="37" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/linearelasticity.hh" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="a01583_1a6fc59c96a4b7c84a87bfbb154c4d5359" prot="public" static="no">
        <type><ref refid="a01583_1ab4db5d32aab85031851f53ffb57244d3" kindref="member">ScalarType</ref></type>
        <definition>using Ikarus::Materials::LinearElasticityT&lt; ST &gt;::field_type =  ScalarType</definition>
        <argsstring></argsstring>
        <name>field_type</name>
        <qualifiedname>Ikarus::Materials::LinearElasticityT::field_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/linearelasticity.hh" line="39" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/linearelasticity.hh" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="a01583_1ac8d0e018aa9e1b9fdd0effec8ad74dba" prot="public" static="no">
        <type>typename <ref refid="a01591_1a7f9b9e2520e939b6c38bc8fe6452716f" kindref="member">Base::StrainMatrix</ref></type>
        <definition>using Ikarus::Materials::LinearElasticityT&lt; ST &gt;::StrainMatrix =  typename Base::StrainMatrix</definition>
        <argsstring></argsstring>
        <name>StrainMatrix</name>
        <qualifiedname>Ikarus::Materials::LinearElasticityT::StrainMatrix</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/linearelasticity.hh" line="41" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/linearelasticity.hh" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="a01583_1a775186da978d65fb557c170ca9a3a6f2" prot="public" static="no">
        <type><ref refid="a01583_1ac8d0e018aa9e1b9fdd0effec8ad74dba" kindref="member">StrainMatrix</ref></type>
        <definition>using Ikarus::Materials::LinearElasticityT&lt; ST &gt;::StressMatrix =  StrainMatrix</definition>
        <argsstring></argsstring>
        <name>StressMatrix</name>
        <qualifiedname>Ikarus::Materials::LinearElasticityT::StressMatrix</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/linearelasticity.hh" line="42" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/linearelasticity.hh" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="a01583_1ac181a3bd0adf38399b1613a7e4028145" prot="public" static="no">
        <type>typename <ref refid="a01591_1acd3ff90a473ab0f184c04ff710f0640b" kindref="member">Base::MaterialTensor</ref></type>
        <definition>using Ikarus::Materials::LinearElasticityT&lt; ST &gt;::MaterialTensor =  typename Base::MaterialTensor</definition>
        <argsstring></argsstring>
        <name>MaterialTensor</name>
        <qualifiedname>Ikarus::Materials::LinearElasticityT::MaterialTensor</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/linearelasticity.hh" line="43" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/linearelasticity.hh" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="a01583_1ad12f92c56d1187f958192ac9bdd55fc3" prot="public" static="no">
        <type>typename <ref refid="a01591_1a69400b816844f93fc27adeab860b8a47" kindref="member">Base::MaterialParameters</ref></type>
        <definition>using Ikarus::Materials::LinearElasticityT&lt; ST &gt;::MaterialParameters =  typename Base::MaterialParameters</definition>
        <argsstring></argsstring>
        <name>MaterialParameters</name>
        <qualifiedname>Ikarus::Materials::LinearElasticityT::MaterialParameters</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/linearelasticity.hh" line="45" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/linearelasticity.hh" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="a01579_1a5303817231472050f36f079bc730988b" prot="public" static="no">
        <type><ref refid="a01583" kindref="compound">LinearElasticityT</ref>&lt; ST &gt;</type>
        <definition>using Ikarus::Materials::Material&lt; LinearElasticityT&lt; ST &gt;  &gt;::MaterialImpl =  LinearElasticityT&lt; ST &gt;</definition>
        <argsstring></argsstring>
        <name>MaterialImpl</name>
        <qualifiedname>Ikarus::Materials::Material&lt; LinearElasticityT&lt; ST &gt; &gt;::MaterialImpl</qualifiedname>
        <briefdescription>
<para>Type of material implementation. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/interface.hh" line="81" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/interface.hh" bodystart="81" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="a01583_1a8a0160b6a92fd1d320b8d642de402ce7" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr int</type>
        <definition>constexpr int Ikarus::Materials::LinearElasticityT&lt; ST &gt;::dim</definition>
        <argsstring></argsstring>
        <name>dim</name>
        <qualifiedname>Ikarus::Materials::LinearElasticityT::dim</qualifiedname>
        <initializer>= Base::dim</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/linearelasticity.hh" line="40" column="24" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/linearelasticity.hh" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="a01583_1a5b013f72a62a678aaf658287610a7b69" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr auto</type>
        <definition>constexpr auto Ikarus::Materials::LinearElasticityT&lt; ST &gt;::strainTag</definition>
        <argsstring></argsstring>
        <name>strainTag</name>
        <qualifiedname>Ikarus::Materials::LinearElasticityT::strainTag</qualifiedname>
        <initializer>= <ref refid="a00385_1ggacef1e451de1a99845c59d7391064fb8fa9a932b3cb396238423eb2f33ec17d6aa" kindref="member">StrainTags::linear</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/linearelasticity.hh" line="47" column="25" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/linearelasticity.hh" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="a01583_1a313c8617a56a0f6e3b34afd780d6c21c" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr auto</type>
        <definition>constexpr auto Ikarus::Materials::LinearElasticityT&lt; ST &gt;::stressTag</definition>
        <argsstring></argsstring>
        <name>stressTag</name>
        <qualifiedname>Ikarus::Materials::LinearElasticityT::stressTag</qualifiedname>
        <initializer>= <ref refid="a00385_1gga70b4ce43c53cc5e949d49919f437501ea9a932b3cb396238423eb2f33ec17d6aa" kindref="member">StressTags::linear</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/linearelasticity.hh" line="48" column="25" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/linearelasticity.hh" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="a01583_1a9c47f61a3009439174e0077cacdaa000" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr auto</type>
        <definition>constexpr auto Ikarus::Materials::LinearElasticityT&lt; ST &gt;::tangentModuliTag</definition>
        <argsstring></argsstring>
        <name>tangentModuliTag</name>
        <qualifiedname>Ikarus::Materials::LinearElasticityT::tangentModuliTag</qualifiedname>
        <initializer>= <ref refid="a00385_1gga05ac785124262c1e323d2f937d520a1bad92a8333dd3ccb895cc65f7455b71206" kindref="member">TangentModuliTags::Material</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/linearelasticity.hh" line="49" column="25" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/linearelasticity.hh" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="a01583_1ae3fc1c847d10fa8a3f050b5b34668f08" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr bool</type>
        <definition>constexpr bool Ikarus::Materials::LinearElasticityT&lt; ST &gt;::energyAcceptsVoigt</definition>
        <argsstring></argsstring>
        <name>energyAcceptsVoigt</name>
        <qualifiedname>Ikarus::Materials::LinearElasticityT::energyAcceptsVoigt</qualifiedname>
        <initializer>= Base::energyAcceptsVoigt</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/linearelasticity.hh" line="50" column="25" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/linearelasticity.hh" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="a01583_1a38ed5779521303455b5381ba72c1b568" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr bool</type>
        <definition>constexpr bool Ikarus::Materials::LinearElasticityT&lt; ST &gt;::stressToVoigt</definition>
        <argsstring></argsstring>
        <name>stressToVoigt</name>
        <qualifiedname>Ikarus::Materials::LinearElasticityT::stressToVoigt</qualifiedname>
        <initializer>= Base::stressToVoigt</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/linearelasticity.hh" line="51" column="25" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/linearelasticity.hh" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="a01583_1ad5d073c95b1b2a7382c5ee0f750db512" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr bool</type>
        <definition>constexpr bool Ikarus::Materials::LinearElasticityT&lt; ST &gt;::stressAcceptsVoigt</definition>
        <argsstring></argsstring>
        <name>stressAcceptsVoigt</name>
        <qualifiedname>Ikarus::Materials::LinearElasticityT::stressAcceptsVoigt</qualifiedname>
        <initializer>= Base::stressAcceptsVoigt</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/linearelasticity.hh" line="52" column="25" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/linearelasticity.hh" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="a01583_1ad15d556e5b85d84458d9b4988fcf3658" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr bool</type>
        <definition>constexpr bool Ikarus::Materials::LinearElasticityT&lt; ST &gt;::moduliToVoigt</definition>
        <argsstring></argsstring>
        <name>moduliToVoigt</name>
        <qualifiedname>Ikarus::Materials::LinearElasticityT::moduliToVoigt</qualifiedname>
        <initializer>= Base::moduliToVoigt</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/linearelasticity.hh" line="53" column="25" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/linearelasticity.hh" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="a01583_1a360dde39068b805f20fc6afdd4cbbe9e" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr bool</type>
        <definition>constexpr bool Ikarus::Materials::LinearElasticityT&lt; ST &gt;::moduliAcceptsVoigt</definition>
        <argsstring></argsstring>
        <name>moduliAcceptsVoigt</name>
        <qualifiedname>Ikarus::Materials::LinearElasticityT::moduliAcceptsVoigt</qualifiedname>
        <initializer>= Base::moduliAcceptsVoigt</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/linearelasticity.hh" line="54" column="25" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/linearelasticity.hh" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="a01583_1a0f569ed9c3fcc79b2606732661ddec96" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr double</type>
        <definition>constexpr double Ikarus::Materials::LinearElasticityT&lt; ST &gt;::derivativeFactorImpl</definition>
        <argsstring></argsstring>
        <name>derivativeFactorImpl</name>
        <qualifiedname>Ikarus::Materials::LinearElasticityT::derivativeFactorImpl</qualifiedname>
        <initializer>= Base::derivativeFactorImpl</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/linearelasticity.hh" line="55" column="27" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/linearelasticity.hh" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="a01579_1af50dfddadfe829082a56eb804bfb7980" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr bool</type>
        <definition>constexpr bool Ikarus::Materials::Material&lt; LinearElasticityT&lt; ST &gt;  &gt;::isReduced</definition>
        <argsstring></argsstring>
        <name>isReduced</name>
        <qualifiedname>Ikarus::Materials::Material&lt; LinearElasticityT&lt; ST &gt; &gt;::isReduced</qualifiedname>
        <briefdescription>
<para>Static constant for determining if the material has vanishing stress or strain components (is reduced). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/interface.hh" line="86" column="25" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/interface.hh" bodystart="86" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="a01579_1ae9e08c2d0dc02321b8a4d81d4052f63f" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr double</type>
        <definition>constexpr double Ikarus::Materials::Material&lt; LinearElasticityT&lt; ST &gt;  &gt;::derivativeFactor</definition>
        <argsstring></argsstring>
        <name>derivativeFactor</name>
        <qualifiedname>Ikarus::Materials::Material&lt; LinearElasticityT&lt; ST &gt; &gt;::derivativeFactor</qualifiedname>
        <briefdescription>
<para>This factor denotes the differences between the returned stresses and moduli and the passed strain. </para>
        </briefdescription>
        <detaileddescription>
<para>For neoHooke the inserted quantity is $C$ the Green-Lagrangian strain tensor, the function relation between the energy and the stresses is $S = 1 \dfrac{\partial\psi(E)}{\partial E}$. This factor is the pre factor, which is the difference to the actual derivative, which is written here </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/interface.hh" line="122" column="27" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/interface.hh" bodystart="122" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="a01583_1a9ed771938ccb57db5653e51b9de933aa" prot="private" static="no" mutable="no">
        <type><ref refid="a01591" kindref="compound">StVenantKirchhoffT</ref>&lt; <ref refid="a01583_1ab4db5d32aab85031851f53ffb57244d3" kindref="member">ScalarType</ref> &gt;</type>
        <definition>StVenantKirchhoffT&lt;ScalarType&gt; Ikarus::Materials::LinearElasticityT&lt; ST &gt;::svk_</definition>
        <argsstring></argsstring>
        <name>svk_</name>
        <qualifiedname>Ikarus::Materials::LinearElasticityT::svk_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/linearelasticity.hh" line="124" column="22" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/linearelasticity.hh" bodystart="124" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="a01583_1a6adc7a0dd69bb642adcd5061d373b888" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr std::string</type>
        <definition>static constexpr std::string Ikarus::Materials::LinearElasticityT&lt; ST &gt;::nameImpl</definition>
        <argsstring>() noexcept</argsstring>
        <name>nameImpl</name>
        <qualifiedname>Ikarus::Materials::LinearElasticityT::nameImpl</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/linearelasticity.hh" line="57" column="33" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/linearelasticity.hh" bodystart="57" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="a01579_1a03ae10e8656beed2aa69c8a9d27907e5" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr std::string</type>
        <definition>static constexpr std::string Ikarus::Materials::Material&lt; LinearElasticityT&lt; ST &gt;  &gt;::name</definition>
        <argsstring>()</argsstring>
        <name>name</name>
        <qualifiedname>Ikarus::Materials::Material&lt; LinearElasticityT&lt; ST &gt; &gt;::name</qualifiedname>
        <briefdescription>
<para>Get the name of the implemented material. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Name of the material. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/interface.hh" line="108" column="33" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/interface.hh" bodystart="108" bodyend="108"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="a01583_1ad8595b9538b491e09afa21cdde902fde" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Ikarus::Materials::LinearElasticityT&lt; ST &gt;::LinearElasticityT</definition>
        <argsstring>(const MaterialParameters &amp;mpt)</argsstring>
        <name>LinearElasticityT</name>
        <qualifiedname>Ikarus::Materials::LinearElasticityT::LinearElasticityT</qualifiedname>
        <param>
          <type>const <ref refid="a01583_1ad12f92c56d1187f958192ac9bdd55fc3" kindref="member">MaterialParameters</ref> &amp;</type>
          <declname>mpt</declname>
        </param>
        <briefdescription>
<para>Constructor for <ref refid="a01583" kindref="compound">LinearElasticityT</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mpt</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="a01667" kindref="compound">LamesFirstParameterAndShearModulus</ref> object. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/linearelasticity.hh" line="64" column="12" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/linearelasticity.hh" bodystart="64" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="a01583_1a53bd9b23a1d424e4896b74513e5f4cf2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="a01583_1ad12f92c56d1187f958192ac9bdd55fc3" kindref="member">MaterialParameters</ref></type>
        <definition>MaterialParameters Ikarus::Materials::LinearElasticityT&lt; ST &gt;::materialParametersImpl</definition>
        <argsstring>() const</argsstring>
        <name>materialParametersImpl</name>
        <qualifiedname>Ikarus::Materials::LinearElasticityT::materialParametersImpl</qualifiedname>
        <briefdescription>
<para>Returns the material parameters stored in the material. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/linearelasticity.hh" line="70" column="22" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/linearelasticity.hh" bodystart="70" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="a01583_1aa989daa2ce5cfc4702e92eab7a09d95a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Derived</type>
          </param>
        </templateparamlist>
        <type><ref refid="a01583_1ab4db5d32aab85031851f53ffb57244d3" kindref="member">ScalarType</ref></type>
        <definition>ScalarType Ikarus::Materials::LinearElasticityT&lt; ST &gt;::storedEnergyImpl</definition>
        <argsstring>(const Eigen::MatrixBase&lt; Derived &gt; &amp;E) const</argsstring>
        <name>storedEnergyImpl</name>
        <qualifiedname>Ikarus::Materials::LinearElasticityT::storedEnergyImpl</qualifiedname>
        <param>
          <type>const Eigen::MatrixBase&lt; Derived &gt; &amp;</type>
          <declname>E</declname>
        </param>
        <briefdescription>
<para>Calculates the stored energy in the material. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Derived</parametername>
</parameternamelist>
<parameterdescription>
<para>The underlying <ref refid="a00412" kindref="compound">Eigen</ref> type. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>E</parametername>
</parameternamelist>
<parameterdescription>
<para>The strain tensor components. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Scalar return of stored energy. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/linearelasticity.hh" line="80" column="14" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/linearelasticity.hh" bodystart="80" bodyend="82"/>
        <referencedby refid="a01583_1aa989daa2ce5cfc4702e92eab7a09d95a" compoundref="a00266" startline="80" endline="82">Ikarus::Materials::LinearElasticityT&lt; ST &gt;::storedEnergyImpl</referencedby>
      </memberdef>
      <memberdef kind="function" id="a01583_1a0ec2d3782e6a40bba083365ce423d35d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>bool</type>
            <declname>voigt</declname>
            <defname>voigt</defname>
          </param>
          <param>
            <type>typename Derived</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto Ikarus::Materials::LinearElasticityT&lt; ST &gt;::stressesImpl</definition>
        <argsstring>(const Eigen::MatrixBase&lt; Derived &gt; &amp;E) const</argsstring>
        <name>stressesImpl</name>
        <qualifiedname>Ikarus::Materials::LinearElasticityT::stressesImpl</qualifiedname>
        <param>
          <type>const Eigen::MatrixBase&lt; Derived &gt; &amp;</type>
          <declname>E</declname>
        </param>
        <briefdescription>
<para>Calculates the stresses in the material. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>voigt</parametername>
</parameternamelist>
<parameterdescription>
<para>Boolean indicating whether to return Voigt-shaped result. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Derived</parametername>
</parameternamelist>
<parameterdescription>
<para>The underlying <ref refid="a00412" kindref="compound">Eigen</ref> type. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>E</parametername>
</parameternamelist>
<parameterdescription>
<para>The strain tensor components. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Matrix valued return of stresses. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/linearelasticity.hh" line="93" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/linearelasticity.hh" bodystart="93" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="a01583_1acf599d41478f105fa80b5a147edd4f76" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>bool</type>
            <declname>voigt</declname>
            <defname>voigt</defname>
          </param>
          <param>
            <type>typename Derived</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto Ikarus::Materials::LinearElasticityT&lt; ST &gt;::tangentModuliImpl</definition>
        <argsstring>(const Eigen::MatrixBase&lt; Derived &gt; &amp;E) const</argsstring>
        <name>tangentModuliImpl</name>
        <qualifiedname>Ikarus::Materials::LinearElasticityT::tangentModuliImpl</qualifiedname>
        <param>
          <type>const Eigen::MatrixBase&lt; Derived &gt; &amp;</type>
          <declname>E</declname>
        </param>
        <briefdescription>
<para>Calculates the tangent moduli in the material. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>voigt</parametername>
</parameternamelist>
<parameterdescription>
<para>Boolean indicating whether to return Voigt-shaped result. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Derived</parametername>
</parameternamelist>
<parameterdescription>
<para>The underlying <ref refid="a00412" kindref="compound">Eigen</ref> type. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>E</parametername>
</parameternamelist>
<parameterdescription>
<para>The strain tensor components. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Tangent moduli as fourth-order tensor. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/linearelasticity.hh" line="106" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/linearelasticity.hh" bodystart="106" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="a01583_1a10f3c8da4ae7e6129f666d52ff799912" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename STO</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto Ikarus::Materials::LinearElasticityT&lt; ST &gt;::rebind</definition>
        <argsstring>() const</argsstring>
        <name>rebind</name>
        <qualifiedname>Ikarus::Materials::LinearElasticityT::rebind</qualifiedname>
        <briefdescription>
<para>Rebind material to a different scalar type. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>STO</parametername>
</parameternamelist>
<parameterdescription>
<para>The scalar type to rebind to. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Rebound material. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/linearelasticity.hh" line="117" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/linearelasticity.hh" bodystart="117" bodyend="121"/>
      </memberdef>
      <memberdef kind="function" id="a01579_1a2e6191f96be90789c574f58f268f5aea" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr const <ref refid="a01579_1a5303817231472050f36f079bc730988b" kindref="member">MaterialImpl</ref> &amp;</type>
        <definition>constexpr const MaterialImpl &amp; Ikarus::Materials::Material&lt; LinearElasticityT&lt; ST &gt;  &gt;::impl</definition>
        <argsstring>() const</argsstring>
        <name>impl</name>
        <qualifiedname>Ikarus::Materials::Material&lt; LinearElasticityT&lt; ST &gt; &gt;::impl</qualifiedname>
        <briefdescription>
<para>Const accessor to the underlying material (CRTP). </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Const reference to the underlying material. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/interface.hh" line="94" column="32" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/interface.hh" bodystart="94" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="a01579_1ae6ac28e09154cef841393f09f76d680b" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr <ref refid="a01579_1a5303817231472050f36f079bc730988b" kindref="member">MaterialImpl</ref> &amp;</type>
        <definition>constexpr MaterialImpl &amp; Ikarus::Materials::Material&lt; LinearElasticityT&lt; ST &gt;  &gt;::impl</definition>
        <argsstring>()</argsstring>
        <name>impl</name>
        <qualifiedname>Ikarus::Materials::Material&lt; LinearElasticityT&lt; ST &gt; &gt;::impl</qualifiedname>
        <briefdescription>
<para>Accessor to the underlying material (CRTP). </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Reference to the underlying material. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/interface.hh" line="101" column="26" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/interface.hh" bodystart="101" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="a01579_1a0b4a203f259da74328dacbcc405c0c22" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto Ikarus::Materials::Material&lt; LinearElasticityT&lt; ST &gt;  &gt;::materialParameters</definition>
        <argsstring>() const</argsstring>
        <name>materialParameters</name>
        <qualifiedname>Ikarus::Materials::Material&lt; LinearElasticityT&lt; ST &gt; &gt;::materialParameters</qualifiedname>
        <briefdescription>
<para>Returns the material parameters stored in the implemented material. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Material parameter. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/interface.hh" line="114" column="9" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/interface.hh" bodystart="114" bodyend="114"/>
      </memberdef>
      <memberdef kind="function" id="a01579_1a8d6370e3d198662f4222a0b94e2d6703" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto Ikarus::Materials::Material&lt; LinearElasticityT&lt; ST &gt;  &gt;::storedEnergy</definition>
        <argsstring>(const Eigen::MatrixBase&lt; Derived &gt; &amp;Eraw) const</argsstring>
        <name>storedEnergy</name>
        <qualifiedname>Ikarus::Materials::Material&lt; LinearElasticityT&lt; ST &gt; &gt;::storedEnergy</qualifiedname>
        <param>
          <type>const Eigen::MatrixBase&lt; Derived &gt; &amp;</type>
          <declname>Eraw</declname>
        </param>
        <briefdescription>
<para>Return the stored potential energy of the material. </para>
        </briefdescription>
        <detaileddescription>
<para>This function return the free Helmholtz energy of the material</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>tag</parametername>
</parameternamelist>
<parameterdescription>
<para>Strain tag indicating which strain tensor components are passed. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Derived</parametername>
</parameternamelist>
<parameterdescription>
<para>The underlying <ref refid="a00412" kindref="compound">Eigen</ref> type. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Eraw</parametername>
</parameternamelist>
<parameterdescription>
<para>The strain tensor components passed in Voigt notation or matrix notation. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Scalar return of stored energy. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/interface.hh" line="136" column="9" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/interface.hh" bodystart="136" bodyend="147"/>
      </memberdef>
      <memberdef kind="function" id="a01579_1a8a68e052cade23285d1a28d1e08845f5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto Ikarus::Materials::Material&lt; LinearElasticityT&lt; ST &gt;  &gt;::stresses</definition>
        <argsstring>(const Eigen::MatrixBase&lt; Derived &gt; &amp;Eraw) const</argsstring>
        <name>stresses</name>
        <qualifiedname>Ikarus::Materials::Material&lt; LinearElasticityT&lt; ST &gt; &gt;::stresses</qualifiedname>
        <param>
          <type>const Eigen::MatrixBase&lt; Derived &gt; &amp;</type>
          <declname>Eraw</declname>
        </param>
        <briefdescription>
<para>Get the stresses of the material. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>tag</parametername>
</parameternamelist>
<parameterdescription>
<para>Strain tag indicating which strain tensor components are passed. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>voigt</parametername>
</parameternamelist>
<parameterdescription>
<para>Boolean indicating whether to return Voigt-shaped result. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Derived</parametername>
</parameternamelist>
<parameterdescription>
<para>The underlying <ref refid="a00412" kindref="compound">Eigen</ref> type. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Eraw</parametername>
</parameternamelist>
<parameterdescription>
<para>The strain tensor components passed in Voigt notation or matrix notation. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Vectorial or Matrix return of stresses. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/interface.hh" line="160" column="9" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/interface.hh" bodystart="160" bodyend="168"/>
      </memberdef>
      <memberdef kind="function" id="a01579_1a7a97d64507fd1ce0c14e919edb8a639b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto Ikarus::Materials::Material&lt; LinearElasticityT&lt; ST &gt;  &gt;::tangentModuli</definition>
        <argsstring>(const Eigen::MatrixBase&lt; Derived &gt; &amp;Eraw) const</argsstring>
        <name>tangentModuli</name>
        <qualifiedname>Ikarus::Materials::Material&lt; LinearElasticityT&lt; ST &gt; &gt;::tangentModuli</qualifiedname>
        <param>
          <type>const Eigen::MatrixBase&lt; Derived &gt; &amp;</type>
          <declname>Eraw</declname>
        </param>
        <briefdescription>
<para>Get the tangentModuli of the material. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>tag</parametername>
</parameternamelist>
<parameterdescription>
<para>Strain tag indicating which strain tensor components are passed. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>voigt</parametername>
</parameternamelist>
<parameterdescription>
<para>Boolean indicating whether to return Voigt-shaped result. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Derived</parametername>
</parameternamelist>
<parameterdescription>
<para>The underlying <ref refid="a00412" kindref="compound">Eigen</ref> type. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Eraw</parametername>
</parameternamelist>
<parameterdescription>
<para>The strain tensor components passed in Voigt notation or matrix notation. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Tangent moduli in Voigt notation or as fourth-order tensor. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/interface.hh" line="181" column="9" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/interface.hh" bodystart="181" bodyend="189"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Implementation of the Linear Elasticity material model.</para>
<para>The energy is computed as. </para>
    </briefdescription>
    <detaileddescription>
<para><formula id="46">\[ \psi(\Bvep) = \frac{\la}{2} (\tr \Bvep)^2   +\mu \tr (\Bvep^2) ,\]</formula> where <formula id="47">$ \Bvep $</formula> denotes the linear strain tensor.</para>
<para>The second Piola-Kirchhoff stresses are computed as <formula id="48">\[ \BS(\Bvep) =\fracpt{\psi(\Bvep)}{\Bvep} = \la \tr \Bvep \BI  +2 \mu \Bvep,\]</formula></para>
<para>and the material tangent moduli are computed as <formula id="49">\[ \BBC(\Bvep) =\fracpt{^2\psi(\Bvep)}{\Bvep^2} =  \la \tr \Bvep \CI  +2 \mu \CI^{\mathrm{sym}},\]</formula> where <formula id="50">$ \CI_{IJKL} =  \de_{IJ}\de_{KL}$</formula> and <formula id="51">$ \CI_{IJKL}^\mathrm{sym} =  \frac{1}{2}(\de_{IK}\de_{JL}+
\de_{IL}\de_{JK})$</formula>. <parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>ST</parametername>
</parameternamelist>
<parameterdescription>
<para>The scalar type used in the material. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>Ikarus::Materials::LinearElasticityT&lt; ST &gt;</label>
        <link refid="a01583"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>Ikarus::Materials::Material&lt; MI &gt;</label>
        <link refid="a01579"/>
      </node>
      <node id="2">
        <label>Ikarus::Materials::Material&lt; LinearElasticityT&lt; ST &gt; &gt;</label>
        <link refid="a01579"/>
        <childnode refid="3" relation="template-instance">
          <edgelabel>&lt; LinearElasticityT&lt; ST &gt; &gt;</edgelabel>
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>Ikarus::Materials::LinearElasticityT&lt; ST &gt;</label>
        <link refid="a01583"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>Ikarus::Materials::Material&lt; MI &gt;</label>
        <link refid="a01579"/>
      </node>
      <node id="2">
        <label>Ikarus::Materials::Material&lt; LinearElasticityT&lt; ST &gt; &gt;</label>
        <link refid="a01579"/>
        <childnode refid="3" relation="template-instance">
          <edgelabel>&lt; LinearElasticityT&lt; ST &gt; &gt;</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/linearelasticity.hh" line="34" column="1" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/linearelasticity.hh" bodystart="35" bodyend="125"/>
    <listofallmembers>
      <member refid="a01583_1a115fa825a0799eec974c082ddbb452c3" prot="public" virt="non-virtual"><scope>Ikarus::Materials::LinearElasticityT</scope><name>Base</name></member>
      <member refid="a01579_1ae9e08c2d0dc02321b8a4d81d4052f63f" prot="public" virt="non-virtual"><scope>Ikarus::Materials::LinearElasticityT</scope><name>derivativeFactor</name></member>
      <member refid="a01583_1a0f569ed9c3fcc79b2606732661ddec96" prot="public" virt="non-virtual"><scope>Ikarus::Materials::LinearElasticityT</scope><name>derivativeFactorImpl</name></member>
      <member refid="a01583_1a8a0160b6a92fd1d320b8d642de402ce7" prot="public" virt="non-virtual"><scope>Ikarus::Materials::LinearElasticityT</scope><name>dim</name></member>
      <member refid="a01583_1ae3fc1c847d10fa8a3f050b5b34668f08" prot="public" virt="non-virtual"><scope>Ikarus::Materials::LinearElasticityT</scope><name>energyAcceptsVoigt</name></member>
      <member refid="a01583_1a6fc59c96a4b7c84a87bfbb154c4d5359" prot="public" virt="non-virtual"><scope>Ikarus::Materials::LinearElasticityT</scope><name>field_type</name></member>
      <member refid="a01579_1a2e6191f96be90789c574f58f268f5aea" prot="public" virt="non-virtual"><scope>Ikarus::Materials::LinearElasticityT</scope><name>impl</name></member>
      <member refid="a01579_1ae6ac28e09154cef841393f09f76d680b" prot="public" virt="non-virtual"><scope>Ikarus::Materials::LinearElasticityT</scope><name>impl</name></member>
      <member refid="a01579_1af50dfddadfe829082a56eb804bfb7980" prot="public" virt="non-virtual"><scope>Ikarus::Materials::LinearElasticityT</scope><name>isReduced</name></member>
      <member refid="a01583_1ad8595b9538b491e09afa21cdde902fde" prot="public" virt="non-virtual"><scope>Ikarus::Materials::LinearElasticityT</scope><name>LinearElasticityT</name></member>
      <member refid="a01579_1a5303817231472050f36f079bc730988b" prot="public" virt="non-virtual"><scope>Ikarus::Materials::LinearElasticityT</scope><name>MaterialImpl</name></member>
      <member refid="a01579_1a0b4a203f259da74328dacbcc405c0c22" prot="public" virt="non-virtual"><scope>Ikarus::Materials::LinearElasticityT</scope><name>materialParameters</name></member>
      <member refid="a01583_1ad12f92c56d1187f958192ac9bdd55fc3" prot="public" virt="non-virtual"><scope>Ikarus::Materials::LinearElasticityT</scope><name>MaterialParameters</name></member>
      <member refid="a01583_1a53bd9b23a1d424e4896b74513e5f4cf2" prot="public" virt="non-virtual"><scope>Ikarus::Materials::LinearElasticityT</scope><name>materialParametersImpl</name></member>
      <member refid="a01583_1ac181a3bd0adf38399b1613a7e4028145" prot="public" virt="non-virtual"><scope>Ikarus::Materials::LinearElasticityT</scope><name>MaterialTensor</name></member>
      <member refid="a01583_1a360dde39068b805f20fc6afdd4cbbe9e" prot="public" virt="non-virtual"><scope>Ikarus::Materials::LinearElasticityT</scope><name>moduliAcceptsVoigt</name></member>
      <member refid="a01583_1ad15d556e5b85d84458d9b4988fcf3658" prot="public" virt="non-virtual"><scope>Ikarus::Materials::LinearElasticityT</scope><name>moduliToVoigt</name></member>
      <member refid="a01579_1a03ae10e8656beed2aa69c8a9d27907e5" prot="public" virt="non-virtual"><scope>Ikarus::Materials::LinearElasticityT</scope><name>name</name></member>
      <member refid="a01583_1a6adc7a0dd69bb642adcd5061d373b888" prot="public" virt="non-virtual"><scope>Ikarus::Materials::LinearElasticityT</scope><name>nameImpl</name></member>
      <member refid="a01583_1a10f3c8da4ae7e6129f666d52ff799912" prot="public" virt="non-virtual"><scope>Ikarus::Materials::LinearElasticityT</scope><name>rebind</name></member>
      <member refid="a01583_1ab4db5d32aab85031851f53ffb57244d3" prot="public" virt="non-virtual"><scope>Ikarus::Materials::LinearElasticityT</scope><name>ScalarType</name></member>
      <member refid="a01579_1a8d6370e3d198662f4222a0b94e2d6703" prot="public" virt="non-virtual"><scope>Ikarus::Materials::LinearElasticityT</scope><name>storedEnergy</name></member>
      <member refid="a01583_1aa989daa2ce5cfc4702e92eab7a09d95a" prot="public" virt="non-virtual"><scope>Ikarus::Materials::LinearElasticityT</scope><name>storedEnergyImpl</name></member>
      <member refid="a01583_1ac8d0e018aa9e1b9fdd0effec8ad74dba" prot="public" virt="non-virtual"><scope>Ikarus::Materials::LinearElasticityT</scope><name>StrainMatrix</name></member>
      <member refid="a01583_1a5b013f72a62a678aaf658287610a7b69" prot="public" virt="non-virtual"><scope>Ikarus::Materials::LinearElasticityT</scope><name>strainTag</name></member>
      <member refid="a01583_1ad5d073c95b1b2a7382c5ee0f750db512" prot="public" virt="non-virtual"><scope>Ikarus::Materials::LinearElasticityT</scope><name>stressAcceptsVoigt</name></member>
      <member refid="a01579_1a8a68e052cade23285d1a28d1e08845f5" prot="public" virt="non-virtual"><scope>Ikarus::Materials::LinearElasticityT</scope><name>stresses</name></member>
      <member refid="a01583_1a0ec2d3782e6a40bba083365ce423d35d" prot="public" virt="non-virtual"><scope>Ikarus::Materials::LinearElasticityT</scope><name>stressesImpl</name></member>
      <member refid="a01583_1a775186da978d65fb557c170ca9a3a6f2" prot="public" virt="non-virtual"><scope>Ikarus::Materials::LinearElasticityT</scope><name>StressMatrix</name></member>
      <member refid="a01583_1a313c8617a56a0f6e3b34afd780d6c21c" prot="public" virt="non-virtual"><scope>Ikarus::Materials::LinearElasticityT</scope><name>stressTag</name></member>
      <member refid="a01583_1a38ed5779521303455b5381ba72c1b568" prot="public" virt="non-virtual"><scope>Ikarus::Materials::LinearElasticityT</scope><name>stressToVoigt</name></member>
      <member refid="a01583_1a9ed771938ccb57db5653e51b9de933aa" prot="private" virt="non-virtual"><scope>Ikarus::Materials::LinearElasticityT</scope><name>svk_</name></member>
      <member refid="a01579_1a7a97d64507fd1ce0c14e919edb8a639b" prot="public" virt="non-virtual"><scope>Ikarus::Materials::LinearElasticityT</scope><name>tangentModuli</name></member>
      <member refid="a01583_1acf599d41478f105fa80b5a147edd4f76" prot="public" virt="non-virtual"><scope>Ikarus::Materials::LinearElasticityT</scope><name>tangentModuliImpl</name></member>
      <member refid="a01583_1a9c47f61a3009439174e0077cacdaa000" prot="public" virt="non-virtual"><scope>Ikarus::Materials::LinearElasticityT</scope><name>tangentModuliTag</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
