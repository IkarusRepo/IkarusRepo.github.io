<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="a00245" kind="file" language="C++">
    <compoundname>gent.hh</compoundname>
    <includes refid="a00260" local="no">ikarus/finiteelements/mechanics/materials/hyperelastic/deviatoric/deviatoricinvariants.hh</includes>
    <includes refid="a00275" local="no">ikarus/finiteelements/mechanics/materials/materialhelpers.hh</includes>
    <includes refid="a00233" local="no">ikarus/finiteelements/mechanics/materials/tags.hh</includes>
    <includes refid="a00032" local="no">ikarus/utils/tensorutils.hh</includes>
    <includedby refid="a00266" local="no">factory.hh</includedby>
    <incdepgraph>
      <node id="16">
        <label>ikarus/assembler/dirichletbcenforcement.hh</label>
        <link refid="a00347"/>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>ikarus/finiteelements/mechanics/materials/hyperelastic/deviatoric/deviatoricinvariants.hh</label>
        <link refid="a00260"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>gent.hh</label>
        <link refid="a00245"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>ikarus/finiteelements/mechanics/materials/materialhelpers.hh</label>
        <link refid="a00275"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>ikarus/finiteelements/mechanics/materials/tags.hh</label>
        <link refid="a00233"/>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>ikarus/utils/concepts.hh</label>
        <link refid="a03101"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>ikarus/utils/makeenum.hh</label>
        <link refid="a00011"/>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>ikarus/utils/math.hh</label>
        <link refid="a00044"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>ikarus/utils/tensorutils.hh</label>
        <link refid="a00032"/>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>ikarus/utils/traits.hh</label>
        <link refid="a00068"/>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>Eigen/Dense</label>
      </node>
      <node id="14">
        <label>Eigen/Sparse</label>
      </node>
      <node id="15">
        <label>autodiff/forward/dual/dual.hpp</label>
      </node>
      <node id="8">
        <label>concepts</label>
      </node>
      <node id="18">
        <label>dune/common/exceptions.hh</label>
      </node>
      <node id="5">
        <label>dune/common/float_cmp.hh</label>
      </node>
      <node id="23">
        <label>dune/common/hybridutilities.hh</label>
      </node>
      <node id="27">
        <label>dune/common/promotiontraits.hh</label>
      </node>
      <node id="12">
        <label>dune/functions/functionspacebases/basistags.hh</label>
      </node>
      <node id="13">
        <label>dune/functions/functionspacebases/lagrangebasis.hh</label>
      </node>
      <node id="21">
        <label>functional</label>
      </node>
      <node id="25">
        <label>numeric</label>
      </node>
      <node id="4">
        <label>ranges</label>
      </node>
      <node id="22">
        <label>tuple</label>
      </node>
      <node id="9">
        <label>type_traits</label>
      </node>
      <node id="26">
        <label>unsupported/Eigen/CXX11/Tensor</label>
      </node>
      <node id="10">
        <label>utility</label>
      </node>
      <node id="11">
        <label>vector</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="4">
        <label>linearelastic.hh</label>
        <link refid="a00224"/>
      </node>
      <node id="3">
        <label>materials.hh</label>
        <link refid="a03059"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>gent.hh</label>
        <link refid="a00245"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>factory.hh</label>
        <link refid="a00266"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>resultevaluators.hh</label>
        <link refid="a00353"/>
      </node>
      <node id="5">
        <label>material.hh</label>
        <link refid="a00158"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>_ikarus.cc</label>
        <link refid="a00365"/>
      </node>
      <node id="6">
        <label>materials.hh</label>
        <link refid="a03062"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="a01542" prot="public">Ikarus::GentMatParameters</innerclass>
    <innerclass refid="a01546" prot="public">Ikarus::Materials::GentT</innerclass>
    <innernamespace refid="a00411">Ikarus</innernamespace>
    <innernamespace refid="a00422">Ikarus::Materials</innernamespace>
    <briefdescription>
<para>Implementation of the Gent material model. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>SPDX-FileCopyrightText:<sp/>2021-2025<sp/>The<sp/>Ikarus<sp/>Developers<sp/>mueller@ibb.uni-stuttgart.de</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>SPDX-License-Identifier:<sp/>LGPL-3.0-or-later</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="a00260" kindref="compound">ikarus/finiteelements/mechanics/materials/hyperelastic/deviatoric/deviatoricinvariants.hh</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="a00275" kindref="compound">ikarus/finiteelements/mechanics/materials/materialhelpers.hh</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="a00233" kindref="compound">ikarus/finiteelements/mechanics/materials/tags.hh</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="a00032" kindref="compound">ikarus/utils/tensorutils.hh</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="a00411" kindref="compound">Ikarus</ref><sp/>{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="20" refid="a01542" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="a01542" kindref="compound">GentMatParameters</ref></highlight></codeline>
<codeline lineno="21"><highlight class="normal">{</highlight></codeline>
<codeline lineno="22" refid="a01542_1a419ca66b8ac1231091d83637752c7e9b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="a01542_1a419ca66b8ac1231091d83637752c7e9b" kindref="member">mu</ref>;<sp/></highlight></codeline>
<codeline lineno="23" refid="a01542_1ad4483a8c3f8b72a934baeee80bb4c3be" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="a01542_1ad4483a8c3f8b72a934baeee80bb4c3be" kindref="member">Jm</ref>;<sp/></highlight></codeline>
<codeline lineno="24"><highlight class="normal">};</highlight></codeline>
<codeline lineno="25"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>Ikarus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="a00422" kindref="compound">Ikarus::Materials</ref><sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ST_&gt;</highlight></codeline>
<codeline lineno="53" refid="a01546" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="a01546" kindref="compound">GentT</ref></highlight></codeline>
<codeline lineno="54"><highlight class="normal">{</highlight></codeline>
<codeline lineno="55" refid="a01546_1ad494a4eb399bf1ee960cab0ccedc878c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="a01546_1ad494a4eb399bf1ee960cab0ccedc878c" kindref="member">dim</ref><sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="56" refid="a01546_1a006a1668e5050f802f427ffd2519ad8c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="a01546_1a006a1668e5050f802f427ffd2519ad8c" kindref="member">ScalarType</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>ST_;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ST<sp/>=<sp/>ScalarType&gt;</highlight></codeline>
<codeline lineno="59" refid="a01546_1af3f9b5e36aca41ecfa7e05517e10ee50" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="a01546_1af3f9b5e36aca41ecfa7e05517e10ee50" kindref="member">PrincipalStretches</ref><sp/>=<sp/>Eigen::Vector&lt;ST,<sp/>3&gt;;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ST<sp/>=<sp/>ScalarType&gt;</highlight></codeline>
<codeline lineno="62" refid="a01546_1a9303be9dbb2da94477af2679daf51d5a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="a01546_1a9303be9dbb2da94477af2679daf51d5a" kindref="member">Invariants</ref><sp/>=<sp/><ref refid="a01546_1af3f9b5e36aca41ecfa7e05517e10ee50" kindref="member">PrincipalStretches&lt;ST&gt;</ref>;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ST<sp/>=<sp/>ScalarType&gt;</highlight></codeline>
<codeline lineno="65" refid="a01546_1a232189b3d21d46e2c5f407f90d7f1ab6" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="a01546_1a232189b3d21d46e2c5f407f90d7f1ab6" kindref="member">FirstDerivative</ref><sp/>=<sp/>Eigen::Vector&lt;ST,<sp/>dim&gt;;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ST<sp/>=<sp/>ScalarType&gt;</highlight></codeline>
<codeline lineno="67" refid="a01546_1aba1efc2e1e4c478fb5c8b1cf62d85971" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="a01546_1aba1efc2e1e4c478fb5c8b1cf62d85971" kindref="member">SecondDerivative</ref><sp/>=<sp/>Eigen::Matrix&lt;ST,<sp/>dim,<sp/>dim&gt;;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69" refid="a01546_1affe89a380b23ceaba49703324aa24ddb" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="a01542" kindref="compound">MaterialParameters</ref><sp/>=<sp/><ref refid="a01542" kindref="compound">GentMatParameters</ref>;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71" refid="a01546_1a025c9024a87a6da081bb2698a6980544" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="a01546_1a025c9024a87a6da081bb2698a6980544" kindref="member">stretchTag</ref><sp/>=<sp/><ref refid="a00411_1aec3d3c4647af5c01e1bf18637b3c89feaae6dc167631992e1312a197d5c3c39f8" kindref="member">PrincipalStretchTags::deviatoric</ref>;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73" refid="a01546_1a6ab32a23370f0a8b3b266e7da822b09d" refkind="member"><highlight class="normal"><sp/><sp/>[[nodiscard]]<sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="a01546_1a6ab32a23370f0a8b3b266e7da822b09d" kindref="member">name</ref>()<sp/>noexcept<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Gent&quot;</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="81" refid="a01546_1a394ec60a1918b0285b925c729dcb3be8" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="a01546_1a394ec60a1918b0285b925c729dcb3be8" kindref="member">GentT</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="a01542" kindref="compound">MaterialParameters</ref>&amp;<sp/>matPar)</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>matPar_{matPar}<sp/>{}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="87" refid="a01546_1a8248240a321b3c45a080ed0c20169ddd" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="a01542" kindref="compound">MaterialParameters</ref><sp/><ref refid="a01546_1a8248240a321b3c45a080ed0c20169ddd" kindref="member">materialParametersImpl</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>matPar_;<sp/>}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ST<sp/>=<sp/>ScalarType&gt;</highlight></codeline>
<codeline lineno="98" refid="a01546_1a68ae9586f841b9b0172452f539c8b9ee" refkind="member"><highlight class="normal"><sp/><sp/>ST<sp/><ref refid="a01546_1a68ae9586f841b9b0172452f539c8b9ee" kindref="member">storedEnergyImpl</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="a01546_1af3f9b5e36aca41ecfa7e05517e10ee50" kindref="member">PrincipalStretches&lt;ST&gt;</ref>&amp;<sp/>lambda)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="a01546_1a9303be9dbb2da94477af2679daf51d5a" kindref="member">Invariants&lt;ST&gt;</ref>&amp;<sp/>invariants<sp/>=<sp/>Impl::invariants(lambda);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>devInvariants<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="a01538" kindref="compound">DeviatoricInvariants&lt;PrincipalStretches&lt;ST&gt;</ref>&gt;(lambda);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>W1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>devInvariants.<ref refid="a01538_1a9c016a61bba2d581b57c0f373a7f822c" kindref="member">value</ref>()[0];</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>checkJm(W1);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-(matPar_.<ref refid="a01542_1a419ca66b8ac1231091d83637752c7e9b" kindref="member">mu</ref><sp/>/<sp/>2.0)<sp/>*<sp/>matPar_.<ref refid="a01542_1ad4483a8c3f8b72a934baeee80bb4c3be" kindref="member">Jm</ref><sp/>*<sp/>log(1.0<sp/>-<sp/>((W1<sp/>-<sp/>3.0)<sp/>/<sp/>matPar_.<ref refid="a01542_1ad4483a8c3f8b72a934baeee80bb4c3be" kindref="member">Jm</ref>));</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ST<sp/>=<sp/>ScalarType&gt;</highlight></codeline>
<codeline lineno="114" refid="a01546_1ae528fcf9c0dd959467cbbc22b20c42e4" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="a01546_1a232189b3d21d46e2c5f407f90d7f1ab6" kindref="member">FirstDerivative&lt;ST&gt;</ref><sp/><ref refid="a01546_1ae528fcf9c0dd959467cbbc22b20c42e4" kindref="member">firstDerivativeImpl</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="a01546_1af3f9b5e36aca41ecfa7e05517e10ee50" kindref="member">PrincipalStretches&lt;ST&gt;</ref>&amp;<sp/>lambda)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="a01546_1a9303be9dbb2da94477af2679daf51d5a" kindref="member">Invariants&lt;ST&gt;</ref>&amp;<sp/>invariants<sp/>=<sp/>Impl::invariants(lambda);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>devInvariants<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="a01538" kindref="compound">DeviatoricInvariants&lt;PrincipalStretches&lt;ST&gt;</ref>&gt;(lambda);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>W1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>devInvariants.<ref refid="a01538_1a9c016a61bba2d581b57c0f373a7f822c" kindref="member">value</ref>()[0];</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>dW1dLambda<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>devInvariants.firstDerivative().first;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>mu<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>matPar_.<ref refid="a01542_1a419ca66b8ac1231091d83637752c7e9b" kindref="member">mu</ref>;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>Jm<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>matPar_.<ref refid="a01542_1ad4483a8c3f8b72a934baeee80bb4c3be" kindref="member">Jm</ref>;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>checkJm(W1);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="a01546_1a232189b3d21d46e2c5f407f90d7f1ab6" kindref="member">FirstDerivative&lt;ST&gt;</ref><sp/>dWdLambda<sp/>=<sp/>(mu<sp/>*<sp/>dW1dLambda<sp/>*<sp/>Jm)<sp/>/<sp/>(2.0<sp/>*<sp/>(Jm<sp/>-<sp/>W1)<sp/>+<sp/>6.0);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dWdLambda;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ST<sp/>=<sp/>ScalarType&gt;</highlight></codeline>
<codeline lineno="136" refid="a01546_1a2a7ac85d8340e3153acad2242485b087" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="a01546_1aba1efc2e1e4c478fb5c8b1cf62d85971" kindref="member">SecondDerivative&lt;ST&gt;</ref><sp/><ref refid="a01546_1a2a7ac85d8340e3153acad2242485b087" kindref="member">secondDerivativeImpl</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="a01546_1af3f9b5e36aca41ecfa7e05517e10ee50" kindref="member">PrincipalStretches&lt;ST&gt;</ref>&amp;<sp/>lambda)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="a01546_1a9303be9dbb2da94477af2679daf51d5a" kindref="member">Invariants&lt;ST&gt;</ref>&amp;<sp/>invariants<sp/>=<sp/>Impl::invariants(lambda);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>dS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="a01546_1aba1efc2e1e4c478fb5c8b1cf62d85971" kindref="member">SecondDerivative&lt;ST&gt;::Zero</ref>().eval();</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>devInvariants<sp/>=<sp/><ref refid="a01538" kindref="compound">DeviatoricInvariants&lt;PrincipalStretches&lt;ST&gt;</ref>&gt;(lambda);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>W1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>devInvariants.<ref refid="a01538_1a9c016a61bba2d581b57c0f373a7f822c" kindref="member">value</ref>()[0];</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>dW1dLambda<sp/><sp/><sp/><sp/>=<sp/>devInvariants.firstDerivative().first;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>ddW1dLambda<sp/><sp/><sp/>=<sp/>devInvariants.secondDerivative().first;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>mu<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>matPar_.<ref refid="a01542_1a419ca66b8ac1231091d83637752c7e9b" kindref="member">mu</ref>;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>Jm<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>matPar_.<ref refid="a01542_1ad4483a8c3f8b72a934baeee80bb4c3be" kindref="member">Jm</ref>;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>checkJm(W1);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>i<sp/>:<sp/>dimensionRange())</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>j<sp/>:<sp/>dimensionRange())<sp/>{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>factor1<sp/>=<sp/>1.0<sp/>-<sp/>((W1<sp/>-<sp/>3.0)<sp/>/<sp/>Jm);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dS(i,<sp/>j)<sp/>+=<sp/>(mu<sp/>/<sp/>(2.0<sp/>*<sp/>factor1))<sp/>*<sp/>(ddW1dLambda(i,<sp/>j)<sp/>+<sp/>(dW1dLambda[i]<sp/>*<sp/>dW1dLambda[j]<sp/>/<sp/>(factor1<sp/>*<sp/>Jm)));</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>==<sp/>j)</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dS(i,<sp/>j)<sp/>-=<sp/>(mu<sp/>/<sp/>(2.0<sp/>*<sp/>lambda[i]<sp/>*<sp/>factor1))<sp/>*<sp/>dW1dLambda[i];</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dS;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>STO&gt;</highlight></codeline>
<codeline lineno="165" refid="a01546_1a5d96044e7cd8acc2cb3d1aeaf4bb24d7" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="a01546_1a5d96044e7cd8acc2cb3d1aeaf4bb24d7" kindref="member">rebind</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="a01546" kindref="compound">GentT&lt;STO&gt;</ref>(matPar_);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><ref refid="a01546_1affe89a380b23ceaba49703324aa24ddb" kindref="member">MaterialParameters</ref><sp/>matPar_;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>dimensionRange()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Dune::range(<ref refid="a01546_1ad494a4eb399bf1ee960cab0ccedc878c" kindref="member">dim</ref>);<sp/>}</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>checkJm(<ref refid="a01546_1a006a1668e5050f802f427ffd2519ad8c" kindref="member">ScalarType</ref><sp/>W1)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Dune::FloatCmp::le(matPar_.Jm,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(W1)<sp/>-<sp/>3.0,<sp/>1e-14))</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DUNE_THROW(Dune::InvalidStateException,<sp/></highlight><highlight class="stringliteral">&quot;The<sp/>material<sp/>parameter<sp/>Jm<sp/>should<sp/>be<sp/>greater<sp/>than<sp/>(W1<sp/>-<sp/>3)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="178"><highlight class="normal">};</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="183" refid="a00422_1a8d05a34baf0684f0e4e2a10a721bb80d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="a01546" kindref="compound">Gent</ref><sp/>=<sp/><ref refid="a01546" kindref="compound">GentT&lt;double&gt;</ref>;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>Ikarus::Materials</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/hyperelastic/deviatoric/gent.hh"/>
  </compounddef>
</doxygen>
