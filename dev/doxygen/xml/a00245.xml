<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="a00245" kind="file" language="C++">
    <compoundname>vanishingstress.hh</compoundname>
    <includes refid="a00248" local="yes">vanishinghelpers.hh</includes>
    <includes refid="a02858" local="no">ikarus/finiteelements/mechanics/materials/interface.hh</includes>
    <includes refid="a00158" local="no">ikarus/solver/nonlinearsolver/newtonraphson.hh</includes>
    <includes refid="a00161" local="no">ikarus/solver/nonlinearsolver/nonlinearsolverfactory.hh</includes>
    <includes refid="a00047" local="no">ikarus/utils/concepts.hh</includes>
    <includes refid="a00056" local="no">ikarus/utils/nonlinearoperator.hh</includes>
    <includedby refid="a02861" local="no">materials.hh</includedby>
    <incdepgraph>
      <node id="14">
        <label>ikarus/assembler/dirichletbcenforcement.hh</label>
        <link refid="a00176"/>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="50">
        <label>ikarus/finiteelements/ferequirements.hh</label>
        <link refid="a00314"/>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="52">
        <label>ikarus/finiteelements/feresulttypes.hh</label>
        <link refid="a00305"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>ikarus/finiteelements/mechanics/materials/interface.hh</label>
        <link refid="a02858"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>ikarus/finiteelements/mechanics/materials/strainconversions.hh</label>
        <link refid="a00263"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>ikarus/finiteelements/mechanics/materials/tags.hh</label>
        <link refid="a00242"/>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>vanishinghelpers.hh</label>
        <link refid="a00248"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>vanishingstress.hh</label>
        <link refid="a00245"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>ikarus/finiteelements/physicshelper.hh</label>
        <link refid="a00293"/>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>ikarus/solver/linearsolver/linearsolver.hh</label>
        <link refid="a00146"/>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>ikarus/solver/nonlinearsolver/newtonraphson.hh</label>
        <link refid="a00158"/>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
      </node>
      <node id="48">
        <label>ikarus/solver/nonlinearsolver/nonlinearsolverfactory.hh</label>
        <link refid="a00161"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
      </node>
      <node id="43">
        <label>ikarus/solver/nonlinearsolver/solverinfos.hh</label>
        <link refid="a00152"/>
      </node>
      <node id="5">
        <label>ikarus/utils/concepts.hh</label>
        <link refid="a00047"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="44">
        <label>ikarus/utils/defaultfunctions.hh</label>
        <link refid="a00065"/>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>ikarus/utils/linearalgebrahelper.hh</label>
        <link refid="a00023"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>ikarus/utils/makeenum.hh</label>
        <link refid="a00005"/>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>ikarus/utils/math.hh</label>
        <link refid="a00038"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="53">
        <label>ikarus/utils/nonlinearoperator.hh</label>
        <link refid="a00056"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="49">
        <label>ikarus/utils/nonlinopfactory.hh</label>
        <link refid="a00026"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
      </node>
      <node id="45">
        <label>ikarus/utils/observer/observer.hh</label>
        <link refid="a00122"/>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="47">
        <label>ikarus/utils/observer/observermessages.hh</label>
        <link refid="a00131"/>
      </node>
      <node id="26">
        <label>ikarus/utils/tensorutils.hh</label>
        <link refid="a00032"/>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>ikarus/utils/traits.hh</label>
        <link refid="a00011"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>Eigen/Core</label>
      </node>
      <node id="4">
        <label>Eigen/Dense</label>
      </node>
      <node id="12">
        <label>Eigen/Sparse</label>
      </node>
      <node id="42">
        <label>Eigen/SparseCore</label>
      </node>
      <node id="13">
        <label>autodiff/forward/dual/dual.hpp</label>
      </node>
      <node id="6">
        <label>concepts</label>
      </node>
      <node id="16">
        <label>dune/common/exceptions.hh</label>
      </node>
      <node id="32">
        <label>dune/common/float_cmp.hh</label>
      </node>
      <node id="21">
        <label>dune/common/hybridutilities.hh</label>
      </node>
      <node id="29">
        <label>dune/common/promotiontraits.hh</label>
      </node>
      <node id="36">
        <label>dune/common/tuplevector.hh</label>
      </node>
      <node id="10">
        <label>dune/functions/functionspacebases/basistags.hh</label>
      </node>
      <node id="11">
        <label>dune/functions/functionspacebases/lagrangebasis.hh</label>
      </node>
      <node id="37">
        <label>dune/istl/bvector.hh</label>
      </node>
      <node id="19">
        <label>functional</label>
      </node>
      <node id="34">
        <label>iosfwd</label>
      </node>
      <node id="46">
        <label>map</label>
      </node>
      <node id="40">
        <label>memory</label>
      </node>
      <node id="27">
        <label>numeric</label>
      </node>
      <node id="35">
        <label>random</label>
      </node>
      <node id="3">
        <label>ranges</label>
      </node>
      <node id="51">
        <label>set</label>
      </node>
      <node id="20">
        <label>tuple</label>
      </node>
      <node id="7">
        <label>type_traits</label>
      </node>
      <node id="28">
        <label>unsupported/Eigen/CXX11/Tensor</label>
      </node>
      <node id="24">
        <label>unsupported/Eigen/MatrixFunctions</label>
      </node>
      <node id="8">
        <label>utility</label>
      </node>
      <node id="41">
        <label>variant</label>
      </node>
      <node id="9">
        <label>vector</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="3">
        <label>linearelastic.hh</label>
        <link refid="a00284"/>
      </node>
      <node id="2">
        <label>materials.hh</label>
        <link refid="a02861"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>vanishingstress.hh</label>
        <link refid="a00245"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>resultevaluators.hh</label>
        <link refid="a00326"/>
      </node>
      <node id="4">
        <label>material.hh</label>
        <link refid="a00218"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>_ikarus.cc</label>
        <link refid="a00347"/>
      </node>
      <node id="5">
        <label>materials.hh</label>
        <link refid="a02864"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="a01516" prot="public">Ikarus::VanishingStress</innerclass>
    <innernamespace refid="a00384">Ikarus</innernamespace>
    <briefdescription>
<para>Defines the VanishingStress material model and related functions. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>SPDX-FileCopyrightText:<sp/>2021-2025<sp/>The<sp/>Ikarus<sp/>Developers<sp/>mueller@ibb.uni-stuttgart.de</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>SPDX-License-Identifier:<sp/>LGPL-3.0-or-later</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="a00248" kindref="compound">vanishinghelpers.hh</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="a02858" kindref="compound">ikarus/finiteelements/mechanics/materials/interface.hh</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="a00158" kindref="compound">ikarus/solver/nonlinearsolver/newtonraphson.hh</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="a00161" kindref="compound">ikarus/solver/nonlinearsolver/nonlinearsolverfactory.hh</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="a00047" kindref="compound">ikarus/utils/concepts.hh</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="a00056" kindref="compound">ikarus/utils/nonlinearoperator.hh</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="a00384" kindref="compound">Ikarus</ref><sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;auto<sp/>stressIndexPair,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MI&gt;</highlight></codeline>
<codeline lineno="29" refid="a01516" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="a01516" kindref="compound">VanishingStress</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="a01492" kindref="compound">Material</ref>&lt;VanishingStress&lt;stressIndexPair,<sp/>MI&gt;&gt;</highlight></codeline>
<codeline lineno="30"><highlight class="normal">{</highlight></codeline>
<codeline lineno="31" refid="a01516_1aafb996e2bc6468edcb8cb5db451eb8d8" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="a01516_1aafb996e2bc6468edcb8cb5db451eb8d8" kindref="member">Underlying</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>MI;<sp/></highlight></codeline>
<codeline lineno="32" refid="a01516_1a447035068bc6195ea4669d38d9c3b5ea" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="a01516_1a447035068bc6195ea4669d38d9c3b5ea" kindref="member">MaterialParameters</ref><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Underlying::MaterialParameters;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="a01516_1a2e9a713a4811fec3881bb7fde7d74107" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="a01516_1a2e9a713a4811fec3881bb7fde7d74107" kindref="member">fixedPairs</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>stressIndexPair;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="35" refid="a01516_1a6b2db750aec34e9695251368a26788ae" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="a01516_1a6b2db750aec34e9695251368a26788ae" kindref="member">freeVoigtIndices</ref><sp/><sp/>=<sp/>createfreeVoigtIndices(<ref refid="a01516_1a2e9a713a4811fec3881bb7fde7d74107" kindref="member">fixedPairs</ref>);<sp/><sp/></highlight></codeline>
<codeline lineno="36" refid="a01516_1ae5a0c7ba92468388f585117257be5819" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="a01516_1ae5a0c7ba92468388f585117257be5819" kindref="member">fixedVoigtIndices</ref><sp/>=<sp/>createFixedVoigtIndices(<ref refid="a01516_1a2e9a713a4811fec3881bb7fde7d74107" kindref="member">fixedPairs</ref>);<sp/></highlight></codeline>
<codeline lineno="37" refid="a01516_1acfb79f8aa14fdd77f781a981c44a5bb9" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="a01516_1acfb79f8aa14fdd77f781a981c44a5bb9" kindref="member">fixedDiagonalVoigtIndicesSize</ref><sp/>=</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>countDiagonalIndices(<ref refid="a01516_1a2e9a713a4811fec3881bb7fde7d74107" kindref="member">fixedPairs</ref>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="39" refid="a01516_1ad2f54da2e2ad2dbe6aec1842ce3cfa42" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="a01516_1ad2f54da2e2ad2dbe6aec1842ce3cfa42" kindref="member">freeStrains</ref><sp/>=<sp/><ref refid="a01516_1a6b2db750aec34e9695251368a26788ae" kindref="member">freeVoigtIndices</ref>.size();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="40" refid="a01516_1abf9dc8c5818857de2da74382af6954d1" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="a01516_1abf9dc8c5818857de2da74382af6954d1" kindref="member">ScalarType</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Underlying::ScalarType;<sp/></highlight></codeline>
<codeline lineno="41" refid="a01516_1a8722c04929bc243a10f74f6d58bd0816" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="a01516_1a8722c04929bc243a10f74f6d58bd0816" kindref="member">isAutoDiff</ref><sp/><sp/>=<sp/><ref refid="a01980" kindref="compound">Concepts::AutodiffScalar&lt;ScalarType&gt;</ref>;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="a01516_1a53577fd96ff6cd07da7f8a35626d3608" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="a01516_1a53577fd96ff6cd07da7f8a35626d3608" kindref="member">strainTag</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>Underlying::strainTag;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="44" refid="a01516_1ad683d21cc4f959903371a3e1daee3802" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="a01516_1ad683d21cc4f959903371a3e1daee3802" kindref="member">stressTag</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>Underlying::stressTag;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="45" refid="a01516_1a06d6e057f8b88b969b50710848b162e2" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="a01516_1a06d6e057f8b88b969b50710848b162e2" kindref="member">tangentModuliTag</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>Underlying::tangentModuliTag;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="46" refid="a01516_1a9f3bf27e2d1db1c869ec480fddca3eec" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="a01516_1a9f3bf27e2d1db1c869ec480fddca3eec" kindref="member">energyAcceptsVoigt</ref><sp/><sp/><sp/><sp/><sp/>=<sp/>Underlying::energyAcceptsVoigt;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="47" refid="a01516_1ac4f50c8cf7a3efddf0a098381545edce" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="a01516_1ac4f50c8cf7a3efddf0a098381545edce" kindref="member">stressToVoigt</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="48" refid="a01516_1ad7b42e98dc65d1919b77bd334e5d542b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="a01516_1ad7b42e98dc65d1919b77bd334e5d542b" kindref="member">stressAcceptsVoigt</ref><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="49" refid="a01516_1ac374572798da72172130212a514732d8" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="a01516_1ac374572798da72172130212a514732d8" kindref="member">moduliToVoigt</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="50" refid="a01516_1af71580e6843d7cfaca43b6fe33cc6799" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="a01516_1af71580e6843d7cfaca43b6fe33cc6799" kindref="member">moduliAcceptsVoigt</ref><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="51" refid="a01516_1a2d0cc804e3ce9ca0e7a7928268e50afc" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="a01516_1a2d0cc804e3ce9ca0e7a7928268e50afc" kindref="member">derivativeFactorImpl</ref><sp/>=<sp/>Underlying::derivativeFactorImpl;<sp/></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="58" refid="a01516_1a527058d7d9690be56da3ab6cade05794" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="a01516_1a527058d7d9690be56da3ab6cade05794" kindref="member">VanishingStress</ref>(MI<sp/>mat,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MI::ScalarType<sp/>tol<sp/>=<sp/>1e-12)</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>matImpl_{mat},</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tol_{tol}<sp/>{}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62" refid="a01516_1a356a4d825f2d874842b054c33f552a55" refkind="member"><highlight class="normal"><sp/><sp/>[[nodiscard]]<sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="a01516_1a356a4d825f2d874842b054c33f552a55" kindref="member">nameImpl</ref>()<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>matName<sp/>=<sp/>MI::name()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_VanishingStress(&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>p<sp/>:<sp/><ref refid="a01516_1a2e9a713a4811fec3881bb7fde7d74107" kindref="member">fixedPairs</ref>)</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>matName<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;(&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(p.row)<sp/>+<sp/>std::to_string(p.col)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;)&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>matName<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;)&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>matName;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="73" refid="a01516_1a79ce3fba218d59be9ccc6964de150535" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="a01516_1a447035068bc6195ea4669d38d9c3b5ea" kindref="member">MaterialParameters</ref><sp/><ref refid="a01516_1a79ce3fba218d59be9ccc6964de150535" kindref="member">materialParametersImpl</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>matImpl_.materialParametersImpl();<sp/>}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Derived&gt;</highlight></codeline>
<codeline lineno="82" refid="a01516_1aa9d1c175db6e85c7dd17b1f3dfbd3387" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="a01516_1abf9dc8c5818857de2da74382af6954d1" kindref="member">ScalarType</ref><sp/><ref refid="a01516_1aa9d1c175db6e85c7dd17b1f3dfbd3387" kindref="member">storedEnergyImpl</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::MatrixBase&lt;Derived&gt;&amp;<sp/>E)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>[nonOp,<sp/>Esol]<sp/>=<sp/>reduceStress(E);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>matImpl_.storedEnergyImpl(Esol);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>voigt,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Derived&gt;</highlight></codeline>
<codeline lineno="95" refid="a01516_1abdfa744589b54cc5c943d781c73359f0" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="a01516_1abdfa744589b54cc5c943d781c73359f0" kindref="member">stressesImpl</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::MatrixBase&lt;Derived&gt;&amp;<sp/>E)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>[nonOp,<sp/>Esol]<sp/>=<sp/>reduceStress(E);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>stressesRed<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>matImpl_.template<sp/>stresses&lt;Underlying::strainTag,<sp/>true&gt;(Esol);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>(voigt)<sp/>{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="a00379_1ga2f675229501979101656ec4dee7764d5" kindref="member">removeCol</ref>(stressesRed,<sp/><ref refid="a01516_1ae5a0c7ba92468388f585117257be5819" kindref="member">fixedVoigtIndices</ref>);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="a00380_1gadc8e9e9f3838d0392a5fcf1e11374ee9" kindref="member">fromVoigt</ref>(stressesRed,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>voigt,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Derived&gt;</highlight></codeline>
<codeline lineno="113" refid="a01516_1acdd8f1a651ee1e15647ec146f981040d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="a01516_1acdd8f1a651ee1e15647ec146f981040d" kindref="member">tangentModuliImpl</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::MatrixBase&lt;Derived&gt;&amp;<sp/>E)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>[nonOp,<sp/>Esol]<sp/>=<sp/>reduceStress(E);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>C<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>matImpl_.template<sp/>tangentModuli&lt;Underlying::strainTag,<sp/>true&gt;(Esol);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>(voigt)</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="a00379_1ga19d425a4fbc72c2ef7a97d71de9329a4" kindref="member">staticCondensation</ref>(C,<sp/><ref refid="a01516_1ae5a0c7ba92468388f585117257be5819" kindref="member">fixedVoigtIndices</ref>);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="a00380_1gadc8e9e9f3838d0392a5fcf1e11374ee9" kindref="member">fromVoigt</ref>(C);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ScalarTypeOther&gt;</highlight></codeline>
<codeline lineno="128" refid="a01516_1a2ae5af2b8bd807cde5b7616da694dbe4" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="a01516_1a2ae5af2b8bd807cde5b7616da694dbe4" kindref="member">rebind</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>reboundMatImpl<sp/>=<sp/>matImpl_.template<sp/>rebind&lt;ScalarTypeOther&gt;();</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="a01516" kindref="compound">VanishingStress&lt;stressIndexPair, decltype(reboundMatImpl)&gt;</ref>(reboundMatImpl,<sp/>tol_);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="136" refid="a01516_1a8214147990b14bc0b0f799bf7f4ea524" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/><ref refid="a01516_1a8214147990b14bc0b0f799bf7f4ea524" kindref="member">underlying</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>matImpl_;<sp/>}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Derived&gt;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>initUnknownStrains(Eigen::MatrixBase&lt;Derived&gt;&amp;<sp/>E)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="a01516_1a2e9a713a4811fec3881bb7fde7d74107" kindref="member">fixedPairs</ref>.size();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="a01516_1abf9dc8c5818857de2da74382af6954d1" kindref="member">ScalarType</ref><sp/>initialVal<sp/>=<sp/>E(<ref refid="a01516_1a2e9a713a4811fec3881bb7fde7d74107" kindref="member">fixedPairs</ref>[i].row,<sp/><ref refid="a01516_1a2e9a713a4811fec3881bb7fde7d74107" kindref="member">fixedPairs</ref>[i].col);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>(<ref refid="a01516_1a53577fd96ff6cd07da7f8a35626d3608" kindref="member">strainTag</ref><sp/>==<sp/><ref refid="a00373_1ggacef1e451de1a99845c59d7391064fb8fa61fc106262d2e2049866894bb4f862a5" kindref="member">StrainTags::deformationGradient</ref><sp/>or<sp/><ref refid="a01516_1a53577fd96ff6cd07da7f8a35626d3608" kindref="member">strainTag</ref><sp/>==<sp/><ref refid="a00373_1ggacef1e451de1a99845c59d7391064fb8faea40a9960a7a89c4f366beeab85d07d2" kindref="member">StrainTags::rightCauchyGreenTensor</ref>)<sp/>{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Dune::FloatCmp::eq(initialVal,<sp/><ref refid="a01516_1abf9dc8c5818857de2da74382af6954d1" kindref="member">ScalarType</ref>(0.0))<sp/>and<sp/>(<ref refid="a01516_1a2e9a713a4811fec3881bb7fde7d74107" kindref="member">fixedPairs</ref>[i].row<sp/>==<sp/><ref refid="a01516_1a2e9a713a4811fec3881bb7fde7d74107" kindref="member">fixedPairs</ref>[i].col))</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>initialVal<sp/>=<sp/><ref refid="a01516_1abf9dc8c5818857de2da74382af6954d1" kindref="member">ScalarType</ref>(1.0);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="a01516_1a2e9a713a4811fec3881bb7fde7d74107" kindref="member">fixedPairs</ref>[i].row<sp/>!=<sp/><ref refid="a01516_1a2e9a713a4811fec3881bb7fde7d74107" kindref="member">fixedPairs</ref>[i].col)</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>initialVal<sp/>=<sp/><ref refid="a01516_1abf9dc8c5818857de2da74382af6954d1" kindref="member">ScalarType</ref>(0.0);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>E(<ref refid="a01516_1a2e9a713a4811fec3881bb7fde7d74107" kindref="member">fixedPairs</ref>[i].row,<sp/><ref refid="a01516_1a2e9a713a4811fec3881bb7fde7d74107" kindref="member">fixedPairs</ref>[i].col)<sp/>=<sp/>E(<ref refid="a01516_1a2e9a713a4811fec3881bb7fde7d74107" kindref="member">fixedPairs</ref>[i].col,<sp/><ref refid="a01516_1a2e9a713a4811fec3881bb7fde7d74107" kindref="member">fixedPairs</ref>[i].row)<sp/>=<sp/>initialVal;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Derived&gt;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>reduceStress(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::MatrixBase&lt;Derived&gt;&amp;<sp/>Eraw)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>E<sp/>=<sp/>Impl::maybeFromVoigt(Eraw);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>initUnknownStrains(E);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>std::array&lt;size_t,<sp/>fixedDiagonalVoigtIndicesSize&gt;<sp/>fixedDiagonalVoigtIndices;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>ri<sp/>=<sp/>0;<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>i<sp/>:<sp/><ref refid="a01516_1ae5a0c7ba92468388f585117257be5819" kindref="member">fixedVoigtIndices</ref>)<sp/>{</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>indexPair<sp/>=<sp/><ref refid="a00380_1gadc8e9e9f3838d0392a5fcf1e11374ee9" kindref="member">fromVoigt</ref>(i);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(indexPair[0]<sp/>==<sp/>indexPair[1])</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fixedDiagonalVoigtIndices[ri++]<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>f<sp/>=<sp/>[&amp;](</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;)<sp/>{</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>S<sp/>=<sp/>matImpl_.template<sp/>stresses&lt;Underlying::strainTag,<sp/>true&gt;(E);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>S(fixedDiagonalVoigtIndices).eval();</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>df<sp/>=<sp/>[&amp;](</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;)<sp/>{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>moduli<sp/>=<sp/>(matImpl_.template<sp/>tangentModuli&lt;Underlying::strainTag,<sp/>true&gt;(E)).eval();</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(moduli(fixedDiagonalVoigtIndices,<sp/>fixedDiagonalVoigtIndices)<sp/>/<sp/>Underlying::derivativeFactor).eval();</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>Er<sp/><sp/><sp/><sp/>=<sp/>E(fixedDiagonalVoigtIndices,<sp/>fixedDiagonalVoigtIndices).eval().template<sp/>cast&lt;ScalarType&gt;();</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>nonOp<sp/>=<sp/><ref refid="a00384_1abcf5978fa18a6e0aadc5e19c4a0edaa9" kindref="member">Ikarus::NonLinearOperator</ref>(<ref refid="a00384_1ab787b670f0d338c870988f417cf85f76" kindref="member">functions</ref>(f,<sp/>df),<sp/><ref refid="a00384_1ac00abda505aa8ccc73ce59afd165ce49" kindref="member">parameter</ref>(Er));</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>linearSolver<sp/><sp/><sp/>=<sp/>[](</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>r,<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>A)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(A.inverse()<sp/>*<sp/>r).eval();<sp/>};</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>updateFunction<sp/>=<sp/>[&amp;](</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/></highlight><highlight class="comment">/*<sp/>Ex33<sp/>*/</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>ecomps)<sp/>{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ri<sp/>=<sp/>0;<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>i<sp/>:<sp/>fixedDiagonalVoigtIndices)<sp/>{</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>indexPair<sp/>=<sp/><ref refid="a00380_1gadc8e9e9f3838d0392a5fcf1e11374ee9" kindref="member">fromVoigt</ref>(i);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E(indexPair[0],<sp/>indexPair[1])<sp/>+=<sp/>ecomps(ri++);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>minIter<sp/>=<sp/><ref refid="a01516_1a8722c04929bc243a10f74f6d58bd0816" kindref="member">isAutoDiff</ref><sp/>?<sp/>1<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>THE<sp/>CTAD<sp/>is<sp/>broken<sp/>for<sp/>designated<sp/>initializers<sp/>in<sp/>clang<sp/>16,<sp/>when<sp/>we<sp/>drop<sp/>support<sp/>this<sp/>can<sp/>be<sp/>simplified</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>NewtonRaphsonConfig&lt;</highlight><highlight class="keyword">decltype</highlight><highlight class="normal">(linearSolver),<sp/></highlight><highlight class="keyword">decltype</highlight><highlight class="normal">(updateFunction)&gt;<sp/>nrs{</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.parameters<sp/><sp/><sp/><sp/><sp/>=<sp/>{.tol<sp/>=<sp/>tol_,<sp/>.maxIter<sp/>=<sp/>100,<sp/>.minIter<sp/>=<sp/>minIter},</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.linearSolver<sp/><sp/><sp/>=<sp/>linearSolver,</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.updateFunction<sp/>=<sp/>updateFunction</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>nr<sp/>=<sp/><ref refid="a00384_1a66b45c139b5d57965ada53d92d8f93ce" kindref="member">createNonlinearSolver</ref>(std::move(nrs),<sp/>nonOp);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(nr-&gt;solve()))</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DUNE_THROW(Dune::MathError,<sp/></highlight><highlight class="stringliteral">&quot;The<sp/>stress<sp/>reduction<sp/>of<sp/>material<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="a01516_1a356a4d825f2d874842b054c33f552a55" kindref="member">nameImpl</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>was<sp/>unsuccessful\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;The<sp/>strains<sp/>are\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>E<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n<sp/>The<sp/>stresses<sp/>are\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>f(Er));</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::make_pair(nonOp,<sp/>E);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><ref refid="a01516_1aafb996e2bc6468edcb8cb5db451eb8d8" kindref="member">Underlying</ref><sp/>matImpl_;<sp/></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tol_{};<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="215"><highlight class="normal">};</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;Impl::MatrixIndexPair...<sp/>stressIndexPair,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MaterialImpl&gt;</highlight></codeline>
<codeline lineno="226" refid="a00384_1a317c0a50c0a7d482e2a20d8146e08df8" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="a00384_1a317c0a50c0a7d482e2a20d8146e08df8" kindref="member">makeVanishingStress</ref>(MaterialImpl<sp/>mat,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MaterialImpl::ScalarType<sp/>p_tol<sp/>=<sp/>1e-12)<sp/>{</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="a01516" kindref="compound">VanishingStress</ref>&lt;std::to_array({stressIndexPair...}),<sp/>MaterialImpl&gt;(mat,<sp/>p_tol);</highlight></codeline>
<codeline lineno="228"><highlight class="normal">}</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MaterialImpl&gt;</highlight></codeline>
<codeline lineno="238" refid="a00384_1ad43f50b1b1c3410c4a0c547be7ada4a0" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="a00384_1ad43f50b1b1c3410c4a0c547be7ada4a0" kindref="member">planeStress</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MaterialImpl&amp;<sp/>mat,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MaterialImpl::ScalarType<sp/>tol<sp/>=<sp/>1e-8)<sp/>{</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="a00384_1a317c0a50c0a7d482e2a20d8146e08df8" kindref="member">makeVanishingStress</ref>&lt;Impl::MatrixIndexPair{2,<sp/>1},<sp/>Impl::MatrixIndexPair{2,<sp/>0},<sp/>Impl::MatrixIndexPair{2,<sp/>2}&gt;(</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mat,<sp/>tol);</highlight></codeline>
<codeline lineno="241"><highlight class="normal">}</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MaterialImpl&gt;</highlight></codeline>
<codeline lineno="252" refid="a00384_1a9a1d1c81201b4c4c8cbee139df43b5d6" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="a00384_1a9a1d1c81201b4c4c8cbee139df43b5d6" kindref="member">shellMaterial</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MaterialImpl&amp;<sp/>mat,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MaterialImpl::ScalarType<sp/>tol<sp/>=<sp/>1e-8)<sp/>{</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="a00384_1a317c0a50c0a7d482e2a20d8146e08df8" kindref="member">makeVanishingStress</ref>&lt;Impl::MatrixIndexPair{2,<sp/>2}&gt;(mat,<sp/>tol);</highlight></codeline>
<codeline lineno="254"><highlight class="normal">}</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MaterialImpl&gt;</highlight></codeline>
<codeline lineno="265" refid="a00384_1a9b582bcc3c887a57428b25984bc6f7ac" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="a00384_1a9b582bcc3c887a57428b25984bc6f7ac" kindref="member">beamMaterial</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MaterialImpl&amp;<sp/>mat,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MaterialImpl::ScalarType<sp/>tol<sp/>=<sp/>1e-8)<sp/>{</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="a00384_1a317c0a50c0a7d482e2a20d8146e08df8" kindref="member">makeVanishingStress</ref>&lt;Impl::MatrixIndexPair{1,<sp/>1},<sp/>Impl::MatrixIndexPair{2,<sp/>2}&gt;(mat,<sp/>tol);</highlight></codeline>
<codeline lineno="267"><highlight class="normal">}</highlight></codeline>
<codeline lineno="268"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>Ikarus</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/vanishingstress.hh"/>
  </compounddef>
</doxygen>
