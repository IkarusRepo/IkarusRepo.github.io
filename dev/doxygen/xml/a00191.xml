<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="a00191" kind="file" language="C++">
    <compoundname>observer.hh</compoundname>
    <includes local="no">map</includes>
    <includes local="no">memory</includes>
    <includes local="no">Eigen/Core</includes>
    <includes refid="a00011" local="no">ikarus/utils/makeenum.hh</includes>
    <includedby refid="a00176" local="yes">controllogger.hh</includedby>
    <includedby refid="a00179" local="yes">controlvtkwriter.hh</includedby>
    <includedby refid="a00185" local="no">genericobserver.hh</includedby>
    <includedby refid="a00317" local="no">loadcontrol.hh</includedby>
    <includedby refid="a00131" local="no">newtonraphson.hh</includedby>
    <includedby refid="a00137" local="no">newtonraphsonwithscalarsubsidiaryfunction.hh</includedby>
    <includedby refid="a00188" local="yes">nonlinearsolverlogger.hh</includedby>
    <includedby refid="a00329" local="no">pathfollowing.hh</includedby>
    <includedby refid="a00320" local="no">pathfollowing.inl</includedby>
    <includedby refid="a00128" local="no">trustregion.hh</includedby>
    <incdepgraph>
      <node id="5">
        <label>ikarus/utils/makeenum.hh</label>
        <link refid="a00011"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>observer.hh</label>
        <link refid="a00191"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>Eigen/Core</label>
      </node>
      <node id="6">
        <label>dune/common/exceptions.hh</label>
      </node>
      <node id="2">
        <label>map</label>
      </node>
      <node id="3">
        <label>memory</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="5">
        <label>loadcontrol.hh</label>
        <link refid="a00317"/>
      </node>
      <node id="16">
        <label>pathfollowing.hh</label>
        <link refid="a00329"/>
      </node>
      <node id="17">
        <label>pathfollowing.inl</label>
        <link refid="a00320"/>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>linearelastic.hh</label>
        <link refid="a00224"/>
      </node>
      <node id="8">
        <label>materials.hh</label>
        <link refid="a03059"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>vanishingstrain.hh</label>
        <link refid="a00242"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>vanishingstress.hh</label>
        <link refid="a00239"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>resultevaluators.hh</label>
        <link refid="a00353"/>
      </node>
      <node id="10">
        <label>material.hh</label>
        <link refid="a00158"/>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>newtonraphson.hh</label>
        <link refid="a00131"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>newtonraphsonwithscalarsubsidiaryfunction.hh</label>
        <link refid="a00137"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>trustregion.hh</label>
        <link refid="a00128"/>
      </node>
      <node id="2">
        <label>controllogger.hh</label>
        <link refid="a00176"/>
      </node>
      <node id="3">
        <label>controlvtkwriter.hh</label>
        <link refid="a00179"/>
      </node>
      <node id="4">
        <label>genericobserver.hh</label>
        <link refid="a00185"/>
      </node>
      <node id="18">
        <label>nonlinearsolverlogger.hh</label>
        <link refid="a00188"/>
      </node>
      <node id="1">
        <label>observer.hh</label>
        <link refid="a00191"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>_ikarus.cc</label>
        <link refid="a00365"/>
      </node>
      <node id="11">
        <label>materials.hh</label>
        <link refid="a03062"/>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="a02002" prot="public">Ikarus::IObserver</innerclass>
    <innerclass refid="a02006" prot="public">Ikarus::IObservable</innerclass>
    <innernamespace refid="a00411">Ikarus</innernamespace>
    <briefdescription>
<para>Implementation of the observer design pattern. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>SPDX-FileCopyrightText:<sp/>2021-2025<sp/>The<sp/>Ikarus<sp/>Developers<sp/>mueller@ibb.uni-stuttgart.de</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>SPDX-License-Identifier:<sp/>LGPL-3.0-or-later</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;Eigen/Core&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="a00011" kindref="compound">ikarus/utils/makeenum.hh</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="a00411" kindref="compound">Ikarus</ref><sp/>{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MT&gt;</highlight></codeline>
<codeline lineno="25" refid="a02002" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="a02002" kindref="compound">IObserver</ref></highlight></codeline>
<codeline lineno="26"><highlight class="normal">{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="28" refid="a02002_1adc6a89c0396fc98e0c095cd8df17b075" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="a02002_1adc6a89c0396fc98e0c095cd8df17b075" kindref="member">MessageType</ref><sp/>=<sp/>MT;</highlight></codeline>
<codeline lineno="30" refid="a02002_1a39df4c52c73f721bb2ef1c90fe76d74a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="a02002_1a39df4c52c73f721bb2ef1c90fe76d74a" kindref="member">~IObserver</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="36" refid="a02002_1aafa35019b0bd7577d9e5b2c209c785bd" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="a02002_1aafa35019b0bd7577d9e5b2c209c785bd" kindref="member">update</ref>(<ref refid="a02002_1adc6a89c0396fc98e0c095cd8df17b075" kindref="member">MessageType</ref><sp/>message)<sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>checkMessageType(message);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="a02002_1ac6dc170df122bd224f2a440cedf33934" kindref="member">updateImpl</ref>(message);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="46" refid="a02002_1a3a477ef465bf14acd9e21673e2bfc595" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="a02002_1a3a477ef465bf14acd9e21673e2bfc595" kindref="member">update</ref>(<ref refid="a02002_1adc6a89c0396fc98e0c095cd8df17b075" kindref="member">MessageType</ref><sp/>message,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>val)<sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>checkMessageType(message);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="a02002_1ac6dc170df122bd224f2a440cedf33934" kindref="member">updateImpl</ref>(message,<sp/>val);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="56" refid="a02002_1a9ec023872625942d0b64244709966464" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="a02002_1a9ec023872625942d0b64244709966464" kindref="member">update</ref>(<ref refid="a02002_1adc6a89c0396fc98e0c095cd8df17b075" kindref="member">MessageType</ref><sp/>message,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>val)<sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>checkMessageType(message);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="a02002_1ac6dc170df122bd224f2a440cedf33934" kindref="member">updateImpl</ref>(message,<sp/>val);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="66" refid="a02002_1aaa06f0740f435636da206c35951f8c81" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="a02002_1aaa06f0740f435636da206c35951f8c81" kindref="member">update</ref>(<ref refid="a02002_1adc6a89c0396fc98e0c095cd8df17b075" kindref="member">MessageType</ref><sp/>message,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>val)<sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>checkMessageType(message);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="a02002_1ac6dc170df122bd224f2a440cedf33934" kindref="member">updateImpl</ref>(message,<sp/>val);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="77" refid="a02002_1a92045cc1701c89ac62395a8e77ff3eba" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="a02002_1a92045cc1701c89ac62395a8e77ff3eba" kindref="member">update</ref>(<ref refid="a02002_1adc6a89c0396fc98e0c095cd8df17b075" kindref="member">MessageType</ref><sp/>message,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>val1,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>val2)<sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>checkMessageType(message);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="a02002_1ac6dc170df122bd224f2a440cedf33934" kindref="member">updateImpl</ref>(message,<sp/>val1,<sp/>val2);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="88" refid="a02002_1a04b8667b08713503e82ede950a337950" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="a02002_1a04b8667b08713503e82ede950a337950" kindref="member">update</ref>(<ref refid="a02002_1adc6a89c0396fc98e0c095cd8df17b075" kindref="member">MessageType</ref><sp/>message,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>val1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>val2)<sp/>{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>checkMessageType(message);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="a02002_1ac6dc170df122bd224f2a440cedf33934" kindref="member">updateImpl</ref>(message,<sp/>val1,<sp/>val2);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="98" refid="a02002_1a1d1ef2313a9aecf4e9d475cce837476e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="a02002_1a1d1ef2313a9aecf4e9d475cce837476e" kindref="member">update</ref>(<ref refid="a02002_1adc6a89c0396fc98e0c095cd8df17b075" kindref="member">MessageType</ref><sp/>message,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::VectorXd&amp;<sp/>vec)<sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>checkMessageType(message);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="a02002_1ac6dc170df122bd224f2a440cedf33934" kindref="member">updateImpl</ref>(message,<sp/>vec);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="104" refid="a02002_1ac6dc170df122bd224f2a440cedf33934" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="a02002_1ac6dc170df122bd224f2a440cedf33934" kindref="member">updateImpl</ref>([[maybe_unused]]<sp/><ref refid="a02002_1adc6a89c0396fc98e0c095cd8df17b075" kindref="member">MessageType</ref><sp/>message)<sp/>{};</highlight></codeline>
<codeline lineno="105" refid="a02002_1a80d3fd9872a76a02452f42511f780253" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="a02002_1a80d3fd9872a76a02452f42511f780253" kindref="member">updateImpl</ref>([[maybe_unused]]<sp/><ref refid="a02002_1adc6a89c0396fc98e0c095cd8df17b075" kindref="member">MessageType</ref><sp/>message,<sp/>[[maybe_unused]]<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>val)<sp/>{};</highlight></codeline>
<codeline lineno="106" refid="a02002_1a873494234cf33b9cc7179d90ff6f095e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="a02002_1a873494234cf33b9cc7179d90ff6f095e" kindref="member">updateImpl</ref>([[maybe_unused]]<sp/><ref refid="a02002_1adc6a89c0396fc98e0c095cd8df17b075" kindref="member">MessageType</ref><sp/>message,<sp/>[[maybe_unused]]<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>val)<sp/>{};</highlight></codeline>
<codeline lineno="107" refid="a02002_1a54cfb0283f65810089183deebc9b4858" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="a02002_1a54cfb0283f65810089183deebc9b4858" kindref="member">updateImpl</ref>([[maybe_unused]]<sp/><ref refid="a02002_1adc6a89c0396fc98e0c095cd8df17b075" kindref="member">MessageType</ref><sp/>message,<sp/>[[maybe_unused]]<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>val)<sp/>{};</highlight></codeline>
<codeline lineno="108" refid="a02002_1a75b2d9ce4234e841256066b2cd051bc9" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="a02002_1a75b2d9ce4234e841256066b2cd051bc9" kindref="member">updateImpl</ref>([[maybe_unused]]<sp/><ref refid="a02002_1adc6a89c0396fc98e0c095cd8df17b075" kindref="member">MessageType</ref><sp/>message,<sp/>[[maybe_unused]]<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>val1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>val2)<sp/>{};</highlight></codeline>
<codeline lineno="109" refid="a02002_1ae6d9838e1ced7fcf14b20457144a47b2" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="a02002_1ae6d9838e1ced7fcf14b20457144a47b2" kindref="member">updateImpl</ref>([[maybe_unused]]<sp/><ref refid="a02002_1adc6a89c0396fc98e0c095cd8df17b075" kindref="member">MessageType</ref><sp/>message,<sp/>[[maybe_unused]]<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>val1,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>val2)<sp/>{};</highlight></codeline>
<codeline lineno="110" refid="a02002_1a5d9bfa8a6046d612106e4a2cb8e8d735" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="a02002_1a5d9bfa8a6046d612106e4a2cb8e8d735" kindref="member">updateImpl</ref>([[maybe_unused]]<sp/><ref refid="a02002_1adc6a89c0396fc98e0c095cd8df17b075" kindref="member">MessageType</ref><sp/>message,<sp/>[[maybe_unused]]<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::VectorXd&amp;<sp/>vec)<sp/>{}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>checkMessageType(<ref refid="a02002_1adc6a89c0396fc98e0c095cd8df17b075" kindref="member">MessageType</ref><sp/>message)<sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(MessageType::END<sp/>==<sp/>message)</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DUNE_THROW(Dune::InvalidStateException,<sp/></highlight><highlight class="stringliteral">&quot;The<sp/>END<sp/>enum<sp/>type<sp/>should<sp/>not<sp/>be<sp/>used&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(MessageType::BEGIN<sp/>==<sp/>message)</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DUNE_THROW(Dune::InvalidStateException,<sp/></highlight><highlight class="stringliteral">&quot;The<sp/>BEGIN<sp/>enum<sp/>type<sp/>should<sp/>not<sp/>be<sp/>used&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="119"><highlight class="normal">};</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MessageType&gt;</highlight></codeline>
<codeline lineno="128" refid="a02006" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="a02006" kindref="compound">IObservable</ref></highlight></codeline>
<codeline lineno="129"><highlight class="normal">{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="131" refid="a02006_1ac8058d5b1ebb462a10712ba598154e23" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="a02006_1ac8058d5b1ebb462a10712ba598154e23" kindref="member">IObservable</ref>()<sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(MessageType<sp/>msg<sp/>=<sp/>MessageType::BEGIN;<sp/>msg<sp/>!=<sp/>MessageType::END;<sp/><ref refid="a00406_1ga5db6e8f04892e85e6b17e276cdbd0e54" kindref="member">Ikarus::increment</ref>(msg))</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>messages_.push_back(msg);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="135" refid="a02006_1ad1fe15b31cccec8e44c695af550938ed" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="a02006_1ad1fe15b31cccec8e44c695af550938ed" kindref="member">~IObservable</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="141" refid="a02006_1ad67c98f02c195b788f78a229e1898006" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="a02006_1ad67c98f02c195b788f78a229e1898006" kindref="member">subscribe</ref>(MessageType<sp/>message,<sp/>std::shared_ptr&lt;<ref refid="a02002" kindref="compound">IObserver&lt;MessageType&gt;</ref>&gt;<sp/>observer);</highlight></codeline>
<codeline lineno="146" refid="a02006_1a13bd8d73b485186680f640786e2682e5" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="a02006_1a13bd8d73b485186680f640786e2682e5" kindref="member">subscribeAll</ref>(std::shared_ptr&lt;<ref refid="a02002" kindref="compound">IObserver&lt;MessageType&gt;</ref>&gt;<sp/>observer);</highlight></codeline>
<codeline lineno="151" refid="a02006_1a026462a1a050728e37bc24e33d2edd9c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="a02006_1a026462a1a050728e37bc24e33d2edd9c" kindref="member">subscribeAll</ref>(std::initializer_list&lt;std::shared_ptr&lt;<ref refid="a02002" kindref="compound">IObserver&lt;MessageType&gt;</ref>&gt;&gt;<sp/>observers);</highlight></codeline>
<codeline lineno="157" refid="a02006_1a3eb718b8fa1ecc373371a6751a316b24" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="a02006_1a3eb718b8fa1ecc373371a6751a316b24" kindref="member">unSubscribe</ref>(MessageType<sp/>message,<sp/>std::shared_ptr&lt;<ref refid="a02002" kindref="compound">IObserver&lt;MessageType&gt;</ref>&gt;<sp/>observer);</highlight></codeline>
<codeline lineno="162" refid="a02006_1a378a520833df0d6e27dbb35b621c838d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="a02006_1a378a520833df0d6e27dbb35b621c838d" kindref="member">unSubscribeAll</ref>(std::shared_ptr&lt;<ref refid="a02002" kindref="compound">IObserver&lt;MessageType&gt;</ref>&gt;<sp/>observer);</highlight></codeline>
<codeline lineno="167" refid="a02006_1a4bce3750aa7d52aff9baf122a54e16b5" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="a02006_1a4bce3750aa7d52aff9baf122a54e16b5" kindref="member">notify</ref>(MessageType<sp/>message);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;std::</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">ing_po</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ScalarType&gt;</highlight></codeline>
<codeline lineno="176" refid="a02006_1ac035ba934c33e090c4a45128ac13f190" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="a02006_1ac035ba934c33e090c4a45128ac13f190" kindref="member">notify</ref>(MessageType<sp/>message,<sp/>ScalarType<sp/>val);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="183" refid="a02006_1a47ac8ae7cc4e9304cfb220f1d93ce1fc" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="a02006_1a47ac8ae7cc4e9304cfb220f1d93ce1fc" kindref="member">notify</ref>(MessageType<sp/>message,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>val);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="190" refid="a02006_1a2f93322aa7327069dd4469983933bd16" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="a02006_1a2f93322aa7327069dd4469983933bd16" kindref="member">notify</ref>(MessageType<sp/>message,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>val);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="198" refid="a02006_1ae0c6cec757e540f22b65fce1f782e380" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="a02006_1ae0c6cec757e540f22b65fce1f782e380" kindref="member">notify</ref>(MessageType<sp/>message,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>val1,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>val2);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="206" refid="a02006_1a72e3156874ce81a1c7548b9f74db522c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="a02006_1a72e3156874ce81a1c7548b9f74db522c" kindref="member">notify</ref>(MessageType<sp/>message,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>val1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>val2);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;std::</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">ing_po</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ScalarType&gt;</highlight></codeline>
<codeline lineno="215" refid="a02006_1ac72b261cd2af7f59e98f1504814bc785" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="a02006_1ac72b261cd2af7f59e98f1504814bc785" kindref="member">notify</ref>(MessageType<sp/>message,<sp/>Eigen::VectorX&lt;ScalarType&gt;<sp/>vec);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">ObserverVector<sp/>=<sp/>std::vector&lt;std::shared_ptr&lt;IObserver&lt;MessageType&gt;&gt;&gt;;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">ObserverMap<sp/><sp/><sp/><sp/>=<sp/>std::map&lt;MessageType,<sp/>ObserverVector&gt;;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/>ObserverMap<sp/>observers_;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/>std::vector&lt;MessageType&gt;<sp/>messages_;</highlight></codeline>
<codeline lineno="222"><highlight class="normal">};</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MT&gt;</highlight></codeline>
<codeline lineno="225" refid="a02006_1ad67c98f02c195b788f78a229e1898006" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="a02006_1ad67c98f02c195b788f78a229e1898006" kindref="member">IObservable&lt;MT&gt;::subscribe</ref>(MT<sp/>message,<sp/>std::shared_ptr&lt;<ref refid="a02002" kindref="compound">IObserver&lt;MT&gt;</ref>&gt;<sp/>observer)<sp/>{</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/>observers_[message];</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;&amp;<sp/>vectorOfObserversOfASpecificMessage<sp/>=<sp/>observers_[message];</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/>vectorOfObserversOfASpecificMessage.push_back(observer);</highlight></codeline>
<codeline lineno="229"><highlight class="normal">}</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MT&gt;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="a02006_1a13bd8d73b485186680f640786e2682e5" kindref="member">IObservable&lt;MT&gt;::subscribeAll</ref>(std::shared_ptr&lt;<ref refid="a02002" kindref="compound">IObserver&lt;MT&gt;</ref>&gt;<sp/>observer)<sp/>{</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>msg<sp/>:<sp/>messages_)</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>subscribe(msg,<sp/>observer);</highlight></codeline>
<codeline lineno="235"><highlight class="normal">}</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MT&gt;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="a02006_1a13bd8d73b485186680f640786e2682e5" kindref="member">IObservable&lt;MT&gt;::subscribeAll</ref>(std::initializer_list&lt;std::shared_ptr&lt;IObserver&lt;MT&gt;&gt;&gt;<sp/>observers)<sp/>{</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>observer<sp/>:<sp/>observers)</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>msg<sp/>:<sp/>messages_)</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>subscribe(msg,<sp/>observer);</highlight></codeline>
<codeline lineno="242"><highlight class="normal">}</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MT&gt;</highlight></codeline>
<codeline lineno="245" refid="a02006_1a3eb718b8fa1ecc373371a6751a316b24" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="a02006_1a3eb718b8fa1ecc373371a6751a316b24" kindref="member">IObservable&lt;MT&gt;::unSubscribe</ref>(MT<sp/>message,<sp/>std::shared_ptr&lt;<ref refid="a02002" kindref="compound">IObserver&lt;MT&gt;</ref>&gt;<sp/>observer)<sp/>{</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>vectorOfObserversOfASpecificMessage<sp/>=<sp/>observers_[message];</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/>std::ranges::remove_if(vectorOfObserversOfASpecificMessage,<sp/>[&amp;observer](</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;&amp;<sp/>obs)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>obs<sp/>==<sp/>observer;<sp/>});</highlight></codeline>
<codeline lineno="248"><highlight class="normal">}</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MT&gt;</highlight></codeline>
<codeline lineno="251" refid="a02006_1a378a520833df0d6e27dbb35b621c838d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="a02006_1a378a520833df0d6e27dbb35b621c838d" kindref="member">IObservable&lt;MT&gt;::unSubscribeAll</ref>(std::shared_ptr&lt;<ref refid="a02002" kindref="compound">IObserver&lt;MT&gt;</ref>&gt;<sp/>observer)<sp/>{</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>msg<sp/>:<sp/>messages_)</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/>unSubscribe(msg,<sp/>observer);</highlight></codeline>
<codeline lineno="254"><highlight class="normal">}</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MT&gt;</highlight></codeline>
<codeline lineno="257" refid="a02006_1a19047649c66f704c2ba2f1276c1a0e8b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="a02006_1a4bce3750aa7d52aff9baf122a54e16b5" kindref="member">IObservable&lt;MT&gt;::notify</ref>(MT<sp/>message)<sp/>{</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>vectorOfObserversOfASpecificMessage<sp/>=<sp/>observers_[message];</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;&amp;<sp/>obs<sp/>:<sp/>vectorOfObserversOfASpecificMessage)</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/>obs-&gt;update(message);</highlight></codeline>
<codeline lineno="261"><highlight class="normal">}</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MT&gt;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;std::</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">ing_po</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ScalarType&gt;</highlight></codeline>
<codeline lineno="265" refid="a02006_1a03d4668b7111180f0427e8382359f3bf" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="a02006_1a4bce3750aa7d52aff9baf122a54e16b5" kindref="member">IObservable&lt;MT&gt;::notify</ref>(MT<sp/>message,<sp/>ScalarType<sp/>val)<sp/>{</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>vectorOfObserversOfASpecificMessage<sp/>=<sp/>observers_[message];</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;&amp;<sp/>obs<sp/>:<sp/>vectorOfObserversOfASpecificMessage)</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/>obs-&gt;update(message,<sp/>val);</highlight></codeline>
<codeline lineno="269"><highlight class="normal">}</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MT&gt;</highlight></codeline>
<codeline lineno="272" refid="a02006_1ad758bd6f15e8228a3439f52ee2ad6aaa" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="a02006_1a4bce3750aa7d52aff9baf122a54e16b5" kindref="member">IObservable&lt;MT&gt;::notify</ref>(MT<sp/>message,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>val)<sp/>{</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>vectorOfObserversOfASpecificMessage<sp/>=<sp/>observers_[message];</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;&amp;<sp/>obs<sp/>:<sp/>vectorOfObserversOfASpecificMessage)</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/>obs-&gt;update(message,<sp/>val);</highlight></codeline>
<codeline lineno="276"><highlight class="normal">}</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MT&gt;</highlight></codeline>
<codeline lineno="279" refid="a02006_1acf19e220bc71c046619dd21b3f50e8bb" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="a02006_1a4bce3750aa7d52aff9baf122a54e16b5" kindref="member">IObservable&lt;MT&gt;::notify</ref>(MT<sp/>message,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>val)<sp/>{</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>vectorOfObserversOfASpecificMessage<sp/>=<sp/>observers_[message];</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;&amp;<sp/>obs<sp/>:<sp/>vectorOfObserversOfASpecificMessage)</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/>obs-&gt;update(message,<sp/>val);</highlight></codeline>
<codeline lineno="283"><highlight class="normal">}</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MT&gt;</highlight></codeline>
<codeline lineno="286" refid="a02006_1aae4ef907815822352e07fe25cefa8980" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="a02006_1a4bce3750aa7d52aff9baf122a54e16b5" kindref="member">IObservable&lt;MT&gt;::notify</ref>(MT<sp/>message,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>val1,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>val2)<sp/>{</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>vectorOfObserversOfASpecificMessage<sp/>=<sp/>observers_[message];</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;&amp;<sp/>obs<sp/>:<sp/>vectorOfObserversOfASpecificMessage)</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/>obs-&gt;update(message,<sp/>val1,<sp/>val2);</highlight></codeline>
<codeline lineno="290"><highlight class="normal">}</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MT&gt;</highlight></codeline>
<codeline lineno="293" refid="a02006_1ae12cb2deb2aa20f0cbc3d78b9a562eb3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="a02006_1a4bce3750aa7d52aff9baf122a54e16b5" kindref="member">IObservable&lt;MT&gt;::notify</ref>(MT<sp/>message,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>val1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>val2)<sp/>{</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>vectorOfObserversOfASpecificMessage<sp/>=<sp/>observers_[message];</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;&amp;<sp/>obs<sp/>:<sp/>vectorOfObserversOfASpecificMessage)</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/>obs-&gt;update(message,<sp/>val1,<sp/>val2);</highlight></codeline>
<codeline lineno="297"><highlight class="normal">}</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MT&gt;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;std::</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">ing_po</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ScalarType&gt;</highlight></codeline>
<codeline lineno="301" refid="a02006_1aa5a60c5b81bb92de527c49ea8fce147d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="a02006_1a4bce3750aa7d52aff9baf122a54e16b5" kindref="member">IObservable&lt;MT&gt;::notify</ref>(MT<sp/>message,<sp/>Eigen::VectorX&lt;ScalarType&gt;<sp/>vec)<sp/>{</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>vectorOfObserversOfASpecificMessage<sp/>=<sp/>observers_[message];</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;&amp;<sp/>obs<sp/>:<sp/>vectorOfObserversOfASpecificMessage)</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/>obs-&gt;update(message,<sp/>vec);</highlight></codeline>
<codeline lineno="305"><highlight class="normal">}</highlight></codeline>
<codeline lineno="306"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>Ikarus</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh"/>
  </compounddef>
</doxygen>
