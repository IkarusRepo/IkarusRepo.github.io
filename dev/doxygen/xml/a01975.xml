<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="a01975" kind="concept">
    <compoundname>Ikarus::Concepts::ScalarFlatAssembler</compoundname>
    <includes refid="a00047" local="no">ikarus/utils/concepts.hh</includes>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
    </templateparamlist>
    <initializer>template&lt;typename T&gt;
concept <ref refid="a01975" kindref="compound">Ikarus::Concepts::ScalarFlatAssembler</ref> = 
      Concepts::FlatAssembler&lt;T&gt; and requires(T t, const typename T::FERequirement&amp; req,
                                              typename T::AffordanceCollectionType affordance, DBCOption dbcOption) {
        { t.scalar(req, affordance.scalarAffordance()) } -&gt; std::convertible_to&lt;const double&amp;&gt;;
        { t.scalar() } -&gt; std::convertible_to&lt;const double&amp;&gt;;
      }    </initializer>
    <briefdescription>
<para>Concept representing the requirements for a ScalarFlatAssembler.</para>
<para>A type T satisfies ScalarFlatAssembler if it is a FlatAssembler and if it provides the necessary scalar() member functions. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/__w/ikarus/ikarus/repo/ikarus/utils/concepts.hh" line="531" column="3"/>
  </compounddef>
</doxygen>
