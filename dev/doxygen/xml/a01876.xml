<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="a01876" kind="class" language="C++" prot="public">
    <compoundname>Ikarus::IObserver</compoundname>
    <includes refid="a00122" local="no">ikarus/utils/observer/observer.hh</includes>
    <templateparamlist>
      <param>
        <type>typename MT</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="a01876_1adc6a89c0396fc98e0c095cd8df17b075" prot="public" static="no">
        <type>MT</type>
        <definition>using Ikarus::IObserver&lt; MT &gt;::MessageType =  MT</definition>
        <argsstring></argsstring>
        <name>MessageType</name>
        <qualifiedname>Ikarus::IObserver::MessageType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" line="28" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" bodystart="28" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="a01876_1a39df4c52c73f721bb2ef1c90fe76d74a" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual Ikarus::IObserver&lt; MT &gt;::~IObserver</definition>
        <argsstring>()=default</argsstring>
        <name>~IObserver</name>
        <qualifiedname>Ikarus::IObserver::~IObserver</qualifiedname>
        <briefdescription>
<para>Virtual destructor for the observer interface. </para>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem></listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" line="30" column="11"/>
      </memberdef>
      <memberdef kind="function" id="a01876_1aafa35019b0bd7577d9e5b2c209c785bd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ikarus::IObserver&lt; MT &gt;::update</definition>
        <argsstring>(MessageType message)</argsstring>
        <name>update</name>
        <qualifiedname>Ikarus::IObserver::update</qualifiedname>
        <param>
          <type><ref refid="a01876_1adc6a89c0396fc98e0c095cd8df17b075" kindref="member">MessageType</ref></type>
          <declname>message</declname>
        </param>
        <briefdescription>
<para>Update method for receiving notifications with a message. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>The message to be received. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" line="36" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" bodystart="36" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="a01876_1a3a477ef465bf14acd9e21673e2bfc595" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ikarus::IObserver&lt; MT &gt;::update</definition>
        <argsstring>(MessageType message, double val)</argsstring>
        <name>update</name>
        <qualifiedname>Ikarus::IObserver::update</qualifiedname>
        <param>
          <type><ref refid="a01876_1adc6a89c0396fc98e0c095cd8df17b075" kindref="member">MessageType</ref></type>
          <declname>message</declname>
        </param>
        <param>
          <type>double</type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>Update method for receiving notifications with a message and a double value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>The message to be received. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>The double value associated with the message. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" line="46" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" bodystart="46" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="a01876_1a9ec023872625942d0b64244709966464" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ikarus::IObserver&lt; MT &gt;::update</definition>
        <argsstring>(MessageType message, int val)</argsstring>
        <name>update</name>
        <qualifiedname>Ikarus::IObserver::update</qualifiedname>
        <param>
          <type><ref refid="a01876_1adc6a89c0396fc98e0c095cd8df17b075" kindref="member">MessageType</ref></type>
          <declname>message</declname>
        </param>
        <param>
          <type>int</type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>Update method for receiving notifications with a message and an integer value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>The message to be received. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>The integer value associated with the message. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" line="56" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" bodystart="56" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="a01876_1aaa06f0740f435636da206c35951f8c81" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ikarus::IObserver&lt; MT &gt;::update</definition>
        <argsstring>(MessageType message, const std::string &amp;val)</argsstring>
        <name>update</name>
        <qualifiedname>Ikarus::IObserver::update</qualifiedname>
        <param>
          <type><ref refid="a01876_1adc6a89c0396fc98e0c095cd8df17b075" kindref="member">MessageType</ref></type>
          <declname>message</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>Update method for receiving notifications with a message and a string value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>The message to be received. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>The string value associated with the message. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" line="66" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" bodystart="66" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="a01876_1a92045cc1701c89ac62395a8e77ff3eba" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ikarus::IObserver&lt; MT &gt;::update</definition>
        <argsstring>(MessageType message, int val1, double val2)</argsstring>
        <name>update</name>
        <qualifiedname>Ikarus::IObserver::update</qualifiedname>
        <param>
          <type><ref refid="a01876_1adc6a89c0396fc98e0c095cd8df17b075" kindref="member">MessageType</ref></type>
          <declname>message</declname>
        </param>
        <param>
          <type>int</type>
          <declname>val1</declname>
        </param>
        <param>
          <type>double</type>
          <declname>val2</declname>
        </param>
        <briefdescription>
<para>Update method for receiving notifications with a message and two values (integer and double). </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>The message to be received. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val1</parametername>
</parameternamelist>
<parameterdescription>
<para>The integer value associated with the message. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val2</parametername>
</parameternamelist>
<parameterdescription>
<para>The double value associated with the message. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" line="77" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" bodystart="77" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="a01876_1a04b8667b08713503e82ede950a337950" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ikarus::IObserver&lt; MT &gt;::update</definition>
        <argsstring>(MessageType message, int val1, const std::string &amp;val2)</argsstring>
        <name>update</name>
        <qualifiedname>Ikarus::IObserver::update</qualifiedname>
        <param>
          <type><ref refid="a01876_1adc6a89c0396fc98e0c095cd8df17b075" kindref="member">MessageType</ref></type>
          <declname>message</declname>
        </param>
        <param>
          <type>int</type>
          <declname>val1</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>val2</declname>
        </param>
        <briefdescription>
<para>Update method for receiving notifications with a message, an integer value, and a string value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>The message to be received. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val1</parametername>
</parameternamelist>
<parameterdescription>
<para>The integer value associated with the message. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val2</parametername>
</parameternamelist>
<parameterdescription>
<para>The string value associated with the message. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" line="88" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" bodystart="88" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="a01876_1a1d1ef2313a9aecf4e9d475cce837476e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ikarus::IObserver&lt; MT &gt;::update</definition>
        <argsstring>(MessageType message, const Eigen::VectorXd &amp;vec)</argsstring>
        <name>update</name>
        <qualifiedname>Ikarus::IObserver::update</qualifiedname>
        <param>
          <type><ref refid="a01876_1adc6a89c0396fc98e0c095cd8df17b075" kindref="member">MessageType</ref></type>
          <declname>message</declname>
        </param>
        <param>
          <type>const Eigen::VectorXd &amp;</type>
          <declname>vec</declname>
        </param>
        <briefdescription>
<para>Update method for receiving notifications with a message and an Eigen::VectorXd. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>The message to be received. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vec</parametername>
</parameternamelist>
<parameterdescription>
<para>The Eigen::VectorXd associated with the message. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" line="98" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" bodystart="98" bodyend="101"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="a01876_1ac6dc170df122bd224f2a440cedf33934" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void Ikarus::IObserver&lt; MT &gt;::updateImpl</definition>
        <argsstring>(MessageType message)</argsstring>
        <name>updateImpl</name>
        <qualifiedname>Ikarus::IObserver::updateImpl</qualifiedname>
        <reimplementedby refid="a01860_1a10ad975b5a99ce217fd1d122963f46e8">updateImpl</reimplementedby>
        <reimplementedby refid="a01864_1a72b675b3fb4b0b2989b315e2a0337e44">updateImpl</reimplementedby>
        <reimplementedby refid="a01868_1a3f42fa4e0a798aff5c0d29254cb06e6e">updateImpl</reimplementedby>
        <reimplementedby refid="a01872_1a131da094b77cab07c39b4017d5419dac">updateImpl</reimplementedby>
        <param>
          <type><ref refid="a01876_1adc6a89c0396fc98e0c095cd8df17b075" kindref="member">MessageType</ref></type>
          <declname>message</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" line="104" column="16" bodyfile="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" bodystart="104" bodyend="104"/>
        <referencedby refid="a01876_1aafa35019b0bd7577d9e5b2c209c785bd" compoundref="a00122" startline="36" endline="39">Ikarus::IObserver&lt; MT &gt;::update</referencedby>
      </memberdef>
      <memberdef kind="function" id="a01876_1a80d3fd9872a76a02452f42511f780253" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void Ikarus::IObserver&lt; MT &gt;::updateImpl</definition>
        <argsstring>(MessageType message, double val)</argsstring>
        <name>updateImpl</name>
        <qualifiedname>Ikarus::IObserver::updateImpl</qualifiedname>
        <reimplementedby refid="a01872_1a17558ed4ad25de4e80b2bccdbf670e0b">updateImpl</reimplementedby>
        <param>
          <type><ref refid="a01876_1adc6a89c0396fc98e0c095cd8df17b075" kindref="member">MessageType</ref></type>
          <declname>message</declname>
        </param>
        <param>
          <type>double</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" line="105" column="16" bodyfile="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" bodystart="105" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="a01876_1a873494234cf33b9cc7179d90ff6f095e" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void Ikarus::IObserver&lt; MT &gt;::updateImpl</definition>
        <argsstring>(MessageType message, int val)</argsstring>
        <name>updateImpl</name>
        <qualifiedname>Ikarus::IObserver::updateImpl</qualifiedname>
        <reimplementedby refid="a01872_1a2a30782a175f8fc1dfb583531718cabf">updateImpl</reimplementedby>
        <param>
          <type><ref refid="a01876_1adc6a89c0396fc98e0c095cd8df17b075" kindref="member">MessageType</ref></type>
          <declname>message</declname>
        </param>
        <param>
          <type>int</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" line="106" column="16" bodyfile="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" bodystart="106" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="a01876_1a54cfb0283f65810089183deebc9b4858" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void Ikarus::IObserver&lt; MT &gt;::updateImpl</definition>
        <argsstring>(MessageType message, const std::string &amp;val)</argsstring>
        <name>updateImpl</name>
        <qualifiedname>Ikarus::IObserver::updateImpl</qualifiedname>
        <reimplementedby refid="a01860_1a9c8c660297d060779e05303c63c1b4be">updateImpl</reimplementedby>
        <param>
          <type><ref refid="a01876_1adc6a89c0396fc98e0c095cd8df17b075" kindref="member">MessageType</ref></type>
          <declname>message</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" line="107" column="16" bodyfile="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" bodystart="107" bodyend="107"/>
      </memberdef>
      <memberdef kind="function" id="a01876_1a75b2d9ce4234e841256066b2cd051bc9" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void Ikarus::IObserver&lt; MT &gt;::updateImpl</definition>
        <argsstring>(MessageType message, int val1, const std::string &amp;val2)</argsstring>
        <name>updateImpl</name>
        <qualifiedname>Ikarus::IObserver::updateImpl</qualifiedname>
        <reimplementedby refid="a01860_1a78f7ab50c3ad889e9dafe84ecc59bb9f">updateImpl</reimplementedby>
        <param>
          <type><ref refid="a01876_1adc6a89c0396fc98e0c095cd8df17b075" kindref="member">MessageType</ref></type>
          <declname>message</declname>
        </param>
        <param>
          <type>int</type>
          <declname>val1</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>val2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" line="108" column="16" bodyfile="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" bodystart="108" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="a01876_1ae6d9838e1ced7fcf14b20457144a47b2" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void Ikarus::IObserver&lt; MT &gt;::updateImpl</definition>
        <argsstring>(MessageType message, int val1, double val2)</argsstring>
        <name>updateImpl</name>
        <qualifiedname>Ikarus::IObserver::updateImpl</qualifiedname>
        <reimplementedby refid="a01860_1aca92cd9bf83a7575260a015a646aca8c">updateImpl</reimplementedby>
        <param>
          <type><ref refid="a01876_1adc6a89c0396fc98e0c095cd8df17b075" kindref="member">MessageType</ref></type>
          <declname>message</declname>
        </param>
        <param>
          <type>int</type>
          <declname>val1</declname>
        </param>
        <param>
          <type>double</type>
          <declname>val2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" line="109" column="16" bodyfile="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" bodystart="109" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="a01876_1a5d9bfa8a6046d612106e4a2cb8e8d735" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void Ikarus::IObserver&lt; MT &gt;::updateImpl</definition>
        <argsstring>(MessageType message, const Eigen::VectorXd &amp;vec)</argsstring>
        <name>updateImpl</name>
        <qualifiedname>Ikarus::IObserver::updateImpl</qualifiedname>
        <param>
          <type><ref refid="a01876_1adc6a89c0396fc98e0c095cd8df17b075" kindref="member">MessageType</ref></type>
          <declname>message</declname>
        </param>
        <param>
          <type>const Eigen::VectorXd &amp;</type>
          <declname>vec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" line="110" column="16" bodyfile="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" bodystart="110" bodyend="110"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="a01876_1a5fc7de4e759d5303e0e0a432770446b8" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ikarus::IObserver&lt; MT &gt;::checkMessageType</definition>
        <argsstring>(MessageType message)</argsstring>
        <name>checkMessageType</name>
        <qualifiedname>Ikarus::IObserver::checkMessageType</qualifiedname>
        <param>
          <type><ref refid="a01876_1adc6a89c0396fc98e0c095cd8df17b075" kindref="member">MessageType</ref></type>
          <declname>message</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" line="113" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" bodystart="113" bodyend="118"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Generic observer interface for the Observer design pattern. See <ref refid="a02897_1CITEREF_gamma1995design" kindref="member">[3]</ref> for a description of the design pattern. </para>
    </briefdescription>
    <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>MT</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of message that the observer can handle. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>Ikarus::IObserver&lt; ControlMessages &gt;</label>
        <link refid="a01876"/>
        <childnode refid="1" relation="template-instance">
          <edgelabel>&lt; ControlMessages &gt;</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>Ikarus::IObserver&lt; M &gt;</label>
        <link refid="a01876"/>
        <childnode refid="1" relation="template-instance">
          <edgelabel>&lt; M &gt;</edgelabel>
        </childnode>
      </node>
      <node id="7">
        <label>Ikarus::IObserver&lt; NonLinearSolverMessages &gt;</label>
        <link refid="a01876"/>
        <childnode refid="1" relation="template-instance">
          <edgelabel>&lt; NonLinearSolverMessages &gt;</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>Ikarus::ControlLogger</label>
        <link refid="a01860"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>Ikarus::ControlSubsamplingVertexVTKWriter&lt; B &gt;</label>
        <link refid="a01864"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>Ikarus::GenericObserver&lt; M &gt;</label>
        <link refid="a01868"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>Ikarus::IObserver&lt; MT &gt;</label>
        <link refid="a01876"/>
      </node>
      <node id="8">
        <label>Ikarus::NonLinearSolverLogger</label>
        <link refid="a01872"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" line="25" column="1" bodyfile="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" bodystart="26" bodyend="119"/>
    <listofallmembers>
      <member refid="a01876_1a5fc7de4e759d5303e0e0a432770446b8" prot="private" virt="non-virtual"><scope>Ikarus::IObserver</scope><name>checkMessageType</name></member>
      <member refid="a01876_1adc6a89c0396fc98e0c095cd8df17b075" prot="public" virt="non-virtual"><scope>Ikarus::IObserver</scope><name>MessageType</name></member>
      <member refid="a01876_1aafa35019b0bd7577d9e5b2c209c785bd" prot="public" virt="non-virtual"><scope>Ikarus::IObserver</scope><name>update</name></member>
      <member refid="a01876_1a3a477ef465bf14acd9e21673e2bfc595" prot="public" virt="non-virtual"><scope>Ikarus::IObserver</scope><name>update</name></member>
      <member refid="a01876_1a9ec023872625942d0b64244709966464" prot="public" virt="non-virtual"><scope>Ikarus::IObserver</scope><name>update</name></member>
      <member refid="a01876_1aaa06f0740f435636da206c35951f8c81" prot="public" virt="non-virtual"><scope>Ikarus::IObserver</scope><name>update</name></member>
      <member refid="a01876_1a92045cc1701c89ac62395a8e77ff3eba" prot="public" virt="non-virtual"><scope>Ikarus::IObserver</scope><name>update</name></member>
      <member refid="a01876_1a04b8667b08713503e82ede950a337950" prot="public" virt="non-virtual"><scope>Ikarus::IObserver</scope><name>update</name></member>
      <member refid="a01876_1a1d1ef2313a9aecf4e9d475cce837476e" prot="public" virt="non-virtual"><scope>Ikarus::IObserver</scope><name>update</name></member>
      <member refid="a01876_1ac6dc170df122bd224f2a440cedf33934" prot="protected" virt="virtual"><scope>Ikarus::IObserver</scope><name>updateImpl</name></member>
      <member refid="a01876_1a80d3fd9872a76a02452f42511f780253" prot="protected" virt="virtual"><scope>Ikarus::IObserver</scope><name>updateImpl</name></member>
      <member refid="a01876_1a873494234cf33b9cc7179d90ff6f095e" prot="protected" virt="virtual"><scope>Ikarus::IObserver</scope><name>updateImpl</name></member>
      <member refid="a01876_1a54cfb0283f65810089183deebc9b4858" prot="protected" virt="virtual"><scope>Ikarus::IObserver</scope><name>updateImpl</name></member>
      <member refid="a01876_1a75b2d9ce4234e841256066b2cd051bc9" prot="protected" virt="virtual"><scope>Ikarus::IObserver</scope><name>updateImpl</name></member>
      <member refid="a01876_1ae6d9838e1ced7fcf14b20457144a47b2" prot="protected" virt="virtual"><scope>Ikarus::IObserver</scope><name>updateImpl</name></member>
      <member refid="a01876_1a5d9bfa8a6046d612106e4a2cb8e8d735" prot="protected" virt="virtual"><scope>Ikarus::IObserver</scope><name>updateImpl</name></member>
      <member refid="a01876_1a39df4c52c73f721bb2ef1c90fe76d74a" prot="public" virt="virtual"><scope>Ikarus::IObserver</scope><name>~IObserver</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
