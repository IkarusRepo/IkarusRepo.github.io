<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="a01795" kind="struct" language="C++" prot="public">
    <compoundname>Ikarus::NonLinearSolverInformation</compoundname>
    <includes refid="a00152" local="no">ikarus/solver/nonlinearsolver/solverinfos.hh</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="a01795_1acb65d72d7b2291a9b0d958ce0e4e0887" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Ikarus::NonLinearSolverInformation::success</definition>
        <argsstring></argsstring>
        <name>success</name>
        <qualifiedname>Ikarus::NonLinearSolverInformation::success</qualifiedname>
        <initializer>{false}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/solver/nonlinearsolver/solverinfos.hh" line="26" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/solver/nonlinearsolver/solverinfos.hh" bodystart="26" bodyend="-1"/>
        <referencedby refid="a01795_1a7aaa0619f5238daab90db07d9e29d0d8" compoundref="a00152" startline="25" endline="25">operator bool</referencedby>
      </memberdef>
      <memberdef kind="variable" id="a01795_1ab09859737734f97734f20624f9f3c934" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double Ikarus::NonLinearSolverInformation::residualNorm</definition>
        <argsstring></argsstring>
        <name>residualNorm</name>
        <qualifiedname>Ikarus::NonLinearSolverInformation::residualNorm</qualifiedname>
        <initializer>{std::numeric_limits&lt;double&gt;::infinity()}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/solver/nonlinearsolver/solverinfos.hh" line="27" column="10" bodyfile="/__w/ikarus/ikarus/repo/ikarus/solver/nonlinearsolver/solverinfos.hh" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="a01795_1a66f51414779f3e563557157fb688f18b" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double Ikarus::NonLinearSolverInformation::correctionNorm</definition>
        <argsstring></argsstring>
        <name>correctionNorm</name>
        <qualifiedname>Ikarus::NonLinearSolverInformation::correctionNorm</qualifiedname>
        <initializer>{std::numeric_limits&lt;double&gt;::infinity()}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/solver/nonlinearsolver/solverinfos.hh" line="28" column="10" bodyfile="/__w/ikarus/ikarus/repo/ikarus/solver/nonlinearsolver/solverinfos.hh" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="a01795_1a81570cd3d9f6589a4d1ba81211f41b99" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int Ikarus::NonLinearSolverInformation::iterations</definition>
        <argsstring></argsstring>
        <name>iterations</name>
        <qualifiedname>Ikarus::NonLinearSolverInformation::iterations</qualifiedname>
        <initializer>{-1}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/solver/nonlinearsolver/solverinfos.hh" line="29" column="7" bodyfile="/__w/ikarus/ikarus/repo/ikarus/solver/nonlinearsolver/solverinfos.hh" bodystart="29" bodyend="-1"/>
        <referencedby refid="a01315_1a5869ac09a02a7b2222873ca31a30989e" compoundref="a00200" startline="76" endline="88">Ikarus::AdaptiveStepSizing::IterationBased::operator()</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="a01795_1a7aaa0619f5238daab90db07d9e29d0d8" prot="public" static="no" const="yes" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Ikarus::NonLinearSolverInformation::operator bool</definition>
        <argsstring>() const</argsstring>
        <name>operator bool</name>
        <qualifiedname>Ikarus::NonLinearSolverInformation::operator bool</qualifiedname>
        <briefdescription>
<para>Conversion operator to check the success of the solver. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><computeroutput>true</computeroutput> if the solver was successful, <computeroutput>false</computeroutput> otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/solver/nonlinearsolver/solverinfos.hh" line="25" column="12" bodyfile="/__w/ikarus/ikarus/repo/ikarus/solver/nonlinearsolver/solverinfos.hh" bodystart="25" bodyend="25"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Information about the result of a non-linear solver. </para>
    </briefdescription>
    <detaileddescription>
<para>This structure holds information about the success of a non-linear solver, including the residual norm, correction norm, and the number of iterations performed. </para>
    </detaileddescription>
    <location file="/__w/ikarus/ikarus/repo/ikarus/solver/nonlinearsolver/solverinfos.hh" line="18" column="1" bodyfile="/__w/ikarus/ikarus/repo/ikarus/solver/nonlinearsolver/solverinfos.hh" bodystart="19" bodyend="30"/>
    <listofallmembers>
      <member refid="a01795_1a66f51414779f3e563557157fb688f18b" prot="public" virt="non-virtual"><scope>Ikarus::NonLinearSolverInformation</scope><name>correctionNorm</name></member>
      <member refid="a01795_1a81570cd3d9f6589a4d1ba81211f41b99" prot="public" virt="non-virtual"><scope>Ikarus::NonLinearSolverInformation</scope><name>iterations</name></member>
      <member refid="a01795_1a7aaa0619f5238daab90db07d9e29d0d8" prot="public" virt="non-virtual"><scope>Ikarus::NonLinearSolverInformation</scope><name>operator bool</name></member>
      <member refid="a01795_1ab09859737734f97734f20624f9f3c934" prot="public" virt="non-virtual"><scope>Ikarus::NonLinearSolverInformation</scope><name>residualNorm</name></member>
      <member refid="a01795_1acb65d72d7b2291a9b0d958ce0e4e0887" prot="public" virt="non-virtual"><scope>Ikarus::NonLinearSolverInformation</scope><name>success</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
