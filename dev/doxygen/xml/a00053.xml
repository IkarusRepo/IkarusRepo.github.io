<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="a00053" kind="file" language="C++">
    <compoundname>init.hh</compoundname>
    <includes local="no">chrono</includes>
    <includes local="no">utility</includes>
    <includes local="no">dune/common/parallel/mpihelper.hh</includes>
    <includes local="no">spdlog/details/registry.h</includes>
    <includes local="no">spdlog/fmt/chrono.h</includes>
    <includes local="no">spdlog/fmt/ostr.h</includes>
    <includes local="no">spdlog/fmt/ranges.h</includes>
    <includes local="no">spdlog/sinks/basic_file_sink.h</includes>
    <includes local="no">spdlog/sinks/stdout_color_sinks.h</includes>
    <includes local="no">spdlog/spdlog.h</includes>
    <incdepgraph>
      <node id="1">
        <label>init.hh</label>
        <link refid="a00053"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>chrono</label>
      </node>
      <node id="4">
        <label>dune/common/parallel/mpihelper.hh</label>
      </node>
      <node id="5">
        <label>spdlog/details/registry.h</label>
      </node>
      <node id="6">
        <label>spdlog/fmt/chrono.h</label>
      </node>
      <node id="7">
        <label>spdlog/fmt/ostr.h</label>
      </node>
      <node id="8">
        <label>spdlog/fmt/ranges.h</label>
      </node>
      <node id="9">
        <label>spdlog/sinks/basic_file_sink.h</label>
      </node>
      <node id="10">
        <label>spdlog/sinks/stdout_color_sinks.h</label>
      </node>
      <node id="11">
        <label>spdlog/spdlog.h</label>
      </node>
      <node id="3">
        <label>utility</label>
      </node>
    </incdepgraph>
    <innerclass refid="a01962" prot="public">Ikarus::IkarusInstance</innerclass>
    <innernamespace refid="a00411">Ikarus</innernamespace>
    <briefdescription>
<para>Implementation of the init function. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>SPDX-FileCopyrightText:<sp/>2021-2025<sp/>The<sp/>Ikarus<sp/>Developers<sp/>mueller@ibb.uni-stuttgart.de</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>SPDX-License-Identifier:<sp/>LGPL-3.0-or-later</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;chrono&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;utility&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;dune/common/parallel/mpihelper.hh&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;spdlog/details/registry.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;spdlog/fmt/chrono.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;spdlog/fmt/ostr.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;spdlog/fmt/ranges.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;spdlog/sinks/basic_file_sink.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;spdlog/sinks/stdout_color_sinks.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;spdlog/spdlog.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="a00411" kindref="compound">Ikarus</ref><sp/>{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="32" refid="a01962" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="a01962" kindref="compound">IkarusInstance</ref></highlight></codeline>
<codeline lineno="33"><highlight class="normal">{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="40" refid="a01962_1a76a31b1d9f5b1fba7180451b1edddf0a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="a01962" kindref="compound">IkarusInstance</ref>&amp;<sp/><ref refid="a01962_1a76a31b1d9f5b1fba7180451b1edddf0a" kindref="member">getInstance</ref>()<sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="a01962" kindref="compound">IkarusInstance</ref><sp/>instance;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>instance;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="50" refid="a01962_1a833f9b23184e3d0f5b06f5b7b85d9233" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="a01962_1a833f9b23184e3d0f5b06f5b7b85d9233" kindref="member">enableFileLogger</ref>(std::string&amp;&amp;<sp/>filename<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std::chrono;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>currentTime<sp/>=<sp/>fmt::format(</highlight><highlight class="stringliteral">&quot;_{}&quot;</highlight><highlight class="normal">,<sp/>std::chrono::system_clock::now());</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>std::ranges::transform(currentTime,<sp/>currentTime.begin(),<sp/>[](</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>ch)<sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>(ch<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;<sp/>&apos;</highlight><highlight class="normal"><sp/>or<sp/>ch<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;:&apos;</highlight><highlight class="normal">)<sp/>?<sp/></highlight><highlight class="stringliteral">&apos;_&apos;</highlight><highlight class="normal"><sp/>:<sp/>ch;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>});<sp/></highlight><highlight class="comment">//<sp/>replace<sp/>space<sp/>and<sp/>colon<sp/>with<sp/>underscore</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>logFilename<sp/>=<sp/>(filename.empty()<sp/>?<sp/>executableName_<sp/>:<sp/>filename)<sp/>+<sp/>currentTime<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.log&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>fileSink<sp/><sp/><sp/><sp/>=<sp/>std::make_shared&lt;spdlog::sinks::basic_file_sink_mt&gt;(logFilename,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>fileSink-&gt;set_pattern(</highlight><highlight class="stringliteral">&quot;%v&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>fileSink-&gt;set_level(spdlog::level::trace);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>logger<sp/>=<sp/>spdlog::default_logger();</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>logger-&gt;sinks().push_back(fileSink);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="a01962_1a4865c52ed9d7e9c0f00e8bd5295ee853" kindref="member">init</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**<sp/>argv,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="a01962_1a833f9b23184e3d0f5b06f5b7b85d9233" kindref="member">enableFileLogger</ref>);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><ref refid="a01962" kindref="compound">IkarusInstance</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/>std::string<sp/>executableName_;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="71" refid="a01962_1ab4ee067880d13079efa9b45cd0bcef43" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="a01962_1ab4ee067880d13079efa9b45cd0bcef43" kindref="member">IkarusInstance</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="a01962" kindref="compound">IkarusInstance</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="72" refid="a01962_1a7f11ddf595903d8796cbff4943e620a6" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="a01962_1a7f11ddf595903d8796cbff4943e620a6" kindref="member">operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="a01962" kindref="compound">IkarusInstance</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="73"><highlight class="normal">};</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="82" refid="a01962_1a4865c52ed9d7e9c0f00e8bd5295ee853" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="a00411_1ac8243891c1b961e50a066140ab79a142" kindref="member">init</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**<sp/>argv,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enableFileLogger<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/>Dune::MPIHelper::instance(argc,<sp/>argv);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>instance<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="a01962_1a76a31b1d9f5b1fba7180451b1edddf0a" kindref="member">IkarusInstance::getInstance</ref>();</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/>instance.executableName_<sp/>=<sp/>argv[0];</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>logger<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>spdlog::default_logger();</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/>logger-&gt;set_pattern(</highlight><highlight class="stringliteral">&quot;%v&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(enableFileLogger)</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>instance.enableFileLogger();</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>currentTime<sp/>=<sp/>std::chrono::system_clock::now();</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::chrono::year_month_day<sp/>currentYearMonthDay{floor&lt;std::chrono::days&gt;(currentTime)};</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/>spdlog::info(</highlight><highlight class="stringliteral">&quot;Start<sp/>of<sp/>execution:<sp/>{}&quot;</highlight><highlight class="normal">,<sp/>currentTime);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/>spdlog::info(R</highlight><highlight class="stringliteral">&quot;xxx(<sp/><sp/><sp/><sp/>_/_/_/<sp/><sp/>_/<sp/><sp/><sp/><sp/>_/<sp/><sp/><sp/><sp/>_/_/<sp/><sp/><sp/><sp/>_/_/_/<sp/><sp/><sp/><sp/>_/<sp/><sp/><sp/><sp/>_/<sp/><sp/><sp/><sp/>_/_/_/)xxx&quot;);</highlight></codeline>
<codeline lineno="97"><highlight class="stringliteral"><sp/><sp/>spdlog::info(R</highlight><highlight class="stringliteral">&quot;xxx(<sp/><sp/><sp/><sp/><sp/>_/<sp/><sp/><sp/><sp/>_/<sp/><sp/>_/<sp/><sp/><sp/><sp/>_/<sp/><sp/><sp/><sp/>_/<sp/><sp/>_/<sp/><sp/><sp/><sp/>_/<sp/><sp/>_/<sp/><sp/><sp/><sp/>_/<sp/><sp/>_/<sp/><sp/><sp/><sp/><sp/><sp/><sp/>)xxx&quot;);</highlight></codeline>
<codeline lineno="98"><highlight class="stringliteral"><sp/><sp/>spdlog::info(R</highlight><highlight class="stringliteral">&quot;xxx(<sp/><sp/><sp/><sp/>_/<sp/><sp/><sp/><sp/>_/_/<sp/><sp/><sp/><sp/><sp/><sp/>_/_/_/_/<sp/><sp/>_/_/_/<sp/><sp/><sp/><sp/>_/<sp/><sp/><sp/><sp/>_/<sp/><sp/><sp/><sp/>_/_/<sp/><sp/><sp/><sp/>)xxx&quot;);</highlight></codeline>
<codeline lineno="99"><highlight class="stringliteral"><sp/><sp/>spdlog::info(R</highlight><highlight class="stringliteral">&quot;xxx(<sp/><sp/><sp/>_/<sp/><sp/><sp/><sp/>_/<sp/><sp/>_/<sp/><sp/><sp/><sp/>_/<sp/><sp/><sp/><sp/>_/<sp/><sp/>_/<sp/><sp/><sp/><sp/>_/<sp/><sp/>_/<sp/><sp/><sp/><sp/>_/<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_/<sp/><sp/><sp/>)xxx&quot;);</highlight></codeline>
<codeline lineno="100"><highlight class="stringliteral"><sp/><sp/>spdlog::info(R</highlight><highlight class="stringliteral">&quot;xxx(_/_/_/<sp/><sp/>_/<sp/><sp/><sp/><sp/>_/<sp/><sp/>_/<sp/><sp/><sp/><sp/>_/<sp/><sp/>_/<sp/><sp/><sp/><sp/>_/<sp/><sp/><sp/><sp/>_/_/<sp/><sp/><sp/><sp/>_/_/_/<sp/><sp/><sp/><sp/><sp/><sp/>)xxx&quot;);</highlight></codeline>
<codeline lineno="101"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="102"><highlight class="stringliteral"><sp/><sp/>spdlog::info(</highlight><highlight class="stringliteral">&quot;©<sp/>2021-{}<sp/>The<sp/>Ikarus<sp/>Developers,<sp/>see<sp/>LICENSE.md<sp/>&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(currentYearMonthDay.year()));</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/>spdlog::info(</highlight><highlight class="stringliteral">&quot;You<sp/>are<sp/>using<sp/>Ikarus<sp/>v{}.<sp/>Please<sp/>don&apos;t<sp/>forget<sp/>to<sp/>cite<sp/>us:&quot;</highlight><highlight class="normal">,<sp/>IKARUS_VERSION);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/>spdlog::info(</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Müller,<sp/>A.,<sp/>Vinod<sp/>Kumar<sp/>Mitruka,<sp/>T.<sp/>K.<sp/>M.,<sp/>Jakob,<sp/>H.<sp/>(2024).<sp/>Ikarus<sp/>v0.4<sp/>(Version<sp/>V1).<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;doi:&lt;https://doi.org/10.18419/darus-3889&gt;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="107"><highlight class="normal">}</highlight></codeline>
<codeline lineno="108"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>Ikarus</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/__w/ikarus/ikarus/repo/ikarus/utils/init.hh"/>
  </compounddef>
</doxygen>
