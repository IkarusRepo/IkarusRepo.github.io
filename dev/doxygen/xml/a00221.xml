<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="a00221" kind="file" language="C++">
    <compoundname>fe.hh</compoundname>
    <includes local="no">dune/python/common/typeregistry.hh</includes>
    <includes local="no">dune/python/functions/globalbasis.hh</includes>
    <includes local="no">dune/python/pybind11/eigen.h</includes>
    <includes local="no">dune/python/pybind11/functional.h</includes>
    <includes local="no">dune/python/pybind11/pybind11.h</includes>
    <includes local="no">dune/python/pybind11/stl.h</includes>
    <includes refid="a00320" local="no">ikarus/finiteelements/fefactory.hh</includes>
    <includes refid="a00215" local="no">ikarus/python/finiteelements/registerferequirements.hh</includes>
    <incdepgraph>
      <node id="32">
        <label>ikarus/assembler/dirichletbcenforcement.hh</label>
        <link refid="a00176"/>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>ikarus/finiteelements/febase.hh</label>
        <link refid="a00326"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>ikarus/finiteelements/fefactory.hh</label>
        <link refid="a00320"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>ikarus/finiteelements/ferequirements.hh</label>
        <link refid="a00323"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>ikarus/finiteelements/feresulttypes.hh</label>
        <link refid="a00314"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="40">
        <label>ikarus/finiteelements/fetraits.hh</label>
        <link refid="a00311"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>ikarus/finiteelements/mechanics/materials/tags.hh</label>
        <link refid="a00242"/>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="41">
        <label>ikarus/finiteelements/mixin.hh</label>
        <link refid="a00317"/>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>fe.hh</label>
        <link refid="a00221"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
      </node>
      <node id="43">
        <label>ikarus/python/finiteelements/registerferequirements.hh</label>
        <link refid="a00215"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
      </node>
      <node id="44">
        <label>ikarus/python/finiteelements/scalarwrapper.hh</label>
        <link refid="a00212"/>
        <childnode refid="45" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>ikarus/utils/concepts.hh</label>
        <link refid="a03012"/>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>ikarus/utils/makeenum.hh</label>
        <link refid="a00005"/>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>ikarus/utils/math.hh</label>
        <link refid="a00038"/>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>ikarus/utils/tensorutils.hh</label>
        <link refid="a00032"/>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>ikarus/utils/traits.hh</label>
        <link refid="a00011"/>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>Eigen/Core</label>
      </node>
      <node id="29">
        <label>Eigen/Dense</label>
      </node>
      <node id="30">
        <label>Eigen/Sparse</label>
      </node>
      <node id="31">
        <label>autodiff/forward/dual/dual.hpp</label>
      </node>
      <node id="25">
        <label>concepts</label>
      </node>
      <node id="15">
        <label>dune/common/exceptions.hh</label>
      </node>
      <node id="38">
        <label>dune/common/hybridutilities.hh</label>
      </node>
      <node id="23">
        <label>dune/common/promotiontraits.hh</label>
      </node>
      <node id="45">
        <label>dune/common/referencehelper.hh</label>
      </node>
      <node id="42">
        <label>dune/common/tuplevector.hh</label>
      </node>
      <node id="27">
        <label>dune/functions/functionspacebases/basistags.hh</label>
      </node>
      <node id="28">
        <label>dune/functions/functionspacebases/lagrangebasis.hh</label>
      </node>
      <node id="2">
        <label>dune/python/common/typeregistry.hh</label>
      </node>
      <node id="3">
        <label>dune/python/functions/globalbasis.hh</label>
      </node>
      <node id="4">
        <label>dune/python/pybind11/eigen.h</label>
      </node>
      <node id="5">
        <label>dune/python/pybind11/functional.h</label>
      </node>
      <node id="6">
        <label>dune/python/pybind11/pybind11.h</label>
      </node>
      <node id="7">
        <label>dune/python/pybind11/stl.h</label>
      </node>
      <node id="36">
        <label>functional</label>
      </node>
      <node id="11">
        <label>iosfwd</label>
      </node>
      <node id="12">
        <label>map</label>
      </node>
      <node id="20">
        <label>numeric</label>
      </node>
      <node id="21">
        <label>ranges</label>
      </node>
      <node id="13">
        <label>set</label>
      </node>
      <node id="37">
        <label>tuple</label>
      </node>
      <node id="18">
        <label>type_traits</label>
      </node>
      <node id="22">
        <label>unsupported/Eigen/CXX11/Tensor</label>
      </node>
      <node id="26">
        <label>utility</label>
      </node>
      <node id="14">
        <label>vector</label>
      </node>
    </incdepgraph>
    <innernamespace refid="a00396">Ikarus</innernamespace>
    <innernamespace refid="a00414">Ikarus::Python</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>SPDX-FileCopyrightText:<sp/>2021-2025<sp/>The<sp/>Ikarus<sp/>Developers<sp/>mueller@ibb.uni-stuttgart.de</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>SPDX-License-Identifier:<sp/>LGPL-3.0-or-later</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;dune/python/common/typeregistry.hh&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;dune/python/functions/globalbasis.hh&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;dune/python/pybind11/eigen.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;dune/python/pybind11/functional.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;dune/python/pybind11/pybind11.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;dune/python/pybind11/stl.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="a00320" kindref="compound">ikarus/finiteelements/fefactory.hh</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="a00215" kindref="compound">ikarus/python/finiteelements/registerferequirements.hh</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="a00414" kindref="compound">Ikarus::Python</ref><sp/>{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">FE,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">...<sp/>options&gt;</highlight></codeline>
<codeline lineno="51" refid="a00414_1a0c58c17676c73945cb11eff8a80309ae" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="a00414_1a0c58c17676c73945cb11eff8a80309ae" kindref="member">registerCalculateAt</ref>(pybind11::handle<sp/>scope,<sp/>pybind11::class_&lt;FE,<sp/>options...&gt;<sp/>cls,<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>resultTypesTuple)<sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">Traits<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="a01355_1a70c7907448f7e13ff55b8fb123f3ee0c" kindref="member">FE::Traits</ref>;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="a01387" kindref="compound">FERequirements</ref><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="a01627_1a86c0fea1b37e487f3c78cde6facca9c3" kindref="member">FE::Requirement</ref>;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/>cls.def(</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;calculateAt&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>[&amp;](<ref refid="a01355" kindref="compound">FE</ref>&amp;<sp/>self,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="a01387" kindref="compound">FERequirements</ref>&amp;<sp/>req,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="a01867" kindref="compound">Dune::FieldVector&lt;double, Traits::mydim&gt;</ref>&amp;<sp/>local,</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>resType)<sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Eigen::VectorXd<sp/>result;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>success<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Dune::Hybrid::forEach(resultTypesTuple,<sp/>[&amp;]&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>RT&gt;(RT<sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(resType<sp/>==<sp/><ref refid="a00396_1aef80b6b5b45dcfbea4f722f51a84f53f" kindref="member">toString</ref>(i))<sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>success<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/><sp/>=<sp/>self.template<sp/>calculateAt&lt;RT::template<sp/>Rebind&gt;(req,<sp/>local).asVec();</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(success)</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DUNE_THROW(Dune::NotImplemented,<sp/></highlight><highlight class="stringliteral">&quot;Element<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>Dune::className&lt;FE&gt;()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>doesn&apos;t<sp/>support<sp/>ResultType<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>resType);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pybind11::arg(</highlight><highlight class="stringliteral">&quot;feRequirements&quot;</highlight><highlight class="normal">),<sp/>pybind11::arg(</highlight><highlight class="stringliteral">&quot;local&quot;</highlight><highlight class="normal">),<sp/>pybind11::arg(</highlight><highlight class="stringliteral">&quot;resultType&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="71"><highlight class="normal">}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="a01355" kindref="compound">FE</ref>,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">...<sp/>options&gt;</highlight></codeline>
<codeline lineno="87" refid="a00388_1gac8bb4a818dee7342efbc5e174e35b840" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="a00388_1gac8bb4a818dee7342efbc5e174e35b840" kindref="member">registerFE</ref>(pybind11::handle<sp/>scope,<sp/>pybind11::class_&lt;FE,<sp/>options...&gt;<sp/>cls)<sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">BH<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="a01355_1a26398fefb73f4d51895e26152e368cf8" kindref="member">FE::BasisHandler</ref>;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">GridElement<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="a01355_1ae329d665e853b0286679e97418d3acad" kindref="member">FE::GridElement</ref>;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">Requirement<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="a01627_1a86c0fea1b37e487f3c78cde6facca9c3" kindref="member">FE::Requirement</ref>;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">FlatBasis<sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="a01427_1a81feef959fedef62b2e1daabbd52b5f2" kindref="member">FE::Traits::FlatBasis</ref>;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/>cls.def(<ref refid="a00396_1ac8243891c1b961e50a066140ab79a142" kindref="member">pybind11::init</ref>([](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BH&amp;<sp/>basisHandler,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="a01355_1a327f5479545f9b5d615c07ce535b0007" kindref="member">FE::PreTuple</ref><sp/>argsTuple)<sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>unpackTuple<sp/>=<sp/>[&amp;]&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Arg&gt;(Arg&amp;&amp;...<sp/>args)<sp/>{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="a01355" kindref="compound">FE</ref>(basisHandler,<sp/>std::forward&lt;Arg&gt;(args)...);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::apply(unpackTuple,<sp/>argsTuple);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}),</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pybind11::keep_alive&lt;1,<sp/>2&gt;());</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/>cls.def(</highlight><highlight class="stringliteral">&quot;bind&quot;</highlight><highlight class="normal">,<sp/>[](<ref refid="a01355" kindref="compound">FE</ref>&amp;<sp/>self,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GridElement&amp;<sp/>e)<sp/>{<sp/>self.<ref refid="a01355_1a3a23d70495e802f44ba4b9923804dda0" kindref="member">bind</ref>(e);<sp/>});</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/>cls.def(</highlight><highlight class="stringliteral">&quot;calculateScalar&quot;</highlight><highlight class="normal">,<sp/>[](<ref refid="a01355" kindref="compound">FE</ref>&amp;<sp/>self,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Requirement&amp;<sp/>req,<sp/><ref refid="a00396_1af6f894084edd9109762b86222995ef2a" kindref="member">Ikarus::ScalarAffordance</ref><sp/>affordance)<sp/>{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>calculateScalar(self,<sp/>req,<sp/>affordance);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/>cls.def(</highlight><highlight class="stringliteral">&quot;calculateVector&quot;</highlight><highlight class="normal">,<sp/>[](<ref refid="a01355" kindref="compound">FE</ref>&amp;<sp/>self,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Requirement&amp;<sp/>req,<sp/><ref refid="a00396_1aab9e3e38507d1db7602bc750718c302a" kindref="member">Ikarus::VectorAffordance</ref><sp/>affordance,</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Eigen::Ref&lt;Eigen::VectorXd&gt;<sp/>vec)<sp/>{<sp/>calculateVector(self,<sp/>req,<sp/>affordance,<sp/>vec);<sp/>});</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/>cls.def(</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;calculateMatrix&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>[](<ref refid="a01355" kindref="compound">FE</ref>&amp;<sp/>self,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Requirement&amp;<sp/>req,<sp/><ref refid="a00396_1a390d5311179ec61d163a29c943b3d1a0" kindref="member">Ikarus::MatrixAffordance</ref><sp/>affordance,<sp/>Eigen::Ref&lt;Eigen::MatrixXd&gt;<sp/>mat)<sp/>{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>calculateMatrix(self,<sp/>req,<sp/>affordance,<sp/>mat);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pybind11::arg(</highlight><highlight class="stringliteral">&quot;Requirement&quot;</highlight><highlight class="normal">),<sp/>pybind11::arg(</highlight><highlight class="stringliteral">&quot;MatrixAffordance&quot;</highlight><highlight class="normal">),<sp/>pybind11::arg(</highlight><highlight class="stringliteral">&quot;elementMatrix&quot;</highlight><highlight class="normal">).noconvert());</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/>pybind11::module<sp/>scopedf<sp/>=<sp/>pybind11::module::import(</highlight><highlight class="stringliteral">&quot;dune.functions&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">LocalViewWrapper<sp/><sp/><sp/>=<sp/>Dune::Python::LocalViewWrapper&lt;FlatBasis&gt;;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>includes<sp/><sp/><sp/><sp/>=<sp/>Dune::Python::IncludeFiles{</highlight><highlight class="stringliteral">&quot;dune/python/functions/globalbasis.hh&quot;</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>[lv,<sp/>isNew]<sp/>=<sp/>Dune::Python::insertClass&lt;LocalViewWrapper&gt;(</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>scopedf,<sp/></highlight><highlight class="stringliteral">&quot;LocalViewWrapper&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Dune::Python::GenerateTypeName(</highlight><highlight class="stringliteral">&quot;Dune::Python::LocalViewWrapperWrapper&quot;</highlight><highlight class="normal">,<sp/>Dune::MetaType&lt;FlatBasis&gt;()),<sp/>includes);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isNew)<sp/>{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>lv.def(</highlight><highlight class="stringliteral">&quot;bind&quot;</highlight><highlight class="normal">,<sp/>&amp;LocalViewWrapper::bind);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>lv.def(</highlight><highlight class="stringliteral">&quot;unbind&quot;</highlight><highlight class="normal">,<sp/>&amp;LocalViewWrapper::unbind);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>lv.def(</highlight><highlight class="stringliteral">&quot;index&quot;</highlight><highlight class="normal">,<sp/>[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>LocalViewWrapper&amp;<sp/>localView,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>localView.index(index);<sp/>});</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>lv.def(</highlight><highlight class="stringliteral">&quot;__len__&quot;</highlight><highlight class="normal">,<sp/>[](LocalViewWrapper&amp;<sp/>self)<sp/>-&gt;<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.size();<sp/>});</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>Dune::Python::Functions::registerTree&lt;typename<sp/>LocalViewWrapper::Tree&gt;(lv);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>lv.def(</highlight><highlight class="stringliteral">&quot;tree&quot;</highlight><highlight class="normal">,<sp/>[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>LocalViewWrapper&amp;<sp/>view)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>view.tree();<sp/>});</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/>cls.def(</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;localView&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>[](<ref refid="a01355" kindref="compound">FE</ref>&amp;<sp/>self)<sp/>-&gt;<sp/>LocalViewWrapper<sp/>{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>lvWrapped<sp/>=<sp/>LocalViewWrapper(self.<ref refid="a01355_1a1425316afd592244682b9ccc48cf59ef" kindref="member">localView</ref>().globalBasis());</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>can<sp/>be<sp/>simplified<sp/>when<sp/>https://gitlab.dune-project.org/staging/dune-functions/-/merge_requests/418</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>becomes<sp/>available</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>pybind11::object<sp/>obj<sp/>=<sp/>pybind11::cast(self.localView().element());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lvWrapped.base().bind(self.<ref refid="a01355_1a1425316afd592244682b9ccc48cf59ef" kindref="member">localView</ref>().element());</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>lvWrapped;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pybind11::keep_alive&lt;0,<sp/>1&gt;());</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><ref refid="a00414_1a0c58c17676c73945cb11eff8a80309ae" kindref="member">registerCalculateAt</ref>(scope,<sp/>cls,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="a01627_1ada59c15363d83f6e635ecd6e1672d6a4" kindref="member">FE::SupportedResultTypes</ref>());</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><ref refid="a00414_1a32c3989a8ef1dbc581313ef17a0c6f5b" kindref="member">registerFERequirement</ref>(scope,<sp/>cls);</highlight></codeline>
<codeline lineno="147"><highlight class="normal">}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>Ikarus::Python</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/__w/ikarus/ikarus/repo/ikarus/python/finiteelements/fe.hh"/>
  </compounddef>
</doxygen>
