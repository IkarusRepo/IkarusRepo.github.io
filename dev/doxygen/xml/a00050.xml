<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="a00050" kind="file" language="C++">
    <compoundname>functionhelper.hh</compoundname>
    <includes local="no">ranges</includes>
    <includes local="no">dune/common/float_cmp.hh</includes>
    <includes local="no">dune/grid/utility/hierarchicsearch.hh</includes>
    <includes refid="a03012" local="no">ikarus/utils/concepts.hh</includes>
    <includes refid="a00017" local="no">ikarus/utils/traversal.hh</includes>
    <incdepgraph>
      <node id="15">
        <label>ikarus/assembler/dirichletbcenforcement.hh</label>
        <link refid="a00176"/>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>ikarus/finiteelements/mechanics/materials/tags.hh</label>
        <link refid="a00242"/>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>ikarus/utils/concepts.hh</label>
        <link refid="a03012"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>functionhelper.hh</label>
        <link refid="a00050"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>ikarus/utils/makeenum.hh</label>
        <link refid="a00005"/>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>ikarus/utils/traits.hh</label>
        <link refid="a00011"/>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>ikarus/utils/traversal.hh</label>
        <link refid="a00017"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>Eigen/Dense</label>
      </node>
      <node id="13">
        <label>Eigen/Sparse</label>
      </node>
      <node id="14">
        <label>autodiff/forward/dual/dual.hpp</label>
      </node>
      <node id="6">
        <label>concepts</label>
      </node>
      <node id="17">
        <label>dune/common/exceptions.hh</label>
      </node>
      <node id="3">
        <label>dune/common/float_cmp.hh</label>
      </node>
      <node id="22">
        <label>dune/common/hybridutilities.hh</label>
      </node>
      <node id="10">
        <label>dune/functions/functionspacebases/basistags.hh</label>
      </node>
      <node id="11">
        <label>dune/functions/functionspacebases/lagrangebasis.hh</label>
      </node>
      <node id="4">
        <label>dune/grid/utility/hierarchicsearch.hh</label>
      </node>
      <node id="20">
        <label>functional</label>
      </node>
      <node id="2">
        <label>ranges</label>
      </node>
      <node id="21">
        <label>tuple</label>
      </node>
      <node id="7">
        <label>type_traits</label>
      </node>
      <node id="8">
        <label>utility</label>
      </node>
      <node id="9">
        <label>vector</label>
      </node>
    </incdepgraph>
    <innernamespace refid="a00396">Ikarus</innernamespace>
    <innernamespace refid="a00416">Ikarus::utils</innernamespace>
    <briefdescription>
<para>Helper for dune-functions. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>SPDX-FileCopyrightText:<sp/>2021-2025<sp/>The<sp/>Ikarus<sp/>Developers<sp/>mueller@ibb.uni-stuttgart.de</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>SPDX-License-Identifier:<sp/>LGPL-3.0-or-later</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ranges&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;dune/common/float_cmp.hh&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;dune/grid/utility/hierarchicsearch.hh&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="a03012" kindref="compound">ikarus/utils/concepts.hh</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="a00017" kindref="compound">ikarus/utils/traversal.hh</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="a00416" kindref="compound">Ikarus::utils</ref><sp/>{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>LV&gt;</highlight></codeline>
<codeline lineno="30" refid="a00391_1gae9098182120929a0d21cff1c38f5ca84" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="a00391_1gae9098182120929a0d21cff1c38f5ca84" kindref="member">obtainLagrangeGlobalNodePositions</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>LV&amp;<sp/>localView,</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;<ref refid="a01867" kindref="compound">Dune::FieldVector&lt;double, size&gt;</ref>&gt;&amp;<sp/>lagrangeNodeGlobalCoords)<sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>fT<sp/>=<sp/>[&amp;]([[maybe_unused]]<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nodeNumber,<sp/><ref refid="a01867" kindref="compound">Dune::FieldVector&lt;double, size&gt;</ref>&amp;&amp;<sp/>localCoordinate)<sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>lagrangeNodeGlobalCoords.emplace_back(localView.element().geometry().global(localCoordinate));</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><ref refid="a00416_1a9bfdb235951b98b7a214704baf9c6f95" kindref="member">forEachLagrangeNodePosition</ref>(localView,<sp/>fT);</highlight></codeline>
<codeline lineno="37"><highlight class="normal">}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Basis&gt;</highlight></codeline>
<codeline lineno="50" refid="a00391_1gaa19ed04a701aaa500f7c486addae2d2e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="a00391_1gaa19ed04a701aaa500f7c486addae2d2e" kindref="member">globalIndexFromGlobalPosition</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Basis&amp;<sp/><ref refid="a00425_1a0f9f04fa9d98e890cb6d4fe62ff889a4" kindref="member">basis</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="a01867" kindref="compound">Dune::FieldVector&lt;double, size&gt;</ref>&amp;<sp/>pos)<sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static_assert</highlight><highlight class="normal">(<ref refid="a02030" kindref="compound">Concepts::LagrangeNode</ref>&lt;std::remove_cvref_t&lt;</highlight><highlight class="keyword">decltype</highlight><highlight class="normal">(<ref refid="a00425_1a0f9f04fa9d98e890cb6d4fe62ff889a4" kindref="member">basis</ref>.localView().tree().child(0))&gt;&gt;,</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;globalIndexFromGlobalPosition<sp/>is<sp/>only<sp/>supported<sp/>for<sp/>Lagrange<sp/>basis&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tol<sp/>=<sp/>1e-8;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">LocalView<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>std::remove_cvref_t&lt;</highlight><highlight class="keyword">decltype</highlight><highlight class="normal">(<ref refid="a00425_1a0f9f04fa9d98e890cb6d4fe62ff889a4" kindref="member">basis</ref>.localView())&gt;;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">MultiIndex<sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>LocalView::MultiIndex;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/>Dune::HierarchicSearch<sp/>hSearch(<ref refid="a00425_1a0f9f04fa9d98e890cb6d4fe62ff889a4" kindref="member">basis</ref>.gridView().grid(),<sp/><ref refid="a00425_1a0f9f04fa9d98e890cb6d4fe62ff889a4" kindref="member">basis</ref>.gridView().indexSet());</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>ele<sp/>=<sp/>hSearch.findEntity(pos);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>localView<sp/><sp/>=<sp/><ref refid="a00425_1a0f9f04fa9d98e890cb6d4fe62ff889a4" kindref="member">basis</ref>.localView();</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/>localView.bind(ele);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>geo<sp/><sp/><sp/>=<sp/>localView.element().geometry();</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>node<sp/>=<sp/>localView.tree();</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/>std::optional&lt;std::array&lt;MultiIndex,<sp/>size&gt;&gt;<sp/><ref refid="a00400_1a44e16df41148f7e4538be224814a3423" kindref="member">globalIndices</ref>;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>fT<sp/>=<sp/>[&amp;](</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nodeNumber,<sp/><ref refid="a01867" kindref="compound">Dune::FieldVector&lt;double, size&gt;</ref>&amp;&amp;<sp/>localCoordinate)<sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Dune::FloatCmp::eq(geo.global(localCoordinate),<sp/>pos,<sp/>tol))<sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="a00400_1a44e16df41148f7e4538be224814a3423" kindref="member">globalIndices</ref>.emplace();</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>size;<sp/>j++)</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="a00400_1a44e16df41148f7e4538be224814a3423" kindref="member">globalIndices</ref>.value()[j]<sp/>=<sp/>localView.index(node.child(j).localIndex(nodeNumber));</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><ref refid="a00416_1a9bfdb235951b98b7a214704baf9c6f95" kindref="member">forEachLagrangeNodePosition</ref>(localView,<sp/>fT);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(not<sp/><ref refid="a00400_1a44e16df41148f7e4538be224814a3423" kindref="member">globalIndices</ref>.has_value())</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>DUNE_THROW(Dune::InvalidStateException,<sp/></highlight><highlight class="stringliteral">&quot;No<sp/>Lagrange<sp/>node<sp/>found<sp/>at<sp/>the<sp/>given<sp/>position<sp/>in<sp/>the<sp/>grid.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="a00400_1a44e16df41148f7e4538be224814a3423" kindref="member">globalIndices</ref>.value();</highlight></codeline>
<codeline lineno="77"><highlight class="normal">}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FE&gt;</highlight></codeline>
<codeline lineno="88" refid="a00391_1ga30df35336d19b00bc5db2a0b52ce650e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="a00391_1ga30df35336d19b00bc5db2a0b52ce650e" kindref="member">referenceElementSubEntityPositions</ref>(<ref refid="a01355" kindref="compound">FE</ref>&amp;<sp/>fe,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>codim)<sp/>{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dim<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="a01427_1ae15b8efa9f66a3caee81d99dd5c648de" kindref="member">FE::Traits::mydim</ref>;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>element<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>fe.<ref refid="a01355_1ae84fc54bd26077a2edb0ec07361d0716" kindref="member">gridElement</ref>();</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>referenceElement<sp/>=<sp/>Dune::referenceElement&lt;double,<sp/>dim&gt;(element.type());</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numberOfVertices<sp/><sp/><sp/>=<sp/>referenceElement.size(codim);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>getPosition<sp/>=<sp/>[=](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>referenceElement.position(i,<sp/>codim);<sp/>};</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::views::transform(std::views::iota(0,<sp/>numberOfVertices),<sp/>getPosition);</highlight></codeline>
<codeline lineno="96"><highlight class="normal">}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FE&gt;</highlight></codeline>
<codeline lineno="106" refid="a00391_1ga8c05dce8a66fc4efbe31674b87d18298" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="a00391_1ga8c05dce8a66fc4efbe31674b87d18298" kindref="member">referenceElementVertexPositions</ref>(<ref refid="a01355" kindref="compound">FE</ref>&amp;<sp/>fe)<sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="a00391_1ga30df35336d19b00bc5db2a0b52ce650e" kindref="member">referenceElementSubEntityPositions</ref>(fe,<sp/><ref refid="a01427_1ae15b8efa9f66a3caee81d99dd5c648de" kindref="member">FE::Traits::mydim</ref>);</highlight></codeline>
<codeline lineno="108"><highlight class="normal">}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>Ikarus::utils</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/__w/ikarus/ikarus/repo/ikarus/utils/functionhelper.hh"/>
  </compounddef>
</doxygen>
