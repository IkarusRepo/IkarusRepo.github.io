<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="a01622" kind="struct" language="C++" prot="public">
    <compoundname>Ikarus::Materials::Material</compoundname>
    <includes refid="a03068" local="no">ikarus/finiteelements/mechanics/materials/interface.hh</includes>
    <templateparamlist>
      <param>
        <type>class MI</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="a01622_1a5303817231472050f36f079bc730988b" prot="public" static="no">
        <type>MI</type>
        <definition>using Ikarus::Materials::Material&lt; MI &gt;::MaterialImpl =  MI</definition>
        <argsstring></argsstring>
        <name>MaterialImpl</name>
        <qualifiedname>Ikarus::Materials::Material::MaterialImpl</qualifiedname>
        <briefdescription>
<para>Type of material implementation. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/interface.hh" line="81" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/interface.hh" bodystart="81" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="a01622_1af50dfddadfe829082a56eb804bfb7980" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr bool</type>
        <definition>constexpr bool Ikarus::Materials::Material&lt; MI &gt;::isReduced</definition>
        <argsstring></argsstring>
        <name>isReduced</name>
        <qualifiedname>Ikarus::Materials::Material::isReduced</qualifiedname>
        <initializer>= traits::isSpecializationNonTypeAndTypes&lt;<ref refid="a01642" kindref="compound">VanishingStress</ref>, <ref refid="a01622_1a5303817231472050f36f079bc730988b" kindref="member">MaterialImpl</ref>&gt;::value or
                                    traits::isSpecializationNonTypeAndTypes&lt;<ref refid="a01638" kindref="compound">VanishingStrain</ref>, <ref refid="a01622_1a5303817231472050f36f079bc730988b" kindref="member">MaterialImpl</ref>&gt;::value</initializer>
        <briefdescription>
<para>Static constant for determining if the material has vanishing stress or strain components (is reduced). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/interface.hh" line="86" column="25" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/interface.hh" bodystart="86" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="a01622_1ae9e08c2d0dc02321b8a4d81d4052f63f" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr double</type>
        <definition>constexpr double Ikarus::Materials::Material&lt; MI &gt;::derivativeFactor</definition>
        <argsstring></argsstring>
        <name>derivativeFactor</name>
        <qualifiedname>Ikarus::Materials::Material::derivativeFactor</qualifiedname>
        <initializer>= MI::derivativeFactorImpl</initializer>
        <briefdescription>
<para>This factor denotes the differences between the returned stresses and moduli and the passed strain. </para>
        </briefdescription>
        <detaileddescription>
<para>For neoHooke the inserted quantity is $C$ the Green-Lagrangian strain tensor, the function relation between the energy and the stresses is $S = 1 \dfrac{\partial\psi(E)}{\partial E}$. This factor is the pre factor, which is the difference to the actual derivative, which is written here </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/interface.hh" line="122" column="27" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/interface.hh" bodystart="122" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="a01622_1a2e6191f96be90789c574f58f268f5aea" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr const <ref refid="a01622_1a5303817231472050f36f079bc730988b" kindref="member">MaterialImpl</ref> &amp;</type>
        <definition>constexpr const MaterialImpl &amp; Ikarus::Materials::Material&lt; MI &gt;::impl</definition>
        <argsstring>() const</argsstring>
        <name>impl</name>
        <qualifiedname>Ikarus::Materials::Material::impl</qualifiedname>
        <briefdescription>
<para>Const accessor to the underlying material (CRTP). </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Const reference to the underlying material. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/interface.hh" line="94" column="32" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/interface.hh" bodystart="94" bodyend="94"/>
        <referencedby refid="a01622_1a0b4a203f259da74328dacbcc405c0c22" compoundref="a03068" startline="114" endline="114">Ikarus::Materials::Material&lt; MI &gt;::materialParameters</referencedby>
        <referencedby refid="a01622_1a42dd4120574bc25d9bccd1891fc14024" compoundref="a03068" startline="200" endline="202">Ikarus::Materials::Material&lt; MI &gt;::rebind</referencedby>
        <referencedby refid="a01622_1a8d6370e3d198662f4222a0b94e2d6703" compoundref="a03068" startline="136" endline="147">Ikarus::Materials::Material&lt; MI &gt;::storedEnergy</referencedby>
      </memberdef>
      <memberdef kind="function" id="a01622_1ae6ac28e09154cef841393f09f76d680b" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr <ref refid="a01622_1a5303817231472050f36f079bc730988b" kindref="member">MaterialImpl</ref> &amp;</type>
        <definition>constexpr MaterialImpl &amp; Ikarus::Materials::Material&lt; MI &gt;::impl</definition>
        <argsstring>()</argsstring>
        <name>impl</name>
        <qualifiedname>Ikarus::Materials::Material::impl</qualifiedname>
        <briefdescription>
<para>Accessor to the underlying material (CRTP). </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Reference to the underlying material. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/interface.hh" line="101" column="26" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/interface.hh" bodystart="101" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="a01622_1a0b4a203f259da74328dacbcc405c0c22" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto Ikarus::Materials::Material&lt; MI &gt;::materialParameters</definition>
        <argsstring>() const</argsstring>
        <name>materialParameters</name>
        <qualifiedname>Ikarus::Materials::Material::materialParameters</qualifiedname>
        <briefdescription>
<para>Returns the material parameters stored in the implemented material. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><ref refid="a01622" kindref="compound">Material</ref> parameter. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/interface.hh" line="114" column="9" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/interface.hh" bodystart="114" bodyend="114"/>
      </memberdef>
      <memberdef kind="function" id="a01622_1a8d6370e3d198662f4222a0b94e2d6703" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="a00400_1gacef1e451de1a99845c59d7391064fb8f" kindref="member">StrainTags</ref></type>
            <declname>tag</declname>
            <defname>tag</defname>
          </param>
          <param>
            <type>typename Derived</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto Ikarus::Materials::Material&lt; MI &gt;::storedEnergy</definition>
        <argsstring>(const Eigen::MatrixBase&lt; Derived &gt; &amp;Eraw) const</argsstring>
        <name>storedEnergy</name>
        <qualifiedname>Ikarus::Materials::Material::storedEnergy</qualifiedname>
        <param>
          <type>const Eigen::MatrixBase&lt; Derived &gt; &amp;</type>
          <declname>Eraw</declname>
        </param>
    <requiresclause>CorrectStrainSize&lt;MaterialImpl, Derived&gt;    </requiresclause>
        <briefdescription>
<para>Return the stored potential energy of the material. </para>
        </briefdescription>
        <detaileddescription>
<para>This function return the free Helmholtz energy of the material</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>tag</parametername>
</parameternamelist>
<parameterdescription>
<para>Strain tag indicating which strain tensor components are passed. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Derived</parametername>
</parameternamelist>
<parameterdescription>
<para>The underlying <ref refid="a00427" kindref="compound">Eigen</ref> type. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Eraw</parametername>
</parameternamelist>
<parameterdescription>
<para>The strain tensor components passed in Voigt notation or matrix notation. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Scalar return of stored energy. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/interface.hh" line="136" column="9" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/interface.hh" bodystart="136" bodyend="147"/>
      </memberdef>
      <memberdef kind="function" id="a01622_1a8a68e052cade23285d1a28d1e08845f5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="a00400_1gacef1e451de1a99845c59d7391064fb8f" kindref="member">StrainTags</ref></type>
            <declname>tag</declname>
            <defname>tag</defname>
          </param>
          <param>
            <type>bool</type>
            <declname>voigt</declname>
            <defname>voigt</defname>
            <defval>true</defval>
          </param>
          <param>
            <type>typename Derived</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto Ikarus::Materials::Material&lt; MI &gt;::stresses</definition>
        <argsstring>(const Eigen::MatrixBase&lt; Derived &gt; &amp;Eraw) const</argsstring>
        <name>stresses</name>
        <qualifiedname>Ikarus::Materials::Material::stresses</qualifiedname>
        <param>
          <type>const Eigen::MatrixBase&lt; Derived &gt; &amp;</type>
          <declname>Eraw</declname>
        </param>
    <requiresclause>CorrectStrainSize&lt;MaterialImpl, Derived&gt;    </requiresclause>
        <briefdescription>
<para>Get the stresses of the material. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>tag</parametername>
</parameternamelist>
<parameterdescription>
<para>Strain tag indicating which strain tensor components are passed. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>voigt</parametername>
</parameternamelist>
<parameterdescription>
<para>Boolean indicating whether to return Voigt-shaped result. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Derived</parametername>
</parameternamelist>
<parameterdescription>
<para>The underlying <ref refid="a00427" kindref="compound">Eigen</ref> type. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Eraw</parametername>
</parameternamelist>
<parameterdescription>
<para>The strain tensor components passed in Voigt notation or matrix notation. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Vectorial or Matrix return of stresses. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/interface.hh" line="160" column="9" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/interface.hh" bodystart="160" bodyend="168"/>
      </memberdef>
      <memberdef kind="function" id="a01622_1a7a97d64507fd1ce0c14e919edb8a639b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="a00400_1gacef1e451de1a99845c59d7391064fb8f" kindref="member">StrainTags</ref></type>
            <declname>tag</declname>
            <defname>tag</defname>
          </param>
          <param>
            <type>bool</type>
            <declname>voigt</declname>
            <defname>voigt</defname>
            <defval>true</defval>
          </param>
          <param>
            <type>typename Derived</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto Ikarus::Materials::Material&lt; MI &gt;::tangentModuli</definition>
        <argsstring>(const Eigen::MatrixBase&lt; Derived &gt; &amp;Eraw) const</argsstring>
        <name>tangentModuli</name>
        <qualifiedname>Ikarus::Materials::Material::tangentModuli</qualifiedname>
        <param>
          <type>const Eigen::MatrixBase&lt; Derived &gt; &amp;</type>
          <declname>Eraw</declname>
        </param>
    <requiresclause>CorrectStrainSize&lt;MaterialImpl, Derived&gt;    </requiresclause>
        <briefdescription>
<para>Get the tangentModuli of the material. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>tag</parametername>
</parameternamelist>
<parameterdescription>
<para>Strain tag indicating which strain tensor components are passed. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>voigt</parametername>
</parameternamelist>
<parameterdescription>
<para>Boolean indicating whether to return Voigt-shaped result. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Derived</parametername>
</parameternamelist>
<parameterdescription>
<para>The underlying <ref refid="a00427" kindref="compound">Eigen</ref> type. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Eraw</parametername>
</parameternamelist>
<parameterdescription>
<para>The strain tensor components passed in Voigt notation or matrix notation. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Tangent moduli in Voigt notation or as fourth-order tensor. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/interface.hh" line="181" column="9" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/interface.hh" bodystart="181" bodyend="189"/>
      </memberdef>
      <memberdef kind="function" id="a01622_1a42dd4120574bc25d9bccd1891fc14024" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename STO</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto Ikarus::Materials::Material&lt; MI &gt;::rebind</definition>
        <argsstring>() const</argsstring>
        <name>rebind</name>
        <qualifiedname>Ikarus::Materials::Material::rebind</qualifiedname>
        <briefdescription>
<para>Rebind material to a different scalar type. </para>
        </briefdescription>
        <detaileddescription>
<para>Useful for using automatic differentiation.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>STO</parametername>
</parameternamelist>
<parameterdescription>
<para>The scalar type to rebind to. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Rebound material. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/interface.hh" line="200" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/interface.hh" bodystart="200" bodyend="202"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="a01622_1a03ae10e8656beed2aa69c8a9d27907e5" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr std::string</type>
        <definition>static constexpr std::string Ikarus::Materials::Material&lt; MI &gt;::name</definition>
        <argsstring>()</argsstring>
        <name>name</name>
        <qualifiedname>Ikarus::Materials::Material::name</qualifiedname>
        <briefdescription>
<para>Get the name of the implemented material. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Name of the material. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/interface.hh" line="108" column="33" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/interface.hh" bodystart="108" bodyend="108"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="a01622_1a5392c8caec2297c4b10103e6a0ec0af1" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>bool</type>
            <declname>voigt</declname>
            <defname>voigt</defname>
            <defval>true</defval>
          </param>
          <param>
            <type>typename Derived</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto Ikarus::Materials::Material&lt; MI &gt;::stressesMaybeTransformInputToVoigt</definition>
        <argsstring>(const Eigen::MatrixBase&lt; Derived &gt; &amp;E) const</argsstring>
        <name>stressesMaybeTransformInputToVoigt</name>
        <qualifiedname>Ikarus::Materials::Material::stressesMaybeTransformInputToVoigt</qualifiedname>
        <param>
          <type>const Eigen::MatrixBase&lt; Derived &gt; &amp;</type>
          <declname>E</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/interface.hh" line="206" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/interface.hh" bodystart="206" bodyend="214"/>
      </memberdef>
      <memberdef kind="function" id="a01622_1a761fa2cdcc0eecf7230b9ae2f63828dc" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>bool</type>
            <declname>voigt</declname>
            <defname>voigt</defname>
            <defval>true</defval>
          </param>
          <param>
            <type>typename Derived</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto Ikarus::Materials::Material&lt; MI &gt;::tangentModuliMaybeTransformInputToVoigt</definition>
        <argsstring>(const Eigen::MatrixBase&lt; Derived &gt; &amp;E) const</argsstring>
        <name>tangentModuliMaybeTransformInputToVoigt</name>
        <qualifiedname>Ikarus::Materials::Material::tangentModuliMaybeTransformInputToVoigt</qualifiedname>
        <param>
          <type>const Eigen::MatrixBase&lt; Derived &gt; &amp;</type>
          <declname>E</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/interface.hh" line="217" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/interface.hh" bodystart="217" bodyend="225"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Interface classf or materials. </para>
    </briefdescription>
    <detaileddescription>
<para>Consider a hyper elastic material with the free Helmholtz energy <formula id="64">\[\require{cases}\psi: \begin{cases}\mathbb{R}^{3\times 3} &amp;\rightarrow \mathbb{R} \\ \BC
&amp;\mapsto \psi(\BC) \end{cases}.\]</formula></para>
<para>Then, the value of this potential energy is return by <ref refid="a01622_1a8d6370e3d198662f4222a0b94e2d6703" kindref="member">storedEnergy </ref> and its first derivative (the stresses) by <ref refid="a01622_1a8a68e052cade23285d1a28d1e08845f5" kindref="member">stresses </ref> and the second derivatives (the tangent moduli) by <ref refid="a01622_1a7a97d64507fd1ce0c14e919edb8a639b" kindref="member">tangentModuli </ref>.</para>
<para>The passed strains can be in several formats, i.e., <formula id="65">$\BC$</formula> can be the <ulink url="https://en.wikipedia.org/wiki/Finite_strain_theory#Cauchy_strain_tensor_(right_Cauchy%E2%80%93Green_deformation_tensor)">right Cauchy-Green tensor</ulink>, the <ulink url="https://en.wikipedia.org/wiki/Finite_strain_theory#Deformation_gradient_tensor">deformation gradient</ulink> <formula id="66">$\mathbf{F}$</formula> or linear strains. The current supported tags are given by <ref refid="a00400_1gacef1e451de1a99845c59d7391064fb8f" kindref="member">Ikarus::StrainTags</ref>. <parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>MI</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of the underlying material implementation. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>Ikarus::Materials::Hyperelastic&lt; DEV, VOL &gt;</label>
        <link refid="a01562"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>Ikarus::Materials::LinearElasticityT&lt; ST &gt;</label>
        <link refid="a01626"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>Ikarus::Materials::Material&lt; MI &gt;</label>
        <link refid="a01622"/>
      </node>
      <node id="7">
        <label>Ikarus::Materials::NeoHookeT&lt; ST &gt;</label>
        <link refid="a01566"/>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9">
        <label>Ikarus::Materials::StVenantKirchhoffT&lt; ST &gt;</label>
        <link refid="a01634"/>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
      </node>
      <node id="12">
        <label>Ikarus::Materials::VanishingStrain&lt; strainIndexPair, MI &gt;</label>
        <link refid="a01638"/>
        <childnode refid="11" relation="public-inheritance">
        </childnode>
      </node>
      <node id="14">
        <label>Ikarus::Materials::VanishingStress&lt; stressIndexPair, MI &gt;</label>
        <link refid="a01642"/>
        <childnode refid="13" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>Ikarus::Materials::Material&lt; Hyperelastic&lt; DEV, NoVolumetricPart &gt; &gt;</label>
        <link refid="a01622"/>
        <childnode refid="1" relation="template-instance">
          <edgelabel>&lt; Hyperelastic&lt; DEV, NoVolumetricPart &gt; &gt;</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>Ikarus::Materials::Material&lt; LinearElasticityT&lt; ST &gt; &gt;</label>
        <link refid="a01622"/>
        <childnode refid="1" relation="template-instance">
          <edgelabel>&lt; LinearElasticityT&lt; ST &gt; &gt;</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>Ikarus::Materials::Material&lt; NeoHookeT&lt; ST &gt; &gt;</label>
        <link refid="a01622"/>
        <childnode refid="1" relation="template-instance">
          <edgelabel>&lt; NeoHookeT&lt; ST &gt; &gt;</edgelabel>
        </childnode>
      </node>
      <node id="8">
        <label>Ikarus::Materials::Material&lt; StVenantKirchhoffT&lt; ST &gt; &gt;</label>
        <link refid="a01622"/>
        <childnode refid="1" relation="template-instance">
          <edgelabel>&lt; StVenantKirchhoffT&lt; ST &gt; &gt;</edgelabel>
        </childnode>
      </node>
      <node id="15">
        <label>Ikarus::Materials::Material&lt; StVenantKirchhoffT&lt; ScalarType &gt; &gt;</label>
        <link refid="a01622"/>
        <childnode refid="1" relation="template-instance">
          <edgelabel>&lt; StVenantKirchhoffT&lt; ScalarType &gt; &gt;</edgelabel>
        </childnode>
      </node>
      <node id="11">
        <label>Ikarus::Materials::Material&lt; VanishingStrain&lt; strainIndexPair, MI &gt; &gt;</label>
        <link refid="a01622"/>
        <childnode refid="1" relation="template-instance">
          <edgelabel>&lt; VanishingStrain&lt; strainIndexPair, MI &gt; &gt;</edgelabel>
        </childnode>
      </node>
      <node id="13">
        <label>Ikarus::Materials::Material&lt; VanishingStress&lt; stressIndexPair, MI &gt; &gt;</label>
        <link refid="a01622"/>
        <childnode refid="1" relation="template-instance">
          <edgelabel>&lt; VanishingStress&lt; stressIndexPair, MI &gt; &gt;</edgelabel>
        </childnode>
      </node>
      <node id="10">
        <label>Ikarus::Materials::StVenantKirchhoffT&lt; ScalarType &gt;</label>
        <link refid="a01634"/>
        <childnode refid="9" relation="template-instance">
          <edgelabel>&lt; ScalarType &gt;</edgelabel>
        </childnode>
        <childnode refid="15" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/interface.hh" line="79" column="1" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/interface.hh" bodystart="80" bodyend="226"/>
    <listofallmembers>
      <member refid="a01622_1ae9e08c2d0dc02321b8a4d81d4052f63f" prot="public" virt="non-virtual"><scope>Ikarus::Materials::Material</scope><name>derivativeFactor</name></member>
      <member refid="a01622_1a2e6191f96be90789c574f58f268f5aea" prot="public" virt="non-virtual"><scope>Ikarus::Materials::Material</scope><name>impl</name></member>
      <member refid="a01622_1ae6ac28e09154cef841393f09f76d680b" prot="public" virt="non-virtual"><scope>Ikarus::Materials::Material</scope><name>impl</name></member>
      <member refid="a01622_1af50dfddadfe829082a56eb804bfb7980" prot="public" virt="non-virtual"><scope>Ikarus::Materials::Material</scope><name>isReduced</name></member>
      <member refid="a01622_1a5303817231472050f36f079bc730988b" prot="public" virt="non-virtual"><scope>Ikarus::Materials::Material</scope><name>MaterialImpl</name></member>
      <member refid="a01622_1a0b4a203f259da74328dacbcc405c0c22" prot="public" virt="non-virtual"><scope>Ikarus::Materials::Material</scope><name>materialParameters</name></member>
      <member refid="a01622_1a03ae10e8656beed2aa69c8a9d27907e5" prot="public" virt="non-virtual"><scope>Ikarus::Materials::Material</scope><name>name</name></member>
      <member refid="a01622_1a42dd4120574bc25d9bccd1891fc14024" prot="public" virt="non-virtual"><scope>Ikarus::Materials::Material</scope><name>rebind</name></member>
      <member refid="a01622_1a8d6370e3d198662f4222a0b94e2d6703" prot="public" virt="non-virtual"><scope>Ikarus::Materials::Material</scope><name>storedEnergy</name></member>
      <member refid="a01622_1a8a68e052cade23285d1a28d1e08845f5" prot="public" virt="non-virtual"><scope>Ikarus::Materials::Material</scope><name>stresses</name></member>
      <member refid="a01622_1a5392c8caec2297c4b10103e6a0ec0af1" prot="private" virt="non-virtual"><scope>Ikarus::Materials::Material</scope><name>stressesMaybeTransformInputToVoigt</name></member>
      <member refid="a01622_1a7a97d64507fd1ce0c14e919edb8a639b" prot="public" virt="non-virtual"><scope>Ikarus::Materials::Material</scope><name>tangentModuli</name></member>
      <member refid="a01622_1a761fa2cdcc0eecf7230b9ae2f63828dc" prot="private" virt="non-virtual"><scope>Ikarus::Materials::Material</scope><name>tangentModuliMaybeTransformInputToVoigt</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
