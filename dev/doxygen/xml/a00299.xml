<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="a00299" kind="file" language="C++">
    <compoundname>kirchhoffloveshell.hh</compoundname>
    <includes local="no">dune/geometry/quadraturerules.hh</includes>
    <includes local="no">dune/localfefunctions/cachedlocalBasis/cachedlocalBasis.hh</includes>
    <includes local="no">dune/localfefunctions/impl/standardLocalFunction.hh</includes>
    <includes refid="a00308" local="no">ikarus/finiteelements/fehelper.hh</includes>
    <includes refid="a00323" local="no">ikarus/finiteelements/ferequirements.hh</includes>
    <includes refid="a00314" local="no">ikarus/finiteelements/feresulttypes.hh</includes>
    <includes refid="a00296" local="no">ikarus/finiteelements/mechanics/loads.hh</includes>
    <includes refid="a00236" local="no">ikarus/finiteelements/mechanics/membranestrains.hh</includes>
    <includes refid="a00302" local="no">ikarus/finiteelements/physicshelper.hh</includes>
    <includes refid="a00023" local="no">ikarus/utils/linearalgebrahelper.hh</includes>
    <incdepgraph>
      <node id="20">
        <label>ikarus/assembler/dirichletbcenforcement.hh</label>
        <link refid="a00176"/>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>ikarus/finiteelements/fehelper.hh</label>
        <link refid="a00308"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>ikarus/finiteelements/ferequirements.hh</label>
        <link refid="a00323"/>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>ikarus/finiteelements/feresulttypes.hh</label>
        <link refid="a00314"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>kirchhoffloveshell.hh</label>
        <link refid="a00299"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>ikarus/finiteelements/mechanics/loads.hh</label>
        <link refid="a00296"/>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
      </node>
      <node id="40">
        <label>ikarus/finiteelements/mechanics/loads/traction.hh</label>
        <link refid="a00233"/>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="44">
        <label>ikarus/finiteelements/mechanics/loads/volume.hh</label>
        <link refid="a00230"/>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>ikarus/finiteelements/mechanics/materials/tags.hh</label>
        <link refid="a00242"/>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="45">
        <label>ikarus/finiteelements/mechanics/membranestrains.hh</label>
        <link refid="a00236"/>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="47">
        <label>ikarus/finiteelements/physicshelper.hh</label>
        <link refid="a00302"/>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>ikarus/utils/concepts.hh</label>
        <link refid="a03012"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="49">
        <label>ikarus/utils/linearalgebrahelper.hh</label>
        <link refid="a00023"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>ikarus/utils/makeenum.hh</label>
        <link refid="a00005"/>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>ikarus/utils/math.hh</label>
        <link refid="a00038"/>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>ikarus/utils/tensorutils.hh</label>
        <link refid="a00032"/>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>ikarus/utils/traits.hh</label>
        <link refid="a00011"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>ikarus/utils/traversal.hh</label>
        <link refid="a00017"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>Eigen/Core</label>
      </node>
      <node id="17">
        <label>Eigen/Dense</label>
      </node>
      <node id="18">
        <label>Eigen/Sparse</label>
      </node>
      <node id="19">
        <label>autodiff/forward/dual/dual.hpp</label>
      </node>
      <node id="11">
        <label>concepts</label>
      </node>
      <node id="22">
        <label>dune/common/exceptions.hh</label>
      </node>
      <node id="48">
        <label>dune/common/float_cmp.hh</label>
      </node>
      <node id="46">
        <label>dune/common/fvector.hh</label>
      </node>
      <node id="26">
        <label>dune/common/hybridutilities.hh</label>
      </node>
      <node id="37">
        <label>dune/common/promotiontraits.hh</label>
      </node>
      <node id="51">
        <label>dune/common/tuplevector.hh</label>
      </node>
      <node id="41">
        <label>dune/fufem/boundarypatch.hh</label>
      </node>
      <node id="15">
        <label>dune/functions/functionspacebases/basistags.hh</label>
      </node>
      <node id="16">
        <label>dune/functions/functionspacebases/lagrangebasis.hh</label>
      </node>
      <node id="2">
        <label>dune/geometry/quadraturerules.hh</label>
      </node>
      <node id="52">
        <label>dune/istl/bvector.hh</label>
      </node>
      <node id="3">
        <label>dune/localfefunctions/cachedlocalBasis/cachedlocalBasis.hh</label>
      </node>
      <node id="42">
        <label>dune/localfefunctions/derivativetransformators.hh</label>
      </node>
      <node id="4">
        <label>dune/localfefunctions/impl/standardLocalFunction.hh</label>
      </node>
      <node id="8">
        <label>dune/localfefunctions/manifolds/realTuple.hh</label>
      </node>
      <node id="43">
        <label>dune/localfefunctions/meta.hh</label>
      </node>
      <node id="6">
        <label>functional</label>
      </node>
      <node id="28">
        <label>iosfwd</label>
      </node>
      <node id="29">
        <label>map</label>
      </node>
      <node id="34">
        <label>numeric</label>
      </node>
      <node id="7">
        <label>optional</label>
      </node>
      <node id="50">
        <label>random</label>
      </node>
      <node id="35">
        <label>ranges</label>
      </node>
      <node id="30">
        <label>set</label>
      </node>
      <node id="25">
        <label>tuple</label>
      </node>
      <node id="12">
        <label>type_traits</label>
      </node>
      <node id="36">
        <label>unsupported/Eigen/CXX11/Tensor</label>
      </node>
      <node id="13">
        <label>utility</label>
      </node>
      <node id="14">
        <label>vector</label>
      </node>
    </incdepgraph>
    <innerclass refid="a01475" prot="public">Ikarus::KirchhoffLoveShellPre</innerclass>
    <innerclass refid="a01471" prot="public">Ikarus::KirchhoffLoveShell</innerclass>
    <innerclass refid="a01479" prot="public">Ikarus::KirchhoffLoveShell::KinematicVariables</innerclass>
    <innerclass refid="a01483" prot="public">Ikarus::KlArgs</innerclass>
    <innernamespace refid="a00396">Ikarus</innernamespace>
    <briefdescription>
<para>Definition of the KirchhoffLoveShell class for Kirchhoff-Love shell elements in <ref refid="a00396" kindref="compound">Ikarus</ref>. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>SPDX-FileCopyrightText:<sp/>2021-2025<sp/>The<sp/>Ikarus<sp/>Developers<sp/>mueller@ibb.uni-stuttgart.de</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>SPDX-License-Identifier:<sp/>LGPL-3.0-or-later</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;dune/geometry/quadraturerules.hh&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;dune/localfefunctions/cachedlocalBasis/cachedlocalBasis.hh&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;dune/localfefunctions/impl/standardLocalFunction.hh&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="a00308" kindref="compound">ikarus/finiteelements/fehelper.hh</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="a00323" kindref="compound">ikarus/finiteelements/ferequirements.hh</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="a00314" kindref="compound">ikarus/finiteelements/feresulttypes.hh</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="a00296" kindref="compound">ikarus/finiteelements/mechanics/loads.hh</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="a00236" kindref="compound">ikarus/finiteelements/mechanics/membranestrains.hh</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="a00302" kindref="compound">ikarus/finiteelements/physicshelper.hh</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="a00023" kindref="compound">ikarus/utils/linearalgebrahelper.hh</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="a00396" kindref="compound">Ikarus</ref><sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>PreFE,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FE&gt;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">KirchhoffLoveShell;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="a01475" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="a01475" kindref="compound">KirchhoffLoveShellPre</ref></highlight></codeline>
<codeline lineno="31"><highlight class="normal">{</highlight></codeline>
<codeline lineno="32" refid="a01475_1ab9e6c9d9f7fc9143b4e757a1bc3434e6" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="a01647" kindref="compound">YoungsModulusAndPoissonsRatio</ref><sp/><ref refid="a01475_1ab9e6c9d9f7fc9143b4e757a1bc3434e6" kindref="member">material</ref>;</highlight></codeline>
<codeline lineno="33" refid="a01475_1a011229be59e800e251f4ea13d35197bc" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="a01475_1a011229be59e800e251f4ea13d35197bc" kindref="member">thickness</ref>;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>PreFE,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FE&gt;</highlight></codeline>
<codeline lineno="36" refid="a01475_1a70eedd41455aeffb21dbc1ad9eef1752" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="a01471" kindref="compound">Skill</ref><sp/>=<sp/><ref refid="a01471" kindref="compound">KirchhoffLoveShell&lt;PreFE, FE&gt;</ref>;</highlight></codeline>
<codeline lineno="37"><highlight class="normal">};</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>PreFE,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FE&gt;</highlight></codeline>
<codeline lineno="50" refid="a01471" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="a01471" kindref="compound">KirchhoffLoveShell</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="a01423" kindref="compound">ResultTypeBase</ref>&lt;&gt;</highlight></codeline>
<codeline lineno="51"><highlight class="normal">{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="53" refid="a01471_1ab656c2bb48025564dd1f1158172ebb72" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="a01427" kindref="compound">Traits</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="a01359_1a826c356a5afb013faffb5f7ac893cff4" kindref="member">PreFE::Traits</ref>;</highlight></codeline>
<codeline lineno="54" refid="a01471_1a86b5868555fe2fe7c40cbaed6dec9e83" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="a01471_1a86b5868555fe2fe7c40cbaed6dec9e83" kindref="member">BasisHandler</ref><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="a01427_1a129085c175bca28f94c71699b734ba04" kindref="member">Traits::BasisHandler</ref>;</highlight></codeline>
<codeline lineno="55" refid="a01471_1a628bbafe0ebd786149113b468854aa3e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="a01471_1a628bbafe0ebd786149113b468854aa3e" kindref="member">FlatBasis</ref><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="a01427_1a81feef959fedef62b2e1daabbd52b5f2" kindref="member">Traits::FlatBasis</ref>;</highlight></codeline>
<codeline lineno="56" refid="a01471_1aeccc91bdff22a68bb0a2f991ea7037d6" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="a01387" kindref="compound">Requirement</ref><sp/>=</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="a01387" kindref="compound">FERequirementsFactory&lt;FESolutions::displacement, FEParameter::loadfactor, Traits::useEigenRef&gt;::type</ref>;</highlight></codeline>
<codeline lineno="58" refid="a01471_1a73209ba03ea3a205bc8fe7a46bddf51d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="a01471_1a73209ba03ea3a205bc8fe7a46bddf51d" kindref="member">LocalView</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="a01427_1a06bdad066f621e46875af45a22677a3c" kindref="member">Traits::LocalView</ref>;</highlight></codeline>
<codeline lineno="59" refid="a01471_1a107cf43d15a86e96bba2d8e0a6530c09" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="a01471_1a107cf43d15a86e96bba2d8e0a6530c09" kindref="member">Geometry</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="a01427_1a0b7be1104fba2d190e3fed46f291a851" kindref="member">Traits::Geometry</ref>;</highlight></codeline>
<codeline lineno="60" refid="a01471_1a3ab68ba8bee36b87fb522e9649dfdb4c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="a01471_1a3ab68ba8bee36b87fb522e9649dfdb4c" kindref="member">GridView</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="a01427_1a3ec0294824df467074f5070cb58f5a91" kindref="member">Traits::GridView</ref>;</highlight></codeline>
<codeline lineno="61" refid="a01471_1a0c1e8965155bd80eccbfa06c280a4313" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="a01471_1a0c1e8965155bd80eccbfa06c280a4313" kindref="member">Element</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="a01427_1ac4668b9c9142defdf3b70cca8eeb30c4" kindref="member">Traits::Element</ref>;</highlight></codeline>
<codeline lineno="62" refid="a01471_1a39b4e56c142a7a1edab8f54939fe01ba" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="a01471_1a39b4e56c142a7a1edab8f54939fe01ba" kindref="member">LocalBasisType</ref><sp/>=<sp/></highlight><highlight class="keyword">decltype</highlight><highlight class="normal">(std::declval&lt;LocalView&gt;().tree().child(0).finiteElement().localBasis());</highlight></codeline>
<codeline lineno="63" refid="a01471_1a3d32e2197b3cd057366f0adab8c6c86b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="a01475" kindref="compound">Pre</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="a01475" kindref="compound">KirchhoffLoveShellPre</ref>;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65" refid="a01471_1a2bddb9b1657599421f38a3b89f7d9a1b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="a01471_1a2bddb9b1657599421f38a3b89f7d9a1b" kindref="member">myDim</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="a01427_1ae15b8efa9f66a3caee81d99dd5c648de" kindref="member">Traits::mydim</ref>;</highlight></codeline>
<codeline lineno="66" refid="a01471_1a46b76aacc5dc6fe0fdc354cc7cbd7d01" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="a01471_1a46b76aacc5dc6fe0fdc354cc7cbd7d01" kindref="member">worldDim</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="a01427_1a5d611e1d48285bac5c5ebd6fda9c7cc7" kindref="member">Traits::worlddim</ref>;</highlight></codeline>
<codeline lineno="67" refid="a01471_1ab67caa7fc4bbe7a221c7189207262b99" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="a01471_1ab67caa7fc4bbe7a221c7189207262b99" kindref="member">membraneStrainSize</ref><sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="68" refid="a01471_1a32788b9d1b6081e273e0f474099793f4" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="a01471_1a32788b9d1b6081e273e0f474099793f4" kindref="member">bendingStrainSize</ref><sp/><sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ST<sp/>=<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="80" refid="a01479" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="a01479" kindref="compound">KinematicVariables</ref></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="82" refid="a01479_1a501dbd410136f9cc48cb3d21682f3b3d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Matrix&lt;double,<sp/>3,<sp/>3&gt;<sp/><ref refid="a01479_1a501dbd410136f9cc48cb3d21682f3b3d" kindref="member">C</ref>;<sp/></highlight></codeline>
<codeline lineno="83" refid="a01479_1a9519ddbd1efb331678c6b4bfb6a23b23" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3&lt;ST&gt;<sp/><ref refid="a01479_1a9519ddbd1efb331678c6b4bfb6a23b23" kindref="member">epsV</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="84" refid="a01479_1a373e791fb4275f192135fdfc5f46d655" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3&lt;ST&gt;<sp/><ref refid="a01479_1a373e791fb4275f192135fdfc5f46d655" kindref="member">kappaV</ref>;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="85" refid="a01479_1a7d632741a1be67d3d2228ef97c1caedb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Matrix&lt;ST,<sp/>2,<sp/>3&gt;<sp/><ref refid="a01479_1a7d632741a1be67d3d2228ef97c1caedb" kindref="member">j</ref>;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="86" refid="a01479_1af58b37d5448b1e9ddd2148992f57006e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Matrix&lt;double,<sp/>2,<sp/>3&gt;<sp/><ref refid="a01479_1af58b37d5448b1e9ddd2148992f57006e" kindref="member">J</ref>;<sp/></highlight></codeline>
<codeline lineno="87" refid="a01479_1a972a554418bfc2968060377c193a304b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Matrix3&lt;ST&gt;<sp/><ref refid="a01479_1a972a554418bfc2968060377c193a304b" kindref="member">h</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="88" refid="a01479_1a19a8eab6e7901a50c3bfaf649ae5af9a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Matrix3&lt;double&gt;<sp/><ref refid="a01479_1a19a8eab6e7901a50c3bfaf649ae5af9a" kindref="member">H</ref>;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="89" refid="a01479_1aa3b0078482e0fff572404a85256817c1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3&lt;ST&gt;<sp/><ref refid="a01479_1aa3b0078482e0fff572404a85256817c1" kindref="member">a3N</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="90" refid="a01479_1abdcd538eca8535a418378184903aa21a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3&lt;ST&gt;<sp/><ref refid="a01479_1abdcd538eca8535a418378184903aa21a" kindref="member">a3</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="100" refid="a01471_1a66a395230714582f88bc53779690e900" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="a01471_1a66a395230714582f88bc53779690e900" kindref="member">KirchhoffLoveShell</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="a01475" kindref="compound">Pre</ref>&amp;<sp/>pre)</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>mat_{pre.material},</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>thickness_{pre.thickness}<sp/>{}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="108" refid="a01471_1a4a49206de92d37d0ac1ae6240cf72960" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="a01471_1a4a49206de92d37d0ac1ae6240cf72960" kindref="member">bindImpl</ref>()<sp/>{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>localView<sp/>=<sp/>underlying().localView();</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(localView.bound());</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>element<sp/>=<sp/>localView.element();</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>firstChild<sp/><sp/><sp/><sp/>=<sp/>localView.tree().child(0);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>fe<sp/>=<sp/>firstChild.finiteElement();</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>geo_.emplace(element.geometry());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>numberOfNodes_<sp/>=<sp/>fe.size();</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>order_<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>2<sp/>*<sp/>(fe.localBasis().order());</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>localBasis_<sp/><sp/><sp/><sp/>=<sp/>Dune::CachedLocalBasis(fe.localBasis());</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">requires</highlight><highlight class="normal"><sp/>{<sp/>element.impl().getQuadratureRule(order_);<sp/>})</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(element.impl().isTrimmed())</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>localBasis_.bind(element.impl().getQuadratureRule(order_),<sp/>Dune::bindDerivatives(0,<sp/>1,<sp/>2));</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>localBasis_.bind(Dune::QuadratureRules&lt;double,<sp/>myDim&gt;::rule(element.type(),<sp/>order_),</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Dune::bindDerivatives(0,<sp/>1,<sp/>2));</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>localBasis_.bind(Dune::QuadratureRules&lt;double,<sp/>myDim&gt;::rule(element.type(),<sp/>order_),</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Dune::bindDerivatives(0,<sp/>1,<sp/>2));</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ST<sp/>=<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="142" refid="a01471_1a1a0ead836c312ccac84c75ce2fccccfd" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="a01471_1a1a0ead836c312ccac84c75ce2fccccfd" kindref="member">displacementFunction</ref>(</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="a01387" kindref="compound">Requirement</ref>&amp;<sp/>par,</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::optional&lt;std::reference_wrapper&lt;</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::VectorX&lt;ST&gt;&gt;&gt;&amp;<sp/>dx<sp/>=<sp/>std::nullopt)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>d<sp/>=<sp/>par.<ref refid="a01387_1a523ed390dfea00379b5b638e523ddb74" kindref="member">globalSolution</ref>();</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>disp<sp/><sp/><sp/><sp/><sp/>=<sp/>Ikarus::FEHelper::localSolutionBlockVector&lt;Traits&gt;(d,<sp/>underlying().localView(),<sp/>dx);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>Dune::StandardLocalFunction<sp/>uFunction(</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>localBasis_,<sp/>disp,<sp/>std::make_shared&lt;const<sp/>Geometry&gt;(underlying().localView().element().<ref refid="a01471_1a368cffe9f1d3f287c857176842a3a575" kindref="member">geometry</ref>()));</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>uFunction;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152" refid="a01471_1a368cffe9f1d3f287c857176842a3a575" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="a01471_1a107cf43d15a86e96bba2d8e0a6530c09" kindref="member">Geometry</ref><sp/><ref refid="a01471_1a368cffe9f1d3f287c857176842a3a575" kindref="member">geometry</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>underlying().localView().element().geometry();<sp/>}</highlight></codeline>
<codeline lineno="153" refid="a01471_1a2385d3296b8e50cdc22e0de59e47afce" refkind="member"><highlight class="normal"><sp/><sp/>[[nodiscard]]<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="a01471_1a2385d3296b8e50cdc22e0de59e47afce" kindref="member">numberOfNodes</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>numberOfNodes_;<sp/>}</highlight></codeline>
<codeline lineno="154" refid="a01471_1af313e6f922e1ec9a4e07a6dc0fcdf639" refkind="member"><highlight class="normal"><sp/><sp/>[[nodiscard]]<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="a01471_1af313e6f922e1ec9a4e07a6dc0fcdf639" kindref="member">order</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>order_;<sp/>}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">RT&gt;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">requires</highlight><highlight class="normal">(supportsResultType&lt;RT&gt;())</highlight></codeline>
<codeline lineno="167" refid="a01471_1a34b9d461220c1a158cdbd899d49a7f92" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="a01471_1a34b9d461220c1a158cdbd899d49a7f92" kindref="member">calculateAtImpl</ref>([[maybe_unused]]<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="a01387" kindref="compound">Requirement</ref>&amp;<sp/>req,</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[[maybe_unused]]<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="a01867" kindref="compound">Dune::FieldVector&lt;double, Traits::mydim&gt;</ref>&amp;<sp/>local)</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>-&gt;<sp/><ref refid="a01411" kindref="compound">ResultWrapper&lt;RT&lt;double, myDim, worldDim&gt;</ref>,<sp/><ref refid="a00396_1acfb09bb7db104db62d3d1d2dc3e009b2a57dea6f5039281b7fee517fc43bf3110" kindref="member">ResultShape::Vector</ref>&gt;<sp/>{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>DUNE_THROW(Dune::NotImplemented,<sp/></highlight><highlight class="stringliteral">&quot;No<sp/>results<sp/>are<sp/>implemented&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//&gt;<sp/>CRTP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>underlying()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal"><ref refid="a01355" kindref="compound">FE</ref>&amp;</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(*this);<sp/>}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>underlying()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">FE&amp;</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(*this);<sp/>}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>std::optional&lt;Geometry&gt;<sp/>geo_;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/>Dune::CachedLocalBasis&lt;std::remove_cvref_t&lt;LocalBasisType&gt;&gt;<sp/>localBasis_;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>DefaultMembraneStrain<sp/>membraneStrain_;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/>YoungsModulusAndPoissonsRatio<sp/>mat_;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>thickness_;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>numberOfNodes_{0};</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>order_{};</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="201" refid="a01471_1a2116db254c03a1873dc6d1d432d8eaa1" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="a01471_1a2116db254c03a1873dc6d1d432d8eaa1" kindref="member">computeMaterialAndStrains</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="a01867" kindref="compound">Dune::FieldVector&lt;double, 2&gt;</ref>&amp;<sp/>gpPos,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>gpIndex,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="a01471_1a107cf43d15a86e96bba2d8e0a6530c09" kindref="member">Geometry</ref>&amp;<sp/>geo,</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>uFunction)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">ST<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::remove_cvref_t&lt;</highlight><highlight class="keyword">decltype</highlight><highlight class="normal">(uFunction)&gt;::ctype;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="a01479" kindref="compound">KinematicVariables&lt;ST&gt;</ref><sp/>kin;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="a00419" kindref="compound">Dune</ref>;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Dune::DerivativeDirections;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>[X,<sp/>Jd,<sp/>Hd]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>geo.impl().zeroFirstAndSecondDerivativeOfPosition(gpPos);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>kin.J<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>toEigen(Jd);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>kin.H<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>toEigen(Hd);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::Matrix&lt;double,<sp/>2,<sp/>2&gt;<sp/>A<sp/>=<sp/>kin.J<sp/>*<sp/>kin.J.transpose();</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Matrix&lt;double,<sp/>3,<sp/>3&gt;<sp/>G<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>Eigen::Matrix&lt;double,<sp/>3,<sp/>3&gt;::Zero();</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/>G.block&lt;2,<sp/>2&gt;(0,<sp/>0)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>A;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/>G(2,<sp/>2)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::Matrix&lt;double,<sp/>3,<sp/>3&gt;<sp/>GInv<sp/>=<sp/>G.inverse();</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>kin.C<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="a01471_1a0a02eda2ec4b244354d313e8c98568f6" kindref="member">materialTangent</ref>(GInv);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/>kin.epsV<sp/>=<sp/><ref refid="a01603_1a7c65ab77e1e42865fc4d0b04a5cb288a" kindref="member">DefaultMembraneStrain::value</ref>(gpPos,<sp/>geo,<sp/>uFunction);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>Ndd<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>localBasis_.evaluateSecondDerivatives(gpIndex);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>uasMatrix<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="a00391_1gaf9d7cf401f9f03ce1aae728c646ce178" kindref="member">Dune::viewAsEigenMatrixAsDynFixed</ref>(uFunction.coefficientsRef());</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>hessianu<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>Ndd.transpose().template<sp/>cast&lt;ST&gt;()<sp/>*<sp/>uasMatrix;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>kin.h<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>kin.H<sp/>+<sp/>hessianu;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::Matrix&lt;ST,<sp/>3,<sp/>2&gt;<sp/>gradu<sp/>=<sp/>toEigen(uFunction.evaluateDerivative(</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gpIndex,<sp/>Dune::wrt(spatialAll),<sp/>Dune::on(Dune::DerivativeDirections::referenceElement)));</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/>kin.j<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>kin.J<sp/>+<sp/>gradu.transpose();</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>kin.a3N<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>(kin.j.row(0).cross(kin.j.row(1)));</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/>kin.a3<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>kin.a3N.normalized();</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector&lt;ST,<sp/>3&gt;<sp/>bV<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>kin.h<sp/>*<sp/>kin.a3;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>bV(2)<sp/>*=<sp/>2;<sp/></highlight><highlight class="comment">//<sp/>Voigt<sp/>notation<sp/>requires<sp/>the<sp/>two<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>BV<sp/>=<sp/><ref refid="a00392_1ga4304655095296ce9283e012587817a51" kindref="member">toVoigt</ref>(toEigen(geo.impl().secondFundamentalForm(gpPos)));</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>kin.kappaV<sp/><sp/><sp/><sp/>=<sp/>BV<sp/>-<sp/>bV;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>kin;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ST&gt;</highlight></codeline>
<codeline lineno="238" refid="a01471_1a71e905f315ca4efee16150b0c43fbabe" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="a01471_1a71e905f315ca4efee16150b0c43fbabe" kindref="member">calculateMatrixImpl</ref>(</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="a01387" kindref="compound">Requirement</ref>&amp;<sp/>par,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="a00396_1a390d5311179ec61d163a29c943b3d1a0" kindref="member">MatrixAffordance</ref>&amp;<sp/>affordance,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Traits::template<sp/>MatrixType&lt;ST&gt;<sp/>K,</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::optional&lt;std::reference_wrapper&lt;</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::VectorX&lt;ST&gt;&gt;&gt;&amp;<sp/>dx<sp/>=<sp/>std::nullopt)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(affordance<sp/>!=<sp/><ref refid="a00396_1a390d5311179ec61d163a29c943b3d1a0a086e8b527490b8abe606a8dd76586ab1" kindref="member">MatrixAffordance::stiffness</ref>)</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DUNE_THROW(Dune::NotImplemented,<sp/></highlight><highlight class="stringliteral">&quot;MatrixAffordance<sp/>not<sp/>implemented:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="a00396_1aef80b6b5b45dcfbea4f722f51a84f53f" kindref="member">toString</ref>(affordance));</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Dune::DerivativeDirections;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="a00419" kindref="compound">Dune</ref>;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>uFunction<sp/>=<sp/><ref refid="a01471_1a1a0ead836c312ccac84c75ce2fccccfd" kindref="member">displacementFunction</ref>(par,<sp/>dx);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>lambda<sp/><sp/><sp/>=<sp/>par.<ref refid="a01387_1af11316c1f0fca6982a2d7497bc71a10c" kindref="member">parameter</ref>();</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>geo<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>underlying().localView().element().geometry();</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>[gpIndex,<sp/>gp]<sp/>:<sp/>uFunction.viewOverIntegrationPoints())<sp/>{</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>intElement<sp/>=<sp/>geo.integrationElement(gp.position())<sp/>*<sp/>gp.weight();</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>[C,<sp/>epsV,<sp/>kappaV,<sp/>jE,<sp/>J,<sp/>h,<sp/>H,<sp/>a3N,<sp/>a3]<sp/>=</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="a01471_1a2116db254c03a1873dc6d1d432d8eaa1" kindref="member">computeMaterialAndStrains</ref>(gp.position(),<sp/>gpIndex,<sp/>geo,<sp/>uFunction);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::Vector&lt;ST,<sp/>membraneStrainSize&gt;<sp/>membraneForces<sp/>=<sp/>thickness_<sp/>*<sp/>C<sp/>*<sp/>epsV;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::Vector&lt;ST,<sp/>bendingStrainSize&gt;<sp/>moments<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>Dune::power(thickness_,<sp/>3)<sp/>/<sp/>12.0<sp/>*<sp/>C<sp/>*<sp/>kappaV;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>Nd<sp/><sp/>=<sp/>localBasis_.evaluateJacobian(gpIndex);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>Ndd<sp/>=<sp/>localBasis_.evaluateSecondDerivatives(gpIndex);</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>numberOfNodes_;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Eigen::Matrix&lt;ST,<sp/>membraneStrainSize,<sp/>worldDim&gt;<sp/>bopIMembrane<sp/>=</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="a01603_1a0e9910984eae86b868f317f0a26a132e" kindref="member">DefaultMembraneStrain::derivative</ref>(gp.position(),<sp/>jE,<sp/>Nd,<sp/>geo,<sp/>uFunction,<sp/>localBasis_,<sp/>i);</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Eigen::Matrix&lt;ST,<sp/>bendingStrainSize,<sp/>worldDim&gt;<sp/>bopIBending<sp/>=<sp/><ref refid="a01471_1ab64163b2440a36540cffe5be74981574" kindref="member">bopBending</ref>(jE,<sp/>h,<sp/>Nd,<sp/>Ndd,<sp/>i,<sp/>a3N,<sp/>a3);</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>i;<sp/>j<sp/>&lt;<sp/>numberOfNodes_;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>KBlock<sp/>=<sp/>K.template<sp/>block&lt;worldDim,<sp/>worldDim&gt;(<ref refid="a01471_1a46b76aacc5dc6fe0fdc354cc7cbd7d01" kindref="member">worldDim</ref><sp/>*<sp/>i,<sp/><ref refid="a01471_1a46b76aacc5dc6fe0fdc354cc7cbd7d01" kindref="member">worldDim</ref><sp/>*<sp/>j);</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Eigen::Matrix&lt;ST,<sp/>membraneStrainSize,<sp/>worldDim&gt;<sp/>bopJMembrane<sp/>=</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="a01603_1a0e9910984eae86b868f317f0a26a132e" kindref="member">DefaultMembraneStrain::derivative</ref>(gp.position(),<sp/>jE,<sp/>Nd,<sp/>geo,<sp/>uFunction,<sp/>localBasis_,<sp/>j);</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Eigen::Matrix&lt;ST,<sp/>bendingStrainSize,<sp/>worldDim&gt;<sp/>bopJBending<sp/>=<sp/><ref refid="a01471_1ab64163b2440a36540cffe5be74981574" kindref="member">bopBending</ref>(jE,<sp/>h,<sp/>Nd,<sp/>Ndd,<sp/>j,<sp/>a3N,<sp/>a3);</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>KBlock<sp/>+=<sp/>thickness_<sp/>*<sp/>bopIMembrane.transpose()<sp/>*<sp/>C<sp/>*<sp/>bopJMembrane<sp/>*<sp/>intElement;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>KBlock<sp/>+=<sp/>Dune::power(thickness_,<sp/>3)<sp/>/<sp/>12.0<sp/>*<sp/>bopIBending.transpose()<sp/>*<sp/>C<sp/>*<sp/>bopJBending<sp/>*<sp/>intElement;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Eigen::Matrix&lt;ST,<sp/>worldDim,<sp/>worldDim&gt;<sp/>kgMembraneIJ<sp/>=<sp/><ref refid="a01603_1a28a06b4e89e7e526e8b09b020d6adfcf" kindref="member">DefaultMembraneStrain::secondDerivative</ref>(</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gp.position(),<sp/>Nd,<sp/>geo,<sp/>uFunction,<sp/>localBasis_,<sp/>membraneForces,<sp/>i,<sp/>j);</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Eigen::Matrix&lt;ST,<sp/>worldDim,<sp/>worldDim&gt;<sp/>kgBendingIJ<sp/>=<sp/><ref refid="a01471_1a93f11b9294df96b1955867984fe71670" kindref="member">kgBending</ref>(jE,<sp/>h,<sp/>Nd,<sp/>Ndd,<sp/>a3N,<sp/>a3,<sp/>moments,<sp/>i,<sp/>j);</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>KBlock<sp/>+=<sp/>kgMembraneIJ<sp/>*<sp/>intElement;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>KBlock<sp/>+=<sp/>kgBendingIJ<sp/>*<sp/>intElement;</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/>K.template<sp/>triangularView&lt;Eigen::StrictlyLower&gt;()<sp/>=<sp/>K.transpose();</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ST&gt;</highlight></codeline>
<codeline lineno="283" refid="a01471_1a14aa1287417c41d90c1f9cad4738cc93" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="a01471_1a14aa1287417c41d90c1f9cad4738cc93" kindref="member">calculateVectorImpl</ref>(</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="a01387" kindref="compound">Requirement</ref>&amp;<sp/>par,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="a00396_1aab9e3e38507d1db7602bc750718c302a" kindref="member">VectorAffordance</ref>&amp;<sp/>affordance,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Traits::template<sp/>VectorType&lt;ST&gt;<sp/>force,</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::optional&lt;std::reference_wrapper&lt;</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::VectorX&lt;ST&gt;&gt;&gt;&amp;<sp/>dx<sp/>=<sp/>std::nullopt)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(affordance<sp/>!=<sp/><ref refid="a00396_1aab9e3e38507d1db7602bc750718c302aa2c05161a7e67e946ddc889571aac4e89" kindref="member">VectorAffordance::forces</ref>)</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DUNE_THROW(Dune::NotImplemented,<sp/></highlight><highlight class="stringliteral">&quot;VectorAffordance<sp/>not<sp/>implemented:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="a00396_1aef80b6b5b45dcfbea4f722f51a84f53f" kindref="member">toString</ref>(affordance));</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Dune::DerivativeDirections;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="a00419" kindref="compound">Dune</ref>;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>uFunction<sp/>=<sp/><ref refid="a01471_1a1a0ead836c312ccac84c75ce2fccccfd" kindref="member">displacementFunction</ref>(par,<sp/>dx);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>lambda<sp/><sp/><sp/>=<sp/>par.<ref refid="a01387_1af11316c1f0fca6982a2d7497bc71a10c" kindref="member">parameter</ref>();</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>geo<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>underlying().localView().element().geometry();</highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Internal<sp/>forces</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>[gpIndex,<sp/>gp]<sp/>:<sp/>uFunction.viewOverIntegrationPoints())<sp/>{</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>[C,<sp/>epsV,<sp/>kappaV,<sp/>jE,<sp/>J,<sp/>h,<sp/>H,<sp/>a3N,<sp/>a3]<sp/>=</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="a01471_1a2116db254c03a1873dc6d1d432d8eaa1" kindref="member">computeMaterialAndStrains</ref>(gp.position(),<sp/>gpIndex,<sp/>geo,<sp/>uFunction);</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::Vector&lt;ST,<sp/>3&gt;<sp/>membraneForces<sp/>=<sp/>thickness_<sp/>*<sp/>C<sp/>*<sp/>epsV;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::Vector&lt;ST,<sp/>3&gt;<sp/>moments<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>Dune::power(thickness_,<sp/>3)<sp/>/<sp/>12.0<sp/>*<sp/>C<sp/>*<sp/>kappaV;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>Nd<sp/><sp/>=<sp/>localBasis_.evaluateJacobian(gpIndex);</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>Ndd<sp/>=<sp/>localBasis_.evaluateSecondDerivatives(gpIndex);</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>numberOfNodes_;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Eigen::Matrix&lt;ST,<sp/>3,<sp/>3&gt;<sp/>bopIMembrane<sp/>=</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="a01603_1a0e9910984eae86b868f317f0a26a132e" kindref="member">DefaultMembraneStrain::derivative</ref>(gp.position(),<sp/>jE,<sp/>Nd,<sp/>geo,<sp/>uFunction,<sp/>localBasis_,<sp/>i);</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Eigen::Matrix&lt;ST,<sp/>3,<sp/>3&gt;<sp/>bopIBending<sp/>=<sp/><ref refid="a01471_1ab64163b2440a36540cffe5be74981574" kindref="member">bopBending</ref>(jE,<sp/>h,<sp/>Nd,<sp/>Ndd,<sp/>i,<sp/>a3N,<sp/>a3);</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>force.template<sp/>segment&lt;3&gt;(3<sp/>*<sp/>i)<sp/>+=</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bopIMembrane.transpose()<sp/>*<sp/>membraneForces<sp/>*<sp/>geo.integrationElement(gp.position())<sp/>*<sp/>gp.weight();</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>force.template<sp/>segment&lt;3&gt;(3<sp/>*<sp/>i)<sp/>+=</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bopIBending.transpose()<sp/>*<sp/>moments<sp/>*<sp/>geo.integrationElement(gp.position())<sp/>*<sp/>gp.weight();</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ST&gt;</highlight></codeline>
<codeline lineno="316" refid="a01471_1ac901c3457b487e52ca4c40ccfb1e69a6" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="a01471_1ac901c3457b487e52ca4c40ccfb1e69a6" kindref="member">calculateScalarImpl</ref>(</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="a01387" kindref="compound">Requirement</ref>&amp;<sp/>par,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="a00396_1af6f894084edd9109762b86222995ef2a" kindref="member">ScalarAffordance</ref>&amp;<sp/>affordance,</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::optional&lt;std::reference_wrapper&lt;</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::VectorX&lt;ST&gt;&gt;&gt;&amp;<sp/>dx<sp/>=<sp/>std::nullopt)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>-&gt;<sp/>ST<sp/>{</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(affordance<sp/>!=<sp/><ref refid="a00396_1af6f894084edd9109762b86222995ef2aa814f34f472acef493e9ecf0ffccdcae6" kindref="member">ScalarAffordance::mechanicalPotentialEnergy</ref>)</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DUNE_THROW(Dune::NotImplemented,<sp/></highlight><highlight class="stringliteral">&quot;ScalarAffordance<sp/>not<sp/>implemented:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="a00396_1aef80b6b5b45dcfbea4f722f51a84f53f" kindref="member">toString</ref>(affordance));</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Dune::DerivativeDirections;</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="a00419" kindref="compound">Dune</ref>;</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>uFunction<sp/>=<sp/><ref refid="a01471_1a1a0ead836c312ccac84c75ce2fccccfd" kindref="member">displacementFunction</ref>(par,<sp/>dx);</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>lambda<sp/><sp/><sp/>=<sp/>par.parameter();</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/>ST<sp/>energy<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>geo<sp/>=<sp/>underlying().localView().element().geometry();</highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>[gpIndex,<sp/>gp]<sp/>:<sp/>uFunction.viewOverIntegrationPoints())<sp/>{</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>[C,<sp/>epsV,<sp/>kappaV,<sp/>j,<sp/>J,<sp/>h,<sp/>H,<sp/>a3N,<sp/>a3]<sp/>=</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="a01471_1a2116db254c03a1873dc6d1d432d8eaa1" kindref="member">computeMaterialAndStrains</ref>(gp.position(),<sp/>gpIndex,<sp/>geo,<sp/>uFunction);</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ST<sp/>membraneEnergy<sp/>=<sp/>0.5<sp/>*<sp/>thickness_<sp/>*<sp/>epsV.dot(C<sp/>*<sp/>epsV);</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ST<sp/>bendingEnergy<sp/><sp/>=<sp/>0.5<sp/>*<sp/>Dune::power(thickness_,<sp/>3)<sp/>/<sp/>12.0<sp/>*<sp/>kappaV.dot(C<sp/>*<sp/>kappaV);</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>energy<sp/>+=<sp/>(membraneEnergy<sp/>+<sp/>bendingEnergy)<sp/>*<sp/>geo.integrationElement(gp.position())<sp/>*<sp/>gp.weight();</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>energy;</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ST&gt;</highlight></codeline>
<codeline lineno="342" refid="a01471_1a93f11b9294df96b1955867984fe71670" refkind="member"><highlight class="normal"><sp/><sp/>Eigen::Matrix&lt;ST,<sp/>3,<sp/>3&gt;<sp/><ref refid="a01471_1a93f11b9294df96b1955867984fe71670" kindref="member">kgBending</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::Matrix&lt;ST,<sp/>2,<sp/>3&gt;&amp;<sp/>jcur,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::Matrix3&lt;ST&gt;&amp;<sp/>h,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>dN,</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>ddN,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::Vector3&lt;ST&gt;&amp;<sp/>a3N,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::Vector3&lt;ST&gt;&amp;<sp/>a3,</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::Vector3&lt;ST&gt;&amp;<sp/>S,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>I,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>J)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Matrix&lt;ST,<sp/>3,<sp/>3&gt;<sp/>kg;</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/>kg.setZero();</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>dN1i<sp/>=<sp/>dN(I,<sp/>0);</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>dN1j<sp/>=<sp/>dN(J,<sp/>0);</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>dN2i<sp/>=<sp/>dN(I,<sp/>1);</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>dN2j<sp/>=<sp/>dN(J,<sp/>1);</highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::Matrix&lt;ST,<sp/>3,<sp/>3&gt;<sp/>P<sp/>=</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1.0<sp/>/<sp/>a3N.norm()<sp/>*<sp/>(Eigen::Matrix&lt;double,<sp/>3,<sp/>3&gt;::Identity()<sp/>-<sp/>a3<sp/>*<sp/>a3.transpose());</highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>a1dxI<sp/>=<sp/>Eigen::Matrix&lt;double,<sp/>3,<sp/>3&gt;::Identity()<sp/>*</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dN1i;<sp/></highlight><highlight class="comment">//<sp/>the<sp/>auto<sp/>here<sp/>allows<sp/>the<sp/>exploitation<sp/>of<sp/>the<sp/>identity<sp/>matrices,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>due<sp/>to<sp/>Eigen&apos;s<sp/>expression<sp/>templates</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>a2dxI<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>Eigen::Matrix&lt;double,<sp/>3,<sp/>3&gt;::Identity()<sp/>*<sp/>dN2i;</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>a1dxJ<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>Eigen::Matrix&lt;double,<sp/>3,<sp/>3&gt;::Identity()<sp/>*<sp/>dN1j;</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>a2dxJ<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>Eigen::Matrix&lt;double,<sp/>3,<sp/>3&gt;::Identity()<sp/>*<sp/>dN2j;</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>a1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>jcur.row(0);</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>a2<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>jcur.row(1);</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::Matrix&lt;ST,<sp/>3,<sp/>3&gt;<sp/>a3NdI<sp/>=<sp/>a1dxI.colwise().cross(a2)<sp/>-<sp/>a2dxI.colwise().cross(a1);</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::Matrix&lt;ST,<sp/>3,<sp/>3&gt;<sp/>a3NdJ<sp/>=<sp/>a1dxJ.colwise().cross(a2)<sp/>-<sp/>a2dxJ.colwise().cross(a1);</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Matrix&lt;ST,<sp/>3,<sp/>3&gt;<sp/>a3dI<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>P<sp/>*<sp/>a3NdI;</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Matrix&lt;ST,<sp/>3,<sp/>3&gt;<sp/>a3dJ<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>P<sp/>*<sp/>a3NdJ;</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>3;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>a_albe<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>h.row(i).transpose();</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>ddNI<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>ddN(I,<sp/>i);</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>ddNJ<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>ddN(J,<sp/>i);</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Eigen::Vector3&lt;ST&gt;<sp/>vecd<sp/>=<sp/>P<sp/>*<sp/>a_albe;</highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Eigen::Matrix&lt;ST,<sp/>3,<sp/>3&gt;<sp/>a3Ndd<sp/>=</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1.0<sp/>/<sp/>a3N.squaredNorm()<sp/>*</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((3<sp/>*<sp/>a3<sp/>*<sp/>a3.transpose()<sp/>-<sp/>Eigen::Matrix&lt;double,<sp/>3,<sp/>3&gt;::Identity())<sp/>*<sp/>(a3.dot(a_albe))<sp/>-</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a_albe<sp/>*<sp/>a3.transpose()<sp/>-<sp/>a3<sp/>*<sp/>a_albe.transpose());</highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Eigen::Matrix&lt;ST,<sp/>3,<sp/>3&gt;<sp/>secondDerivativeDirectorIJ<sp/>=<sp/><ref refid="a00391_1ga1496a9776a583f8b09c4244a68453394" kindref="member">skew</ref>(((dN2i<sp/>*<sp/>dN1j<sp/>-<sp/>dN1i<sp/>*<sp/>dN2j)<sp/>*<sp/>vecd).eval());</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>kg<sp/>-=<sp/>(a3NdI.transpose()<sp/>*<sp/>a3Ndd<sp/>*<sp/>a3NdJ<sp/>+<sp/>secondDerivativeDirectorIJ<sp/>+<sp/>(ddNI<sp/>*<sp/>a3dJ<sp/>+<sp/>ddNJ<sp/>*<sp/>a3dI.transpose()))<sp/>*</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S[i]<sp/>*<sp/>(i<sp/>==<sp/>2<sp/>?<sp/>2<sp/>:<sp/>1);</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>kg;</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ST&gt;</highlight></codeline>
<codeline lineno="388" refid="a01471_1ab64163b2440a36540cffe5be74981574" refkind="member"><highlight class="normal"><sp/><sp/>Eigen::Matrix&lt;ST,<sp/>3,<sp/>3&gt;<sp/><ref refid="a01471_1ab64163b2440a36540cffe5be74981574" kindref="member">bopBending</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::Matrix&lt;ST,<sp/>2,<sp/>3&gt;&amp;<sp/>jcur,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::Matrix3&lt;ST&gt;&amp;<sp/>h,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>dN,</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>ddN,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>node,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::Vector3&lt;ST&gt;&amp;<sp/>a3N,</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::Vector3&lt;ST&gt;&amp;<sp/>a3)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::Matrix&lt;ST,<sp/>3,<sp/>3&gt;<sp/>a1dxI<sp/>=</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Eigen::Matrix&lt;double,<sp/>3,<sp/>3&gt;::Identity()<sp/>*<sp/>dN(node,<sp/>0);<sp/></highlight><highlight class="comment">//<sp/>this<sp/>should<sp/>be<sp/>double</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>but<sp/>the<sp/>cross-product<sp/>below<sp/>complains<sp/>otherwise</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::Matrix&lt;ST,<sp/>3,<sp/>3&gt;<sp/>a2dxI<sp/>=<sp/>Eigen::Matrix&lt;double,<sp/>3,<sp/>3&gt;::Identity()<sp/>*<sp/>dN(node,<sp/>1);</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>a1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>jcur.row(0);</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>a2<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>jcur.row(1);</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::Matrix&lt;ST,<sp/>3,<sp/>3&gt;<sp/>a3NdI<sp/>=</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a1dxI.colwise().cross(a2)<sp/>-<sp/>a2dxI.colwise().cross(a1);<sp/></highlight><highlight class="comment">//<sp/>minus<sp/>needed<sp/>since<sp/>order<sp/>has</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>be<sp/>swapped<sp/>to<sp/>get<sp/>column-wise<sp/>cross<sp/>product<sp/>working</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::Matrix&lt;ST,<sp/>3,<sp/>3&gt;<sp/>a3d1<sp/>=</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1.0<sp/>/<sp/>a3N.norm()<sp/>*<sp/>(Eigen::Matrix&lt;double,<sp/>3,<sp/>3&gt;::Identity()<sp/>-<sp/>a3<sp/>*<sp/>a3.transpose())<sp/>*<sp/>a3NdI;</highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Matrix&lt;ST,<sp/>3,<sp/>3&gt;<sp/>bop<sp/>=<sp/>-(h<sp/>*<sp/>a3d1<sp/>+<sp/>(a3<sp/>*<sp/>ddN.row(node)).<ref refid="a00396_1ac2c6469be19ce4ef2e630bfa1c5a5e24" kindref="member">transpose</ref>());</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/>bop.row(2)<sp/>*=<sp/>2;</highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bop;</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight></codeline>
<codeline lineno="415" refid="a01471_1a0a02eda2ec4b244354d313e8c98568f6" refkind="member"><highlight class="normal"><sp/><sp/>Eigen::Matrix&lt;double,<sp/>3,<sp/>3&gt;<sp/><ref refid="a01471_1a0a02eda2ec4b244354d313e8c98568f6" kindref="member">materialTangent</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::Matrix&lt;double,<sp/>3,<sp/>3&gt;&amp;<sp/>Aconv)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>lambda<sp/><sp/><sp/>=<sp/>mat_.emodul<sp/>*<sp/>mat_.nu<sp/>/<sp/>((1.0<sp/>+<sp/>mat_.nu)<sp/>*<sp/>(1.0<sp/>-<sp/>2.0<sp/>*<sp/>mat_.nu));</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mu<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>mat_.emodul<sp/>/<sp/>(2.0<sp/>*<sp/>(1.0<sp/>+<sp/>mat_.nu));</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>lambdbar<sp/>=<sp/>2.0<sp/>*<sp/>lambda<sp/>*<sp/>mu<sp/>/<sp/>(lambda<sp/>+<sp/>2.0<sp/>*<sp/>mu);</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::TensorFixedSize&lt;double,<sp/>Eigen::Sizes&lt;3,<sp/>3,<sp/>3,<sp/>3&gt;&gt;<sp/>moduli;</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>AconvT<sp/>=<sp/><ref refid="a00392_1ga5cfd9d098384fb067d897b3c0499b447" kindref="member">tensorView</ref>(Aconv,<sp/>std::array&lt;Eigen::Index,<sp/>2&gt;({3,<sp/>3}));</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/>moduli<sp/>=<sp/>lambdbar<sp/>*<sp/><ref refid="a00392_1gab2cea9ac847cc3635812467c9d96ceb4" kindref="member">dyadic</ref>(AconvT,<sp/>AconvT).eval()<sp/>+<sp/>2.0<sp/>*<sp/>mu<sp/>*<sp/>symmetricFourthOrder&lt;double&gt;(Aconv,<sp/>Aconv);</highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>C<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="a00392_1ga4304655095296ce9283e012587817a51" kindref="member">toVoigt</ref>(moduli);</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Matrix&lt;double,<sp/>3,<sp/>3&gt;<sp/>C33<sp/>=<sp/>C({0,<sp/>1,<sp/>5},<sp/>{0,<sp/>1,<sp/>5});</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>C33;</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="427"><highlight class="normal">};</highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight></codeline>
<codeline lineno="433" refid="a01483" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="a01483" kindref="compound">KlArgs</ref></highlight></codeline>
<codeline lineno="434"><highlight class="normal">{</highlight></codeline>
<codeline lineno="435" refid="a01483_1a3e897b238caac293258b7f9e292a51f1" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="a01483_1a3e897b238caac293258b7f9e292a51f1" kindref="member">youngs_modulus</ref>;</highlight></codeline>
<codeline lineno="436" refid="a01483_1a6c6f839affa58485ab1ccd37ab483982" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="a01483_1a6c6f839affa58485ab1ccd37ab483982" kindref="member">nu</ref>;</highlight></codeline>
<codeline lineno="437" refid="a01483_1a9e17b3dc5ce89a7c6cb85ebed38ba31b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="a01483_1a9e17b3dc5ce89a7c6cb85ebed38ba31b" kindref="member">thickness</ref>;</highlight></codeline>
<codeline lineno="438"><highlight class="normal">};</highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight></codeline>
<codeline lineno="445" refid="a00396_1aecb794f40bd585f77e094976751ba41e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="a00396_1aecb794f40bd585f77e094976751ba41e" kindref="member">kirchhoffLoveShell</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="a01483" kindref="compound">KlArgs</ref>&amp;<sp/>args)<sp/>{</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><ref refid="a01475" kindref="compound">KirchhoffLoveShellPre</ref><sp/>pre({.emodul<sp/>=<sp/>args.<ref refid="a01483_1a3e897b238caac293258b7f9e292a51f1" kindref="member">youngs_modulus</ref>,<sp/>.nu<sp/>=<sp/>args.<ref refid="a01483_1a6c6f839affa58485ab1ccd37ab483982" kindref="member">nu</ref>},<sp/>args.<ref refid="a01483_1a9e17b3dc5ce89a7c6cb85ebed38ba31b" kindref="member">thickness</ref>);</highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pre;</highlight></codeline>
<codeline lineno="449"><highlight class="normal">}</highlight></codeline>
<codeline lineno="450"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>Ikarus</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/kirchhoffloveshell.hh"/>
  </compounddef>
</doxygen>
