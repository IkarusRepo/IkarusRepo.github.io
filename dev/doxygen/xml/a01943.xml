<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="a01943" kind="class" language="C++" prot="public">
    <compoundname>Ikarus::ControlLogger</compoundname>
    <basecompoundref refid="a01959" prot="public" virt="non-virtual">Ikarus::IObserver&lt; ControlMessages &gt;</basecompoundref>
    <includes refid="a00134" local="no">ikarus/utils/observer/controllogger.hh</includes>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="a01943_1ad819dbc0a3255f89715cac1904c2fe10" prot="private" static="no">
        <type>std::chrono::time_point&lt; std::chrono::high_resolution_clock &gt;</type>
        <definition>using Ikarus::ControlLogger::TimePoint =  std::chrono::time_point&lt;std::chrono::high_resolution_clock&gt;</definition>
        <argsstring></argsstring>
        <name>TimePoint</name>
        <qualifiedname>Ikarus::ControlLogger::TimePoint</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/controllogger.hh" line="56" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/utils/observer/controllogger.hh" bodystart="56" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="a01943_1a6f093f60a7d5dff5483d1459792bb974" prot="private" static="no" mutable="no">
        <type>TimePoint</type>
        <definition>TimePoint Ikarus::ControlLogger::start_</definition>
        <argsstring></argsstring>
        <name>start_</name>
        <qualifiedname>Ikarus::ControlLogger::start_</qualifiedname>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/controllogger.hh" line="57" column="13" bodyfile="/__w/ikarus/ikarus/repo/ikarus/utils/observer/controllogger.hh" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="a01943_1af875edc283576119c5aef6d1936c791c" prot="private" static="no" mutable="no">
        <type>TimePoint</type>
        <definition>TimePoint Ikarus::ControlLogger::stop_</definition>
        <argsstring></argsstring>
        <name>stop_</name>
        <qualifiedname>Ikarus::ControlLogger::stop_</qualifiedname>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/controllogger.hh" line="58" column="13" bodyfile="/__w/ikarus/ikarus/repo/ikarus/utils/observer/controllogger.hh" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="a01943_1aa6e27598a9cede9e1d4cf50a8ce69223" prot="private" static="no" mutable="no">
        <type>std::chrono::milliseconds</type>
        <definition>std::chrono::milliseconds Ikarus::ControlLogger::duration_</definition>
        <argsstring></argsstring>
        <name>duration_</name>
        <qualifiedname>Ikarus::ControlLogger::duration_</qualifiedname>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/controllogger.hh" line="59" column="29" bodyfile="/__w/ikarus/ikarus/repo/ikarus/utils/observer/controllogger.hh" bodystart="59" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="a01943_1a10ad975b5a99ce217fd1d122963f46e8" prot="public" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>void</type>
        <definition>void Ikarus::ControlLogger::updateImpl</definition>
        <argsstring>(ControlMessages message) final</argsstring>
        <name>updateImpl</name>
        <qualifiedname>Ikarus::ControlLogger::updateImpl</qualifiedname>
        <reimplements refid="a01959_1ac6dc170df122bd224f2a440cedf33934">updateImpl</reimplements>
        <param>
          <type><ref refid="a00390_1ga35fa62fd2d4186a9750af3d0692f2893" kindref="member">ControlMessages</ref></type>
          <declname>message</declname>
        </param>
        <briefdescription>
<para>Implementation of the update method for control message logging. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>The received control message. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/controllogger.hh" line="30" column="8"/>
      </memberdef>
      <memberdef kind="function" id="a01943_1a9c8c660297d060779e05303c63c1b4be" prot="public" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>void</type>
        <definition>void Ikarus::ControlLogger::updateImpl</definition>
        <argsstring>(ControlMessages message, const std::string &amp;val) final</argsstring>
        <name>updateImpl</name>
        <qualifiedname>Ikarus::ControlLogger::updateImpl</qualifiedname>
        <reimplements refid="a01959_1a54cfb0283f65810089183deebc9b4858">updateImpl</reimplements>
        <param>
          <type><ref refid="a00390_1ga35fa62fd2d4186a9750af3d0692f2893" kindref="member">ControlMessages</ref></type>
          <declname>message</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>Implementation of the update method for logging control messages with string values. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>The received control message. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>The string value associated with the message. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/controllogger.hh" line="37" column="8"/>
      </memberdef>
      <memberdef kind="function" id="a01943_1a78f7ab50c3ad889e9dafe84ecc59bb9f" prot="public" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>void</type>
        <definition>void Ikarus::ControlLogger::updateImpl</definition>
        <argsstring>(ControlMessages message, int val1, const std::string &amp;val2) final</argsstring>
        <name>updateImpl</name>
        <qualifiedname>Ikarus::ControlLogger::updateImpl</qualifiedname>
        <reimplements refid="a01959_1a75b2d9ce4234e841256066b2cd051bc9">updateImpl</reimplements>
        <param>
          <type><ref refid="a00390_1ga35fa62fd2d4186a9750af3d0692f2893" kindref="member">ControlMessages</ref></type>
          <declname>message</declname>
        </param>
        <param>
          <type>int</type>
          <declname>val1</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>val2</declname>
        </param>
        <briefdescription>
<para>Implementation of the update method for logging control messages with an integer and a string value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>The received control message. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val1</parametername>
</parameternamelist>
<parameterdescription>
<para>The integer value associated with the message. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val2</parametername>
</parameternamelist>
<parameterdescription>
<para>The string value associated with the message. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/controllogger.hh" line="45" column="8"/>
      </memberdef>
      <memberdef kind="function" id="a01943_1aca92cd9bf83a7575260a015a646aca8c" prot="public" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>void</type>
        <definition>void Ikarus::ControlLogger::updateImpl</definition>
        <argsstring>(ControlMessages message, int val1, double val2) final</argsstring>
        <name>updateImpl</name>
        <qualifiedname>Ikarus::ControlLogger::updateImpl</qualifiedname>
        <reimplements refid="a01959_1ae6d9838e1ced7fcf14b20457144a47b2">updateImpl</reimplements>
        <param>
          <type><ref refid="a00390_1ga35fa62fd2d4186a9750af3d0692f2893" kindref="member">ControlMessages</ref></type>
          <declname>message</declname>
        </param>
        <param>
          <type>int</type>
          <declname>val1</declname>
        </param>
        <param>
          <type>double</type>
          <declname>val2</declname>
        </param>
        <briefdescription>
<para>Implementation of the update method for logging control messages with an integer and a double value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>The received control message. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val1</parametername>
</parameternamelist>
<parameterdescription>
<para>The integer value associated with the message. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val2</parametername>
</parameternamelist>
<parameterdescription>
<para>The double value associated with the message. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/controllogger.hh" line="53" column="8"/>
      </memberdef>
      <memberdef kind="function" id="a01959_1aafa35019b0bd7577d9e5b2c209c785bd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ikarus::IObserver&lt; ControlMessages  &gt;::update</definition>
        <argsstring>(MessageType message)</argsstring>
        <name>update</name>
        <qualifiedname>Ikarus::IObserver&lt; ControlMessages &gt;::update</qualifiedname>
        <param>
          <type><ref refid="a00390_1ga35fa62fd2d4186a9750af3d0692f2893" kindref="member">MessageType</ref></type>
          <declname>message</declname>
        </param>
        <briefdescription>
<para>Update method for receiving notifications with a message. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>The message to be received. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" line="36" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" bodystart="36" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="a01959_1a3a477ef465bf14acd9e21673e2bfc595" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ikarus::IObserver&lt; ControlMessages  &gt;::update</definition>
        <argsstring>(MessageType message, double val)</argsstring>
        <name>update</name>
        <qualifiedname>Ikarus::IObserver&lt; ControlMessages &gt;::update</qualifiedname>
        <param>
          <type><ref refid="a00390_1ga35fa62fd2d4186a9750af3d0692f2893" kindref="member">MessageType</ref></type>
          <declname>message</declname>
        </param>
        <param>
          <type>double</type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>Update method for receiving notifications with a message and a double value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>The message to be received. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>The double value associated with the message. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" line="46" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" bodystart="46" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="a01959_1a9ec023872625942d0b64244709966464" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ikarus::IObserver&lt; ControlMessages  &gt;::update</definition>
        <argsstring>(MessageType message, int val)</argsstring>
        <name>update</name>
        <qualifiedname>Ikarus::IObserver&lt; ControlMessages &gt;::update</qualifiedname>
        <param>
          <type><ref refid="a00390_1ga35fa62fd2d4186a9750af3d0692f2893" kindref="member">MessageType</ref></type>
          <declname>message</declname>
        </param>
        <param>
          <type>int</type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>Update method for receiving notifications with a message and an integer value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>The message to be received. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>The integer value associated with the message. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" line="56" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" bodystart="56" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="a01959_1aaa06f0740f435636da206c35951f8c81" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ikarus::IObserver&lt; ControlMessages  &gt;::update</definition>
        <argsstring>(MessageType message, const std::string &amp;val)</argsstring>
        <name>update</name>
        <qualifiedname>Ikarus::IObserver&lt; ControlMessages &gt;::update</qualifiedname>
        <param>
          <type><ref refid="a00390_1ga35fa62fd2d4186a9750af3d0692f2893" kindref="member">MessageType</ref></type>
          <declname>message</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>Update method for receiving notifications with a message and a string value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>The message to be received. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>The string value associated with the message. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" line="66" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" bodystart="66" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="a01959_1a92045cc1701c89ac62395a8e77ff3eba" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ikarus::IObserver&lt; ControlMessages  &gt;::update</definition>
        <argsstring>(MessageType message, int val1, double val2)</argsstring>
        <name>update</name>
        <qualifiedname>Ikarus::IObserver&lt; ControlMessages &gt;::update</qualifiedname>
        <param>
          <type><ref refid="a00390_1ga35fa62fd2d4186a9750af3d0692f2893" kindref="member">MessageType</ref></type>
          <declname>message</declname>
        </param>
        <param>
          <type>int</type>
          <declname>val1</declname>
        </param>
        <param>
          <type>double</type>
          <declname>val2</declname>
        </param>
        <briefdescription>
<para>Update method for receiving notifications with a message and two values (integer and double). </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>The message to be received. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val1</parametername>
</parameternamelist>
<parameterdescription>
<para>The integer value associated with the message. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val2</parametername>
</parameternamelist>
<parameterdescription>
<para>The double value associated with the message. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" line="77" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" bodystart="77" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="a01959_1a04b8667b08713503e82ede950a337950" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ikarus::IObserver&lt; ControlMessages  &gt;::update</definition>
        <argsstring>(MessageType message, int val1, const std::string &amp;val2)</argsstring>
        <name>update</name>
        <qualifiedname>Ikarus::IObserver&lt; ControlMessages &gt;::update</qualifiedname>
        <param>
          <type><ref refid="a00390_1ga35fa62fd2d4186a9750af3d0692f2893" kindref="member">MessageType</ref></type>
          <declname>message</declname>
        </param>
        <param>
          <type>int</type>
          <declname>val1</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>val2</declname>
        </param>
        <briefdescription>
<para>Update method for receiving notifications with a message, an integer value, and a string value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>The message to be received. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val1</parametername>
</parameternamelist>
<parameterdescription>
<para>The integer value associated with the message. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val2</parametername>
</parameternamelist>
<parameterdescription>
<para>The string value associated with the message. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" line="88" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" bodystart="88" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="a01959_1a1d1ef2313a9aecf4e9d475cce837476e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ikarus::IObserver&lt; ControlMessages  &gt;::update</definition>
        <argsstring>(MessageType message, const Eigen::VectorXd &amp;vec)</argsstring>
        <name>update</name>
        <qualifiedname>Ikarus::IObserver&lt; ControlMessages &gt;::update</qualifiedname>
        <param>
          <type><ref refid="a00390_1ga35fa62fd2d4186a9750af3d0692f2893" kindref="member">MessageType</ref></type>
          <declname>message</declname>
        </param>
        <param>
          <type>const Eigen::VectorXd &amp;</type>
          <declname>vec</declname>
        </param>
        <briefdescription>
<para>Update method for receiving notifications with a message and an Eigen::VectorXd. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>The message to be received. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vec</parametername>
</parameternamelist>
<parameterdescription>
<para>The Eigen::VectorXd associated with the message. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" line="98" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" bodystart="98" bodyend="101"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="a01959_1adc6a89c0396fc98e0c095cd8df17b075" prot="public" static="no">
        <type><ref refid="a00390_1ga35fa62fd2d4186a9750af3d0692f2893" kindref="member">ControlMessages</ref></type>
        <definition>using Ikarus::IObserver&lt; ControlMessages  &gt;::MessageType =  ControlMessages</definition>
        <argsstring></argsstring>
        <name>MessageType</name>
        <qualifiedname>Ikarus::IObserver&lt; ControlMessages &gt;::MessageType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" line="28" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" bodystart="28" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="a01959_1a80d3fd9872a76a02452f42511f780253" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void Ikarus::IObserver&lt; ControlMessages  &gt;::updateImpl</definition>
        <argsstring>(MessageType message, double val)</argsstring>
        <name>updateImpl</name>
        <qualifiedname>Ikarus::IObserver&lt; ControlMessages &gt;::updateImpl</qualifiedname>
        <param>
          <type><ref refid="a00390_1ga35fa62fd2d4186a9750af3d0692f2893" kindref="member">MessageType</ref></type>
          <declname>message</declname>
        </param>
        <param>
          <type>double</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" line="105" column="16" bodyfile="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" bodystart="105" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="a01959_1a873494234cf33b9cc7179d90ff6f095e" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void Ikarus::IObserver&lt; ControlMessages  &gt;::updateImpl</definition>
        <argsstring>(MessageType message, int val)</argsstring>
        <name>updateImpl</name>
        <qualifiedname>Ikarus::IObserver&lt; ControlMessages &gt;::updateImpl</qualifiedname>
        <param>
          <type><ref refid="a00390_1ga35fa62fd2d4186a9750af3d0692f2893" kindref="member">MessageType</ref></type>
          <declname>message</declname>
        </param>
        <param>
          <type>int</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" line="106" column="16" bodyfile="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" bodystart="106" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="a01959_1a5d9bfa8a6046d612106e4a2cb8e8d735" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void Ikarus::IObserver&lt; ControlMessages  &gt;::updateImpl</definition>
        <argsstring>(MessageType message, const Eigen::VectorXd &amp;vec)</argsstring>
        <name>updateImpl</name>
        <qualifiedname>Ikarus::IObserver&lt; ControlMessages &gt;::updateImpl</qualifiedname>
        <param>
          <type><ref refid="a00390_1ga35fa62fd2d4186a9750af3d0692f2893" kindref="member">MessageType</ref></type>
          <declname>message</declname>
        </param>
        <param>
          <type>const Eigen::VectorXd &amp;</type>
          <declname>vec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" line="110" column="16" bodyfile="/__w/ikarus/ikarus/repo/ikarus/utils/observer/observer.hh" bodystart="110" bodyend="110"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="a01943" kindref="compound">ControlLogger</ref> class for logging control messages. </para>
    </briefdescription>
    <detaileddescription>
<para>This class implements an observer for control messages and logs relevant information based on the received messages. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>Ikarus::IObserver&lt; ControlMessages &gt;</label>
        <link refid="a01959"/>
        <childnode refid="3" relation="template-instance">
          <edgelabel>&lt; ControlMessages &gt;</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>Ikarus::ControlLogger</label>
        <link refid="a01943"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>Ikarus::IObserver&lt; MT &gt;</label>
        <link refid="a01959"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>Ikarus::IObserver&lt; ControlMessages &gt;</label>
        <link refid="a01959"/>
        <childnode refid="3" relation="template-instance">
          <edgelabel>&lt; ControlMessages &gt;</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>Ikarus::ControlLogger</label>
        <link refid="a01943"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>Ikarus::IObserver&lt; MT &gt;</label>
        <link refid="a01959"/>
      </node>
    </collaborationgraph>
    <location file="/__w/ikarus/ikarus/repo/ikarus/utils/observer/controllogger.hh" line="22" column="1" bodyfile="/__w/ikarus/ikarus/repo/ikarus/utils/observer/controllogger.hh" bodystart="23" bodyend="60"/>
    <listofallmembers>
      <member refid="a01943_1aa6e27598a9cede9e1d4cf50a8ce69223" prot="private" virt="non-virtual"><scope>Ikarus::ControlLogger</scope><name>duration_</name></member>
      <member refid="a01959_1adc6a89c0396fc98e0c095cd8df17b075" prot="public" virt="non-virtual"><scope>Ikarus::ControlLogger</scope><name>MessageType</name></member>
      <member refid="a01943_1a6f093f60a7d5dff5483d1459792bb974" prot="private" virt="non-virtual"><scope>Ikarus::ControlLogger</scope><name>start_</name></member>
      <member refid="a01943_1af875edc283576119c5aef6d1936c791c" prot="private" virt="non-virtual"><scope>Ikarus::ControlLogger</scope><name>stop_</name></member>
      <member refid="a01943_1ad819dbc0a3255f89715cac1904c2fe10" prot="private" virt="non-virtual"><scope>Ikarus::ControlLogger</scope><name>TimePoint</name></member>
      <member refid="a01959_1aafa35019b0bd7577d9e5b2c209c785bd" prot="public" virt="non-virtual"><scope>Ikarus::ControlLogger</scope><name>update</name></member>
      <member refid="a01959_1a3a477ef465bf14acd9e21673e2bfc595" prot="public" virt="non-virtual"><scope>Ikarus::ControlLogger</scope><name>update</name></member>
      <member refid="a01959_1a9ec023872625942d0b64244709966464" prot="public" virt="non-virtual"><scope>Ikarus::ControlLogger</scope><name>update</name></member>
      <member refid="a01959_1aaa06f0740f435636da206c35951f8c81" prot="public" virt="non-virtual"><scope>Ikarus::ControlLogger</scope><name>update</name></member>
      <member refid="a01959_1a92045cc1701c89ac62395a8e77ff3eba" prot="public" virt="non-virtual"><scope>Ikarus::ControlLogger</scope><name>update</name></member>
      <member refid="a01959_1a04b8667b08713503e82ede950a337950" prot="public" virt="non-virtual"><scope>Ikarus::ControlLogger</scope><name>update</name></member>
      <member refid="a01959_1a1d1ef2313a9aecf4e9d475cce837476e" prot="public" virt="non-virtual"><scope>Ikarus::ControlLogger</scope><name>update</name></member>
      <member refid="a01943_1a10ad975b5a99ce217fd1d122963f46e8" prot="public" virt="virtual"><scope>Ikarus::ControlLogger</scope><name>updateImpl</name></member>
      <member refid="a01943_1a9c8c660297d060779e05303c63c1b4be" prot="public" virt="virtual"><scope>Ikarus::ControlLogger</scope><name>updateImpl</name></member>
      <member refid="a01943_1a78f7ab50c3ad889e9dafe84ecc59bb9f" prot="public" virt="virtual"><scope>Ikarus::ControlLogger</scope><name>updateImpl</name></member>
      <member refid="a01943_1aca92cd9bf83a7575260a015a646aca8c" prot="public" virt="virtual"><scope>Ikarus::ControlLogger</scope><name>updateImpl</name></member>
      <member refid="a01959_1a80d3fd9872a76a02452f42511f780253" prot="protected" virt="virtual" ambiguityscope="IObserver&lt; ControlMessages &gt;::"><scope>Ikarus::ControlLogger</scope><name>updateImpl</name></member>
      <member refid="a01959_1a873494234cf33b9cc7179d90ff6f095e" prot="protected" virt="virtual" ambiguityscope="IObserver&lt; ControlMessages &gt;::"><scope>Ikarus::ControlLogger</scope><name>updateImpl</name></member>
      <member refid="a01959_1a5d9bfa8a6046d612106e4a2cb8e8d735" prot="protected" virt="virtual" ambiguityscope="IObserver&lt; ControlMessages &gt;::"><scope>Ikarus::ControlLogger</scope><name>updateImpl</name></member>
      <member refid="a01959_1a39df4c52c73f721bb2ef1c90fe76d74a" prot="public" virt="virtual"><scope>Ikarus::ControlLogger</scope><name>~IObserver</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
