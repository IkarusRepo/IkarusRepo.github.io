<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="a01616" kind="class" language="C++" prot="public">
    <compoundname>Ikarus::ResultFunction</compoundname>
    <basecompoundref prot="public" virt="non-virtual">Dune::VTKFunction&lt; AS::GridView &gt;</basecompoundref>
    <includes refid="a00323" local="no">ikarus/io/resultfunction.hh</includes>
    <templateparamlist>
      <param>
        <type>typename AS</type>
      </param>
      <param>
        <type>template&lt; typename, int, int &gt; class</type>
        <declname>RT</declname>
        <defname>RT</defname>
      </param>
      <param>
        <type>typename UserFunction</type>
        <defval>Impl::DefaultUserFunction</defval>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="a01616_1ab7712895c055876ce68b119ee5be512b" prot="public" static="no">
        <type>AS</type>
        <definition>using Ikarus::ResultFunction&lt; AS, RT, UserFunction &gt;::Assembler =  AS</definition>
        <argsstring></argsstring>
        <name>Assembler</name>
        <qualifiedname>Ikarus::ResultFunction::Assembler</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/io/resultfunction.hh" line="65" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/io/resultfunction.hh" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="a01616_1ae02316521c3591dee26cf26d3cc1aafe" prot="public" static="no">
        <type>typename Assembler::GridView</type>
        <definition>using Ikarus::ResultFunction&lt; AS, RT, UserFunction &gt;::GridView =  typename Assembler::GridView</definition>
        <argsstring></argsstring>
        <name>GridView</name>
        <qualifiedname>Ikarus::ResultFunction::GridView</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/io/resultfunction.hh" line="66" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/io/resultfunction.hh" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="a01616_1a04e04c52ed60c19be684faa4767ed795" prot="public" static="no">
        <type>typename Assembler::FERequirement</type>
        <definition>using Ikarus::ResultFunction&lt; AS, RT, UserFunction &gt;::FERequirementType =  typename Assembler::FERequirement</definition>
        <argsstring></argsstring>
        <name>FERequirementType</name>
        <qualifiedname>Ikarus::ResultFunction::FERequirementType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/io/resultfunction.hh" line="67" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/io/resultfunction.hh" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="a01616_1a593fc23022f4622064a1659c0805a44f" prot="public" static="no">
        <type>typename Assembler::FEContainer</type>
        <definition>using Ikarus::ResultFunction&lt; AS, RT, UserFunction &gt;::FEContainer =  typename Assembler::FEContainer</definition>
        <argsstring></argsstring>
        <name>FEContainer</name>
        <qualifiedname>Ikarus::ResultFunction::FEContainer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/io/resultfunction.hh" line="68" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/io/resultfunction.hh" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="a01616_1a8c19ba544b970530a3d2421eef882c72" prot="public" static="no">
        <type>typename std::remove_cvref_t&lt; <ref refid="a01616_1a593fc23022f4622064a1659c0805a44f" kindref="member">FEContainer</ref> &gt;::value_type</type>
        <definition>using Ikarus::ResultFunction&lt; AS, RT, UserFunction &gt;::FiniteElement =  typename std::remove_cvref_t&lt;FEContainer&gt;::value_type</definition>
        <argsstring></argsstring>
        <name>FiniteElement</name>
        <qualifiedname>Ikarus::ResultFunction::FiniteElement</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/io/resultfunction.hh" line="69" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/io/resultfunction.hh" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="a01616_1a916f6362e75f7b8f9f8e9b5acd7fb3ae" prot="public" static="no">
        <type>typename GridView::ctype</type>
        <definition>using Ikarus::ResultFunction&lt; AS, RT, UserFunction &gt;::ctype =  typename GridView::ctype</definition>
        <argsstring></argsstring>
        <name>ctype</name>
        <qualifiedname>Ikarus::ResultFunction::ctype</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/io/resultfunction.hh" line="71" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/io/resultfunction.hh" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="a01616_1a6da0b532274ad8ed0c79e7012fbf81fd" prot="public" static="no">
        <type>typename GridView::template Codim&lt; 0 &gt;::Entity</type>
        <definition>using Ikarus::ResultFunction&lt; AS, RT, UserFunction &gt;::Entity =  typename GridView::template Codim&lt;0&gt;::Entity</definition>
        <argsstring></argsstring>
        <name>Entity</name>
        <qualifiedname>Ikarus::ResultFunction::Entity</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/io/resultfunction.hh" line="73" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/io/resultfunction.hh" bodystart="73" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="a01616_1af7e853295439736348e50ee08cdced8a" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr int</type>
        <definition>constexpr int Ikarus::ResultFunction&lt; AS, RT, UserFunction &gt;::griddim</definition>
        <argsstring></argsstring>
        <name>griddim</name>
        <qualifiedname>Ikarus::ResultFunction::griddim</qualifiedname>
        <initializer>= GridView::dimension</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/io/resultfunction.hh" line="72" column="24" bodyfile="/__w/ikarus/ikarus/repo/ikarus/io/resultfunction.hh" bodystart="72" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="a01616_1a8eb2ef400fdfc92075e8bd182b64d01f" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="a01616_1ab7712895c055876ce68b119ee5be512b" kindref="member">Assembler</ref> &gt;</type>
        <definition>std::shared_ptr&lt;Assembler&gt; Ikarus::ResultFunction&lt; AS, RT, UserFunction &gt;::assembler_</definition>
        <argsstring></argsstring>
        <name>assembler_</name>
        <qualifiedname>Ikarus::ResultFunction::assembler_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/io/resultfunction.hh" line="159" column="19" bodyfile="/__w/ikarus/ikarus/repo/ikarus/io/resultfunction.hh" bodystart="159" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="a01616_1a862c0de1f7a6e902ffc83552a2e4235e" prot="private" static="no" mutable="no">
        <type>Dune::VTK::Precision</type>
        <definition>Dune::VTK::Precision Ikarus::ResultFunction&lt; AS, RT, UserFunction &gt;::prec_</definition>
        <argsstring></argsstring>
        <name>prec_</name>
        <qualifiedname>Ikarus::ResultFunction::prec_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/io/resultfunction.hh" line="161" column="24" bodyfile="/__w/ikarus/ikarus/repo/ikarus/io/resultfunction.hh" bodystart="161" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="a01616_1aa160631b8369732d5e261021848df9f7" prot="private" static="no" mutable="no">
        <type>UserFunction</type>
        <definition>UserFunction Ikarus::ResultFunction&lt; AS, RT, UserFunction &gt;::userFunction_</definition>
        <argsstring></argsstring>
        <name>userFunction_</name>
        <qualifiedname>Ikarus::ResultFunction::userFunction_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/io/resultfunction.hh" line="162" column="16" bodyfile="/__w/ikarus/ikarus/repo/ikarus/io/resultfunction.hh" bodystart="162" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="a01616_1add24f14249cce07c37dd92e3f81cf50c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double Ikarus::ResultFunction&lt; AS, RT, UserFunction &gt;::evaluate</definition>
        <argsstring>(int comp, const Entity &amp;e, const Dune::FieldVector&lt; ctype, griddim &gt; &amp;local) const override</argsstring>
        <name>evaluate</name>
        <qualifiedname>Ikarus::ResultFunction::evaluate</qualifiedname>
        <param>
          <type>int</type>
          <declname>comp</declname>
        </param>
        <param>
          <type>const <ref refid="a01616_1a6da0b532274ad8ed0c79e7012fbf81fd" kindref="member">Entity</ref> &amp;</type>
          <declname>e</declname>
        </param>
        <param>
          <type>const <ref refid="a01784" kindref="compound">Dune::FieldVector</ref>&lt; <ref refid="a01616_1a916f6362e75f7b8f9f8e9b5acd7fb3ae" kindref="member">ctype</ref>, <ref refid="a01616_1af7e853295439736348e50ee08cdced8a" kindref="member">griddim</ref> &gt; &amp;</type>
          <declname>local</declname>
        </param>
        <briefdescription>
<para>Evaluate the component at a given entity and local coordinates. </para>
        </briefdescription>
        <detaileddescription>
<para>This function is required by the Dune::VTKFunction interface.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>comp</parametername>
</parameternamelist>
<parameterdescription>
<para>Stress component index </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>Entity on which to evaluate the stress </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>local</parametername>
</parameternamelist>
<parameterdescription>
<para>Local coordinates within the entity </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Stress component value </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/io/resultfunction.hh" line="85" column="10" bodyfile="/__w/ikarus/ikarus/repo/ikarus/io/resultfunction.hh" bodystart="85" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="a01616_1a29d17ce2c3a99be49e322d527b42748a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int Ikarus::ResultFunction&lt; AS, RT, UserFunction &gt;::ncomps</definition>
        <argsstring>() const override</argsstring>
        <name>ncomps</name>
        <qualifiedname>Ikarus::ResultFunction::ncomps</qualifiedname>
        <briefdescription>
<para>Get the number of components. </para>
        </briefdescription>
        <detaileddescription>
<para>This function is required by the Dune::VTKFunction interface.</para>
<para><simplesect kind="return"><para>Number of stress components </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/io/resultfunction.hh" line="97" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/io/resultfunction.hh" bodystart="97" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="a01616_1aaefbf5aea92c097023ed3d628a25f2cf" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr std::string</type>
        <definition>constexpr std::string Ikarus::ResultFunction&lt; AS, RT, UserFunction &gt;::name</definition>
        <argsstring>() const override</argsstring>
        <name>name</name>
        <qualifiedname>Ikarus::ResultFunction::name</qualifiedname>
        <briefdescription>
<para>Get the name of the result type. </para>
        </briefdescription>
        <detaileddescription>
<para>This function is required by the Dune::VTKFunction interface.</para>
<para><simplesect kind="return"><para>String representing the name of the result type </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/io/resultfunction.hh" line="113" column="26" bodyfile="/__w/ikarus/ikarus/repo/ikarus/io/resultfunction.hh" bodystart="113" bodyend="118"/>
      </memberdef>
      <memberdef kind="function" id="a01616_1aa2ce1b66145ac6962be8189061f42d45" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>Dune::VTK::Precision</type>
        <definition>Dune::VTK::Precision Ikarus::ResultFunction&lt; AS, RT, UserFunction &gt;::precision</definition>
        <argsstring>() const override</argsstring>
        <name>precision</name>
        <qualifiedname>Ikarus::ResultFunction::precision</qualifiedname>
        <briefdescription>
<para>Get the precision used for this result. </para>
        </briefdescription>
        <detaileddescription>
<para>This function is part of the Dune::VTKFunction interface. This has no affect when the <ref refid="a01616" kindref="compound">ResultFunction</ref> is used with the dune-vtk module</para>
<para><simplesect kind="return"><para>Precision (i.e. float64 or float32) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/io/resultfunction.hh" line="128" column="24" bodyfile="/__w/ikarus/ikarus/repo/ikarus/io/resultfunction.hh" bodystart="128" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="a01616_1aa37e3d1ee3abfa48ae5bfd300a01c09b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename UF</type>
            <defval>UserFunction</defval>
          </param>
        </templateparamlist>
        <type></type>
        <definition>Ikarus::ResultFunction&lt; AS, RT, UserFunction &gt;::ResultFunction</definition>
        <argsstring>(std::shared_ptr&lt; Assembler &gt; assembler, Dune::VTK::Precision prec=Dune::VTK::Precision::float64, UF &amp;&amp;userFunction={})</argsstring>
        <name>ResultFunction</name>
        <qualifiedname>Ikarus::ResultFunction::ResultFunction</qualifiedname>
        <param>
          <type>std::shared_ptr&lt; <ref refid="a01616_1ab7712895c055876ce68b119ee5be512b" kindref="member">Assembler</ref> &gt;</type>
          <declname>assembler</declname>
        </param>
        <param>
          <type>Dune::VTK::Precision</type>
          <declname>prec</declname>
          <defval>Dune::VTK::Precision::float64</defval>
        </param>
        <param>
          <type>UF &amp;&amp;</type>
          <declname>userFunction</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
<para>Construct a new Result Function object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>UF</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of the user function </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>assembler</parametername>
</parameternamelist>
<parameterdescription>
<para>shared pointer to the underlying assembler (provides the finite elements and the requested results) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>prec</parametername>
</parameternamelist>
<parameterdescription>
<para>(optional) specify the used precision (only has an effect when using resultfunciton with Dune::VTK::VTKWriter) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>userFunction</parametername>
</parameternamelist>
<parameterdescription>
<para>the user function (default is DefaultUserFunction) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/io/resultfunction.hh" line="141" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/io/resultfunction.hh" bodystart="141" bodyend="145"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="a01616_1a4af4aad8174b1f9a52efc55b59ad6a3b" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double Ikarus::ResultFunction&lt; AS, RT, UserFunction &gt;::evaluateComponent</definition>
        <argsstring>(int eleID, const Dune::FieldVector&lt; ctype, griddim &gt; &amp;local, int comp) const</argsstring>
        <name>evaluateComponent</name>
        <qualifiedname>Ikarus::ResultFunction::evaluateComponent</qualifiedname>
        <param>
          <type>int</type>
          <declname>eleID</declname>
        </param>
        <param>
          <type>const <ref refid="a01784" kindref="compound">Dune::FieldVector</ref>&lt; <ref refid="a01616_1a916f6362e75f7b8f9f8e9b5acd7fb3ae" kindref="member">ctype</ref>, <ref refid="a01616_1af7e853295439736348e50ee08cdced8a" kindref="member">griddim</ref> &gt; &amp;</type>
          <declname>local</declname>
        </param>
        <param>
          <type>int</type>
          <declname>comp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/io/resultfunction.hh" line="148" column="10" bodyfile="/__w/ikarus/ikarus/repo/ikarus/io/resultfunction.hh" bodystart="148" bodyend="153"/>
      </memberdef>
      <memberdef kind="function" id="a01616_1a48f27605f2ba027f331d8ba6f308d185" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="a01616_1a593fc23022f4622064a1659c0805a44f" kindref="member">FEContainer</ref> &amp;</type>
        <definition>const FEContainer &amp; Ikarus::ResultFunction&lt; AS, RT, UserFunction &gt;::finiteElements</definition>
        <argsstring>() const</argsstring>
        <name>finiteElements</name>
        <qualifiedname>Ikarus::ResultFunction::finiteElements</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/io/resultfunction.hh" line="155" column="21" bodyfile="/__w/ikarus/ikarus/repo/ikarus/io/resultfunction.hh" bodystart="155" bodyend="155"/>
      </memberdef>
      <memberdef kind="function" id="a01616_1abae7b15565a8ede0427f301194cc1d2f" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="a01616_1a04e04c52ed60c19be684faa4767ed795" kindref="member">FERequirementType</ref> &amp;</type>
        <definition>const FERequirementType &amp; Ikarus::ResultFunction&lt; AS, RT, UserFunction &gt;::requirement</definition>
        <argsstring>() const</argsstring>
        <name>requirement</name>
        <qualifiedname>Ikarus::ResultFunction::requirement</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/io/resultfunction.hh" line="156" column="27" bodyfile="/__w/ikarus/ikarus/repo/ikarus/io/resultfunction.hh" bodystart="156" bodyend="156"/>
      </memberdef>
      <memberdef kind="function" id="a01616_1a49fe9ebcfe1af25250e6b5ccbebc4920" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="a01616_1ae02316521c3591dee26cf26d3cc1aafe" kindref="member">GridView</ref> &amp;</type>
        <definition>const GridView &amp; Ikarus::ResultFunction&lt; AS, RT, UserFunction &gt;::gridView</definition>
        <argsstring>() const</argsstring>
        <name>gridView</name>
        <qualifiedname>Ikarus::ResultFunction::gridView</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/io/resultfunction.hh" line="157" column="18" bodyfile="/__w/ikarus/ikarus/repo/ikarus/io/resultfunction.hh" bodystart="157" bodyend="157"/>
      </memberdef>
      </sectiondef>
    <requiresclause>(Concepts::FlatAssembler&lt;AS&gt; and Concepts::ResultType&lt;RT&gt;)    </requiresclause>
    <briefdescription>
<para>Wrapper to evaluate results for a vtkwriter. </para>
    </briefdescription>
    <detaileddescription>
<para>Usage: <programlisting><codeline><highlight class="comment">//<sp/>Usage<sp/>with<sp/>Dune::Vtk::VtkWriter</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>resultFunction<sp/>=<sp/>Ikarus::makeResultVtkFunction&lt;resType&gt;(assembler);</highlight></codeline>
<codeline><highlight class="normal">vtkwriter.addPointData(resultFunction);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Usage<sp/>with<sp/>the<sp/>native<sp/>Dune::VTKWriter</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>resultFunction<sp/>=<sp/>Ikarus::makeResultFunction&lt;resType&gt;(assembler);</highlight></codeline>
<codeline><highlight class="normal"><ref refid="a00414_1a269b94c2da8015cfd6132454386af550" kindref="member">vtkWriter</ref>.addVertexData(resultFunction);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>AS</parametername>
</parameternamelist>
<parameterdescription>
<para>underlying assembler (provides the finite elements and the requested results) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>RT</parametername>
</parameternamelist>
<parameterdescription>
<para>requested result type </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>UserFunction</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of the user-defined function for custom result evaluation (default is DefaultUserFunction) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>Dune::VTKFunction&lt; AS::GridView &gt;</label>
      </node>
      <node id="1">
        <label>Ikarus::ResultFunction&lt; AS, RT, UserFunction &gt;</label>
        <link refid="a01616"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>Dune::VTKFunction&lt; AS::GridView &gt;</label>
      </node>
      <node id="1">
        <label>Ikarus::ResultFunction&lt; AS, RT, UserFunction &gt;</label>
        <link refid="a01616"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/__w/ikarus/ikarus/repo/ikarus/io/resultfunction.hh" line="62" column="1" bodyfile="/__w/ikarus/ikarus/repo/ikarus/io/resultfunction.hh" bodystart="63" bodyend="163"/>
    <listofallmembers>
      <member refid="a01616_1ab7712895c055876ce68b119ee5be512b" prot="public" virt="non-virtual"><scope>Ikarus::ResultFunction</scope><name>Assembler</name></member>
      <member refid="a01616_1a8eb2ef400fdfc92075e8bd182b64d01f" prot="private" virt="non-virtual"><scope>Ikarus::ResultFunction</scope><name>assembler_</name></member>
      <member refid="a01616_1a916f6362e75f7b8f9f8e9b5acd7fb3ae" prot="public" virt="non-virtual"><scope>Ikarus::ResultFunction</scope><name>ctype</name></member>
      <member refid="a01616_1a6da0b532274ad8ed0c79e7012fbf81fd" prot="public" virt="non-virtual"><scope>Ikarus::ResultFunction</scope><name>Entity</name></member>
      <member refid="a01616_1add24f14249cce07c37dd92e3f81cf50c" prot="public" virt="non-virtual"><scope>Ikarus::ResultFunction</scope><name>evaluate</name></member>
      <member refid="a01616_1a4af4aad8174b1f9a52efc55b59ad6a3b" prot="private" virt="non-virtual"><scope>Ikarus::ResultFunction</scope><name>evaluateComponent</name></member>
      <member refid="a01616_1a593fc23022f4622064a1659c0805a44f" prot="public" virt="non-virtual"><scope>Ikarus::ResultFunction</scope><name>FEContainer</name></member>
      <member refid="a01616_1a04e04c52ed60c19be684faa4767ed795" prot="public" virt="non-virtual"><scope>Ikarus::ResultFunction</scope><name>FERequirementType</name></member>
      <member refid="a01616_1a8c19ba544b970530a3d2421eef882c72" prot="public" virt="non-virtual"><scope>Ikarus::ResultFunction</scope><name>FiniteElement</name></member>
      <member refid="a01616_1a48f27605f2ba027f331d8ba6f308d185" prot="private" virt="non-virtual"><scope>Ikarus::ResultFunction</scope><name>finiteElements</name></member>
      <member refid="a01616_1af7e853295439736348e50ee08cdced8a" prot="public" virt="non-virtual"><scope>Ikarus::ResultFunction</scope><name>griddim</name></member>
      <member refid="a01616_1ae02316521c3591dee26cf26d3cc1aafe" prot="public" virt="non-virtual"><scope>Ikarus::ResultFunction</scope><name>GridView</name></member>
      <member refid="a01616_1a49fe9ebcfe1af25250e6b5ccbebc4920" prot="private" virt="non-virtual"><scope>Ikarus::ResultFunction</scope><name>gridView</name></member>
      <member refid="a01616_1aaefbf5aea92c097023ed3d628a25f2cf" prot="public" virt="non-virtual"><scope>Ikarus::ResultFunction</scope><name>name</name></member>
      <member refid="a01616_1a29d17ce2c3a99be49e322d527b42748a" prot="public" virt="non-virtual"><scope>Ikarus::ResultFunction</scope><name>ncomps</name></member>
      <member refid="a01616_1a862c0de1f7a6e902ffc83552a2e4235e" prot="private" virt="non-virtual"><scope>Ikarus::ResultFunction</scope><name>prec_</name></member>
      <member refid="a01616_1aa2ce1b66145ac6962be8189061f42d45" prot="public" virt="non-virtual"><scope>Ikarus::ResultFunction</scope><name>precision</name></member>
      <member refid="a01616_1abae7b15565a8ede0427f301194cc1d2f" prot="private" virt="non-virtual"><scope>Ikarus::ResultFunction</scope><name>requirement</name></member>
      <member refid="a01616_1aa37e3d1ee3abfa48ae5bfd300a01c09b" prot="public" virt="non-virtual"><scope>Ikarus::ResultFunction</scope><name>ResultFunction</name></member>
      <member refid="a01616_1aa160631b8369732d5e261021848df9f7" prot="private" virt="non-virtual"><scope>Ikarus::ResultFunction</scope><name>userFunction_</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
