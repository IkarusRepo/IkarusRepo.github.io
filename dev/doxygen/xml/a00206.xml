<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="a00206" kind="file" language="C++">
    <compoundname>flatassembler.hh</compoundname>
    <includes local="no">dune/python/common/typeregistry.hh</includes>
    <includes local="no">dune/python/pybind11/eigen.h</includes>
    <includes local="no">dune/python/pybind11/pybind11.h</includes>
    <includes local="no">dune/python/pybind11/stl.h</includes>
    <includes local="no">dune/python/pybind11/stl_bind.h</includes>
    <includes refid="a00176" local="no">ikarus/assembler/dirichletbcenforcement.hh</includes>
    <includes refid="a00323" local="no">ikarus/finiteelements/ferequirements.hh</includes>
    <includes refid="a03006" local="no">ikarus/utils/basis.hh</includes>
    <includedby refid="a00209" local="no">flatassemblermanipulator.hh</includedby>
    <incdepgraph>
      <node id="7">
        <label>ikarus/assembler/dirichletbcenforcement.hh</label>
        <link refid="a00176"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>ikarus/finiteelements/ferequirements.hh</label>
        <link refid="a00323"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>ikarus/finiteelements/feresulttypes.hh</label>
        <link refid="a00314"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>ikarus/finiteelements/mechanics/materials/tags.hh</label>
        <link refid="a00242"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>flatassembler.hh</label>
        <link refid="a00206"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>ikarus/utils/basis.hh</label>
        <link refid="a03006"/>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>ikarus/utils/concepts.hh</label>
        <link refid="a03012"/>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>ikarus/utils/flatprebasis.hh</label>
        <link refid="a00053"/>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>ikarus/utils/makeenum.hh</label>
        <link refid="a00005"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>ikarus/utils/math.hh</label>
        <link refid="a00038"/>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>ikarus/utils/tensorutils.hh</label>
        <link refid="a00032"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>ikarus/utils/traits.hh</label>
        <link refid="a00011"/>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>Eigen/Core</label>
      </node>
      <node id="28">
        <label>Eigen/Dense</label>
      </node>
      <node id="29">
        <label>Eigen/Sparse</label>
      </node>
      <node id="30">
        <label>autodiff/forward/dual/dual.hpp</label>
      </node>
      <node id="24">
        <label>concepts</label>
      </node>
      <node id="40">
        <label>cstddef</label>
      </node>
      <node id="9">
        <label>dune/common/exceptions.hh</label>
      </node>
      <node id="35">
        <label>dune/common/hybridutilities.hh</label>
      </node>
      <node id="41">
        <label>dune/common/indices.hh</label>
      </node>
      <node id="22">
        <label>dune/common/promotiontraits.hh</label>
      </node>
      <node id="26">
        <label>dune/functions/functionspacebases/basistags.hh</label>
      </node>
      <node id="42">
        <label>dune/functions/functionspacebases/compositebasis.hh</label>
      </node>
      <node id="38">
        <label>dune/functions/functionspacebases/defaultglobalbasis.hh</label>
      </node>
      <node id="27">
        <label>dune/functions/functionspacebases/lagrangebasis.hh</label>
      </node>
      <node id="43">
        <label>dune/functions/functionspacebases/powerbasis.hh</label>
      </node>
      <node id="2">
        <label>dune/python/common/typeregistry.hh</label>
      </node>
      <node id="3">
        <label>dune/python/pybind11/eigen.h</label>
      </node>
      <node id="4">
        <label>dune/python/pybind11/pybind11.h</label>
      </node>
      <node id="5">
        <label>dune/python/pybind11/stl.h</label>
      </node>
      <node id="6">
        <label>dune/python/pybind11/stl_bind.h</label>
      </node>
      <node id="33">
        <label>functional</label>
      </node>
      <node id="11">
        <label>iosfwd</label>
      </node>
      <node id="12">
        <label>map</label>
      </node>
      <node id="19">
        <label>numeric</label>
      </node>
      <node id="20">
        <label>ranges</label>
      </node>
      <node id="13">
        <label>set</label>
      </node>
      <node id="34">
        <label>tuple</label>
      </node>
      <node id="17">
        <label>type_traits</label>
      </node>
      <node id="21">
        <label>unsupported/Eigen/CXX11/Tensor</label>
      </node>
      <node id="25">
        <label>utility</label>
      </node>
      <node id="14">
        <label>vector</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1">
        <label>flatassembler.hh</label>
        <link refid="a00206"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>flatassemblermanipulator.hh</label>
        <link refid="a00209"/>
      </node>
    </invincdepgraph>
    <innernamespace refid="a00396">Ikarus</innernamespace>
    <innernamespace refid="a00414">Ikarus::Python</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="a00206_1adda74d8564a01c0a9851a4379308a8b2" prot="public" static="no">
        <name>MAKE_ASSEMBLER_REGISTERY_FUNCTION</name>
        <param><defname>name</defname></param>
        <initializer>  template &lt;class Assembler, class... options&gt;                                               \
  void register##name(pybind11::handle scope, pybind11::class_&lt;Assembler, options...&gt; cls) { \
    registerFlatAssembler(scope, cls);                                                       \
  }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/python/assembler/flatassembler.hh" line="126" column="9" bodyfile="/__w/ikarus/ikarus/repo/ikarus/python/assembler/flatassembler.hh" bodystart="126" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="a00421" kindref="compound">Python</ref> bindings for assemblers. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>SPDX-FileCopyrightText:<sp/>2021-2025<sp/>The<sp/>Ikarus<sp/>Developers<sp/>mueller@ibb.uni-stuttgart.de</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>SPDX-License-Identifier:<sp/>LGPL-3.0-or-later</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;dune/python/common/typeregistry.hh&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;dune/python/pybind11/eigen.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;dune/python/pybind11/pybind11.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;dune/python/pybind11/stl.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;dune/python/pybind11/stl_bind.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="a00176" kindref="compound">ikarus/assembler/dirichletbcenforcement.hh</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="a00323" kindref="compound">ikarus/finiteelements/ferequirements.hh</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="a03006" kindref="compound">ikarus/utils/basis.hh</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21" refid="a00414" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="a00414" kindref="compound">Ikarus::Python</ref><sp/>{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Assembler,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">...<sp/>options&gt;</highlight></codeline>
<codeline lineno="41" refid="a00388_1ga87d3c6e620be5df59ba6923751caae86" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="a00388_1ga87d3c6e620be5df59ba6923751caae86" kindref="member">registerFlatAssembler</ref>(pybind11::handle<sp/>scope,<sp/>pybind11::class_&lt;Assembler,<sp/>options...&gt;<sp/>cls)<sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">pybind11::operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">_a;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">FEContainer<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Assembler::FEContainer;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">Basis<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Assembler::Basis;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">DirichletValuesType<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Assembler::DirichletValuesType;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">AffordanceCollectionType<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Assembler::AffordanceCollectionType;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">FERequirementType<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Assembler::FERequirement;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">SizeType<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Assembler::SizeType;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/>cls.def(<ref refid="a00396_1ac8243891c1b961e50a066140ab79a142" kindref="member">pybind11::init</ref>([](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pybind11::list&amp;<sp/>fes,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DirichletValuesType&amp;<sp/><ref refid="a00426_1a453691a9a22118c4736e30240481a281" kindref="member">dirichletValues</ref>)<sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*here<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>whole<sp/>vector<sp/>of<sp/>fes<sp/>takes<sp/>place!<sp/>There<sp/>is<sp/>no<sp/>way<sp/>to<sp/>prevent<sp/>this<sp/>if<sp/>we<sp/>want<sp/>that</highlight></codeline>
<codeline lineno="52"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>the<sp/>user<sp/>can<sp/>pass<sp/>native<sp/>python<sp/>lists<sp/>here,<sp/>see</highlight></codeline>
<codeline lineno="53"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>https://pybind11.readthedocs.io/en/stable/advanced/cast/stl.html<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FEContainer<sp/>fesV<sp/>=<sp/>fes.template<sp/>cast&lt;FEContainer&gt;();</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Assembler(std::move(fesV),<sp/><ref refid="a00426_1a453691a9a22118c4736e30240481a281" kindref="member">dirichletValues</ref>);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}),</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pybind11::keep_alive&lt;1,<sp/>3&gt;());</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>sparse<sp/>matrices<sp/>need<sp/>to<sp/>be<sp/>copied<sp/>to<sp/>python<sp/>therefore<sp/>we<sp/>remove<sp/>the<sp/>reference<sp/>of<sp/>the<sp/>return<sp/>type,<sp/>see<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/>https://github.com/pybind/pybind11/blob/cbb876cc7b02c5f57e715cbc2c46ead3d1fbcf79/tests/test_eigen_matrix.cpp#L332-L341</highlight></codeline>
<codeline lineno="61"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/>cls.def(</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;matrix&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>[](Assembler&amp;<sp/>self,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>FERequirementType&amp;<sp/>req,<sp/><ref refid="a00396_1a390d5311179ec61d163a29c943b3d1a0" kindref="member">Ikarus::MatrixAffordance</ref><sp/>affordance,</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="a00396_1a9f83fad9f4c149f249165a13f2370eec" kindref="member">Ikarus::DBCOption</ref><sp/>dbcOption)<sp/>-&gt;<sp/>std::remove_cvref_t&lt;</highlight><highlight class="keyword">decltype</highlight><highlight class="normal">(self.matrix(req,<sp/>affordance))&gt;<sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.matrix(req,<sp/>affordance,<sp/>dbcOption);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pybind11::return_value_policy::copy);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/>cls.def(</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;matrix&quot;</highlight><highlight class="normal">,<sp/>[](Assembler&amp;<sp/>self)<sp/>-&gt;<sp/>std::remove_cvref_t&lt;</highlight><highlight class="keyword">decltype</highlight><highlight class="normal">(self.matrix())&gt;<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.matrix();<sp/>},</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pybind11::return_value_policy::copy);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/>cls.def(</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;matrix&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>[](Assembler&amp;<sp/>self,<sp/><ref refid="a00396_1a9f83fad9f4c149f249165a13f2370eec" kindref="member">Ikarus::DBCOption</ref><sp/>dbcOption)<sp/>-&gt;<sp/>std::remove_cvref_t&lt;</highlight><highlight class="keyword">decltype</highlight><highlight class="normal">(self.matrix(dbcOption))&gt;<sp/>{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.matrix(dbcOption);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pybind11::return_value_policy::copy);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/>cls.def(</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;vector&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>[](Assembler&amp;<sp/>self,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>FERequirementType&amp;<sp/>req,<sp/><ref refid="a00396_1aab9e3e38507d1db7602bc750718c302a" kindref="member">Ikarus::VectorAffordance</ref><sp/>affordance,</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="a00396_1a9f83fad9f4c149f249165a13f2370eec" kindref="member">Ikarus::DBCOption</ref><sp/>dbcOption)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.vector(req,<sp/>affordance,<sp/>dbcOption);<sp/>},</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pybind11::return_value_policy::reference);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/>cls.def(</highlight><highlight class="stringliteral">&quot;vector&quot;</highlight><highlight class="normal">,<sp/>[](Assembler&amp;<sp/>self)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.vector();<sp/>},<sp/>pybind11::return_value_policy::reference);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/>cls.def(</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;vector&quot;</highlight><highlight class="normal">,<sp/>[](Assembler&amp;<sp/>self,<sp/><ref refid="a00396_1a9f83fad9f4c149f249165a13f2370eec" kindref="member">Ikarus::DBCOption</ref><sp/>dbcOption)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.vector(dbcOption);<sp/>},</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pybind11::return_value_policy::reference);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/>cls.def(</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;scalar&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>[](Assembler&amp;<sp/>self,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>FERequirementType&amp;<sp/>req,<sp/><ref refid="a00396_1af6f894084edd9109762b86222995ef2a" kindref="member">Ikarus::ScalarAffordance</ref><sp/>affordance)<sp/>{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.scalar(req,<sp/>affordance);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pybind11::return_value_policy::copy);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/>cls.def(</highlight><highlight class="stringliteral">&quot;scalar&quot;</highlight><highlight class="normal">,<sp/>[](Assembler&amp;<sp/>self)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.scalar();<sp/>},<sp/>pybind11::return_value_policy::copy);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/>cls.def(</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;createFullVector&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>[](Assembler&amp;<sp/>self,<sp/>Eigen::Ref&lt;const<sp/>Eigen::VectorXd&gt;<sp/>redVec)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.createFullVector(redVec);<sp/>},</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pybind11::return_value_policy::move);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/>cls.def(</highlight><highlight class="stringliteral">&quot;reducedSize&quot;</highlight><highlight class="normal">,<sp/>[](Assembler&amp;<sp/>self)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.reducedSize();<sp/>},<sp/>pybind11::return_value_policy::copy);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/>cls.def(</highlight><highlight class="stringliteral">&quot;bind&quot;</highlight><highlight class="normal">,<sp/>[](Assembler&amp;<sp/>self,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>FERequirementType&amp;<sp/>req,<sp/>AffordanceCollectionType<sp/>affordance,</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="a00396_1a9f83fad9f4c149f249165a13f2370eec" kindref="member">DBCOption</ref><sp/>dbcOption<sp/>=<sp/><ref refid="a00396_1a9f83fad9f4c149f249165a13f2370eecabbd47109890259c0127154db1af26c75" kindref="member">DBCOption::Full</ref>)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.bind(req,<sp/>affordance,<sp/>dbcOption);<sp/>});</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/>cls.def(</highlight><highlight class="stringliteral">&quot;bind&quot;</highlight><highlight class="normal">,<sp/>[](Assembler&amp;<sp/>self,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>FERequirementType&amp;<sp/>req)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.bind(req);<sp/>});</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/>cls.def(</highlight><highlight class="stringliteral">&quot;bind&quot;</highlight><highlight class="normal">,<sp/>[](Assembler&amp;<sp/>self,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>AffordanceCollectionType<sp/>affordance)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.bind(affordance);<sp/>});</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/>cls.def(</highlight><highlight class="stringliteral">&quot;bind&quot;</highlight><highlight class="normal">,<sp/>[](Assembler&amp;<sp/>self,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="a00396_1a9f83fad9f4c149f249165a13f2370eec" kindref="member">DBCOption</ref><sp/>dbcOption)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.bind(dbcOption);<sp/>});</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/>cls.def(</highlight><highlight class="stringliteral">&quot;bound&quot;</highlight><highlight class="normal">,<sp/>[](Assembler&amp;<sp/>self)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.bound();<sp/>});</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/>cls.def(</highlight><highlight class="stringliteral">&quot;boundToRequirement&quot;</highlight><highlight class="normal">,<sp/>[](Assembler&amp;<sp/>self)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.boundToRequirement();<sp/>});</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/>cls.def(</highlight><highlight class="stringliteral">&quot;boundToAffordanceCollection&quot;</highlight><highlight class="normal">,<sp/>[](Assembler&amp;<sp/>self)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.boundToAffordanceCollection();<sp/>});</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/>cls.def(</highlight><highlight class="stringliteral">&quot;boundToDBCOption&quot;</highlight><highlight class="normal">,<sp/>[](Assembler&amp;<sp/>self)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.boundToDBCOption();<sp/>});</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/>cls.def(</highlight><highlight class="stringliteral">&quot;requirement&quot;</highlight><highlight class="normal">,<sp/>[](Assembler&amp;<sp/>self)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.requirement();<sp/>});</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/>cls.def(</highlight><highlight class="stringliteral">&quot;affordanceCollection&quot;</highlight><highlight class="normal">,<sp/>[](Assembler&amp;<sp/>self)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.affordanceCollection();<sp/>});</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/>cls.def(</highlight><highlight class="stringliteral">&quot;dBCOption&quot;</highlight><highlight class="normal">,<sp/>[](Assembler&amp;<sp/>self)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.dBCOption();<sp/>});</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/>cls.def_property_readonly(</highlight><highlight class="stringliteral">&quot;size&quot;</highlight><highlight class="normal">,<sp/>[](Assembler&amp;<sp/>self)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.size();<sp/>});</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/>cls.def(</highlight><highlight class="stringliteral">&quot;__len__&quot;</highlight><highlight class="normal">,<sp/>[](Assembler&amp;<sp/>self)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.size();<sp/>});</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/>cls.def(</highlight><highlight class="stringliteral">&quot;constraintsBelow&quot;</highlight><highlight class="normal">,<sp/>[](Assembler&amp;<sp/>self,<sp/>SizeType<sp/>i)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.constraintsBelow(i);<sp/>});</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/>cls.def(</highlight><highlight class="stringliteral">&quot;isConstrained&quot;</highlight><highlight class="normal">,<sp/>[](Assembler&amp;<sp/>self,<sp/>SizeType<sp/>i)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.isConstrained(i);<sp/>});</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/>cls.def_property_readonly(</highlight><highlight class="stringliteral">&quot;gridView&quot;</highlight><highlight class="normal">,<sp/>[](Assembler&amp;<sp/>self)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.gridView();<sp/>});</highlight></codeline>
<codeline lineno="124"><highlight class="normal">}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126" refid="a00206_1adda74d8564a01c0a9851a4379308a8b2" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAKE_ASSEMBLER_REGISTERY_FUNCTION(name)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="127"><highlight class="preprocessor"><sp/><sp/>template<sp/>&lt;class<sp/>Assembler,<sp/>class...<sp/>options&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="128"><highlight class="preprocessor"><sp/><sp/>void<sp/>register##name(pybind11::handle<sp/>scope,<sp/>pybind11::class_&lt;Assembler,<sp/>options...&gt;<sp/>cls)<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="129"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>registerFlatAssembler(scope,<sp/>cls);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="130"><highlight class="preprocessor"><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132" refid="a00414_1aeab1c5f959a22f95b40b0a7576f9c896" refkind="member"><highlight class="normal"><ref refid="a00206_1adda74d8564a01c0a9851a4379308a8b2" kindref="member">MAKE_ASSEMBLER_REGISTERY_FUNCTION</ref>(<ref refid="a01303" kindref="compound">SparseFlatAssembler</ref>);</highlight></codeline>
<codeline lineno="133" refid="a00414_1a2b0faffde20690631657489c79ec809b" refkind="member"><highlight class="normal"><ref refid="a00206_1adda74d8564a01c0a9851a4379308a8b2" kindref="member">MAKE_ASSEMBLER_REGISTERY_FUNCTION</ref>(<ref refid="a01307" kindref="compound">DenseFlatAssembler</ref>);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>Ikarus::Python</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/__w/ikarus/ikarus/repo/ikarus/python/assembler/flatassembler.hh"/>
  </compounddef>
</doxygen>
