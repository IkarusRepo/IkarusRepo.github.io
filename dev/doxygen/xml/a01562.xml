<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="a01562" kind="struct" language="C++" prot="public">
    <compoundname>Ikarus::Materials::Hyperelastic</compoundname>
    <basecompoundref refid="a01622" prot="public" virt="non-virtual">Ikarus::Materials::Material&lt; Hyperelastic&lt; DEV, NoVolumetricPart &gt; &gt;</basecompoundref>
    <includes refid="a03071" local="no">ikarus/finiteelements/mechanics/materials/hyperelastic/interface.hh</includes>
    <templateparamlist>
      <param>
        <type>typename DEV</type>
      </param>
      <param>
        <type>typename VOL</type>
        <defval><ref refid="a00422_1af2ccffa80ee6f4471c03b826368f425d" kindref="member">NoVolumetricPart</ref></defval>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="a01562_1a1cbd68ec89a8e264c989c1e6a89822f8" prot="public" static="no">
        <type>typename DEV::ScalarType</type>
        <definition>using Ikarus::Materials::Hyperelastic&lt; DEV, VOL &gt;::ScalarType =  typename DEV::ScalarType</definition>
        <argsstring></argsstring>
        <name>ScalarType</name>
        <qualifiedname>Ikarus::Materials::Hyperelastic::ScalarType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/hyperelastic/interface.hh" line="39" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/hyperelastic/interface.hh" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="a01562_1ac72c18e90263b11ece94c7557cda4cc6" prot="public" static="no">
        <type>Eigen::Matrix&lt; <ref refid="a01562_1a1cbd68ec89a8e264c989c1e6a89822f8" kindref="member">ScalarType</ref>, <ref refid="a01562_1a8d74fb06339caf2930a00ea40ecac5c0" kindref="member">dim</ref>, <ref refid="a01562_1a8d74fb06339caf2930a00ea40ecac5c0" kindref="member">dim</ref> &gt;</type>
        <definition>using Ikarus::Materials::Hyperelastic&lt; DEV, VOL &gt;::StrainMatrix =  Eigen::Matrix&lt;ScalarType, dim, dim&gt;</definition>
        <argsstring></argsstring>
        <name>StrainMatrix</name>
        <qualifiedname>Ikarus::Materials::Hyperelastic::StrainMatrix</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/hyperelastic/interface.hh" line="44" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/hyperelastic/interface.hh" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="a01562_1ab2fbeebd0a285ca71e54a933ae2a8c69" prot="public" static="no">
        <type><ref refid="a01562_1ac72c18e90263b11ece94c7557cda4cc6" kindref="member">StrainMatrix</ref></type>
        <definition>using Ikarus::Materials::Hyperelastic&lt; DEV, VOL &gt;::StressMatrix =  StrainMatrix</definition>
        <argsstring></argsstring>
        <name>StressMatrix</name>
        <qualifiedname>Ikarus::Materials::Hyperelastic::StressMatrix</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/hyperelastic/interface.hh" line="45" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/hyperelastic/interface.hh" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="a01562_1afab022b92fcc88b0e57d65ee310751d2" prot="public" static="no">
        <type>Eigen::TensorFixedSize&lt; <ref refid="a01562_1a1cbd68ec89a8e264c989c1e6a89822f8" kindref="member">ScalarType</ref>, Eigen::Sizes&lt; <ref refid="a01562_1a8d74fb06339caf2930a00ea40ecac5c0" kindref="member">dim</ref>, <ref refid="a01562_1a8d74fb06339caf2930a00ea40ecac5c0" kindref="member">dim</ref>, <ref refid="a01562_1a8d74fb06339caf2930a00ea40ecac5c0" kindref="member">dim</ref>, <ref refid="a01562_1a8d74fb06339caf2930a00ea40ecac5c0" kindref="member">dim</ref> &gt; &gt;</type>
        <definition>using Ikarus::Materials::Hyperelastic&lt; DEV, VOL &gt;::MaterialTensor =  Eigen::TensorFixedSize&lt;ScalarType, Eigen::Sizes&lt;dim, dim, dim, dim&gt; &gt;</definition>
        <argsstring></argsstring>
        <name>MaterialTensor</name>
        <qualifiedname>Ikarus::Materials::Hyperelastic::MaterialTensor</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/hyperelastic/interface.hh" line="46" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/hyperelastic/interface.hh" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="a01562_1acb4984a4214a872ad37491cfd2b4c6e3" prot="public" static="no">
        <type>typename DEV::MaterialParameters</type>
        <definition>using Ikarus::Materials::Hyperelastic&lt; DEV, VOL &gt;::MaterialParametersDEV =  typename DEV::MaterialParameters</definition>
        <argsstring></argsstring>
        <name>MaterialParametersDEV</name>
        <qualifiedname>Ikarus::Materials::Hyperelastic::MaterialParametersDEV</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/hyperelastic/interface.hh" line="48" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/hyperelastic/interface.hh" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="a01562_1a93488f549ae3c5c63d7a2d9da0212b6b" prot="public" static="no">
        <type>typename VOL::MaterialParameter</type>
        <definition>using Ikarus::Materials::Hyperelastic&lt; DEV, VOL &gt;::MaterialParametersVOL =  typename VOL::MaterialParameter</definition>
        <argsstring></argsstring>
        <name>MaterialParametersVOL</name>
        <qualifiedname>Ikarus::Materials::Hyperelastic::MaterialParametersVOL</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/hyperelastic/interface.hh" line="49" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/hyperelastic/interface.hh" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="a01562_1a6993fca2600ef4701ac5ddb827f5fea9" prot="public" static="no">
        <type>std::conditional_t&lt; <ref refid="a01562_1ada824f063862cafe0415c1631a73f2fd" kindref="member">hasVolumetricPart</ref>, std::pair&lt; <ref refid="a01562_1acb4984a4214a872ad37491cfd2b4c6e3" kindref="member">MaterialParametersDEV</ref>, <ref refid="a01562_1a93488f549ae3c5c63d7a2d9da0212b6b" kindref="member">MaterialParametersVOL</ref> &gt;, <ref refid="a01562_1acb4984a4214a872ad37491cfd2b4c6e3" kindref="member">MaterialParametersDEV</ref> &gt;</type>
        <definition>using Ikarus::Materials::Hyperelastic&lt; DEV, VOL &gt;::MaterialParameters =  std::conditional_t&lt;hasVolumetricPart, std::pair&lt;MaterialParametersDEV, MaterialParametersVOL&gt;, MaterialParametersDEV&gt;</definition>
        <argsstring></argsstring>
        <name>MaterialParameters</name>
        <qualifiedname>Ikarus::Materials::Hyperelastic::MaterialParameters</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/hyperelastic/interface.hh" line="50" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/hyperelastic/interface.hh" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="a01622_1a5303817231472050f36f079bc730988b" prot="public" static="no">
        <type><ref refid="a01562" kindref="compound">Hyperelastic</ref>&lt; DEV, <ref refid="a00422_1af2ccffa80ee6f4471c03b826368f425d" kindref="member">NoVolumetricPart</ref> &gt;</type>
        <definition>using Ikarus::Materials::Material&lt; Hyperelastic&lt; DEV, NoVolumetricPart &gt;  &gt;::MaterialImpl =  Hyperelastic&lt; DEV, NoVolumetricPart &gt;</definition>
        <argsstring></argsstring>
        <name>MaterialImpl</name>
        <qualifiedname>Ikarus::Materials::Material&lt; Hyperelastic&lt; DEV, NoVolumetricPart &gt; &gt;::MaterialImpl</qualifiedname>
        <briefdescription>
<para>Type of material implementation. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/interface.hh" line="81" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/interface.hh" bodystart="81" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="a01562_1ada824f063862cafe0415c1631a73f2fd" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr bool</type>
        <definition>constexpr bool Ikarus::Materials::Hyperelastic&lt; DEV, VOL &gt;::hasVolumetricPart</definition>
        <argsstring></argsstring>
        <name>hasVolumetricPart</name>
        <qualifiedname>Ikarus::Materials::Hyperelastic::hasVolumetricPart</qualifiedname>
        <initializer>= not std::same_as&lt;VOL, <ref refid="a00422_1af2ccffa80ee6f4471c03b826368f425d" kindref="member">NoVolumetricPart</ref>&gt;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/hyperelastic/interface.hh" line="40" column="25" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/hyperelastic/interface.hh" bodystart="40" bodyend="-1"/>
        <referencedby refid="a01562_1ac9eb8b0d10f4822e4d02deb3562415e7" compoundref="a03071" startline="89" endline="94">Ikarus::Materials::Hyperelastic&lt; DEV, VOL &gt;::materialParametersImpl</referencedby>
        <referencedby refid="a01562_1af539f27afaa79241eb50e3a8a85504d3" compoundref="a03071" startline="64" endline="69">Ikarus::Materials::Hyperelastic&lt; DEV, VOL &gt;::nameImpl</referencedby>
      </memberdef>
      <memberdef kind="variable" id="a01562_1ad470952ef099e9eed282135b0313389d" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr bool</type>
        <definition>constexpr bool Ikarus::Materials::Hyperelastic&lt; DEV, VOL &gt;::isAutoDiff</definition>
        <argsstring></argsstring>
        <name>isAutoDiff</name>
        <qualifiedname>Ikarus::Materials::Hyperelastic::isAutoDiff</qualifiedname>
        <initializer>= Concepts::AutodiffScalar&lt;<ref refid="a01562_1a1cbd68ec89a8e264c989c1e6a89822f8" kindref="member">ScalarType</ref>&gt;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/hyperelastic/interface.hh" line="41" column="25" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/hyperelastic/interface.hh" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="a01562_1a8d74fb06339caf2930a00ea40ecac5c0" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr int</type>
        <definition>constexpr int Ikarus::Materials::Hyperelastic&lt; DEV, VOL &gt;::dim</definition>
        <argsstring></argsstring>
        <name>dim</name>
        <qualifiedname>Ikarus::Materials::Hyperelastic::dim</qualifiedname>
        <initializer>= 3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/hyperelastic/interface.hh" line="43" column="24" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/hyperelastic/interface.hh" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="a01562_1aea27e3ad0a717064f2a19d0b806e9adc" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr auto</type>
        <definition>constexpr auto Ikarus::Materials::Hyperelastic&lt; DEV, VOL &gt;::strainTag</definition>
        <argsstring></argsstring>
        <name>strainTag</name>
        <qualifiedname>Ikarus::Materials::Hyperelastic::strainTag</qualifiedname>
        <initializer>= <ref refid="a00400_1ggacef1e451de1a99845c59d7391064fb8faea40a9960a7a89c4f366beeab85d07d2" kindref="member">StrainTags::rightCauchyGreenTensor</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/hyperelastic/interface.hh" line="54" column="25" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/hyperelastic/interface.hh" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="a01562_1abd5c28c042abbccda39cbe647270498d" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr auto</type>
        <definition>constexpr auto Ikarus::Materials::Hyperelastic&lt; DEV, VOL &gt;::stressTag</definition>
        <argsstring></argsstring>
        <name>stressTag</name>
        <qualifiedname>Ikarus::Materials::Hyperelastic::stressTag</qualifiedname>
        <initializer>= <ref refid="a00400_1gga70b4ce43c53cc5e949d49919f437501eab13248d68ac5516c015337b68346fc21" kindref="member">StressTags::PK2</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/hyperelastic/interface.hh" line="55" column="25" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/hyperelastic/interface.hh" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="a01562_1a08a9a2762d170c489979438257467543" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr auto</type>
        <definition>constexpr auto Ikarus::Materials::Hyperelastic&lt; DEV, VOL &gt;::tangentModuliTag</definition>
        <argsstring></argsstring>
        <name>tangentModuliTag</name>
        <qualifiedname>Ikarus::Materials::Hyperelastic::tangentModuliTag</qualifiedname>
        <initializer>= <ref refid="a00400_1gga05ac785124262c1e323d2f937d520a1bad92a8333dd3ccb895cc65f7455b71206" kindref="member">TangentModuliTags::Material</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/hyperelastic/interface.hh" line="56" column="25" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/hyperelastic/interface.hh" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="a01562_1a07c2fbb17a5264b852a856a314e604bc" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr bool</type>
        <definition>constexpr bool Ikarus::Materials::Hyperelastic&lt; DEV, VOL &gt;::energyAcceptsVoigt</definition>
        <argsstring></argsstring>
        <name>energyAcceptsVoigt</name>
        <qualifiedname>Ikarus::Materials::Hyperelastic::energyAcceptsVoigt</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/hyperelastic/interface.hh" line="57" column="25" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/hyperelastic/interface.hh" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="a01562_1ab57d932294230ce993122bdd800cf77f" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr bool</type>
        <definition>constexpr bool Ikarus::Materials::Hyperelastic&lt; DEV, VOL &gt;::stressToVoigt</definition>
        <argsstring></argsstring>
        <name>stressToVoigt</name>
        <qualifiedname>Ikarus::Materials::Hyperelastic::stressToVoigt</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/hyperelastic/interface.hh" line="58" column="25" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/hyperelastic/interface.hh" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="a01562_1a06ee513dc5ee636e6463ef1eae39a587" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr bool</type>
        <definition>constexpr bool Ikarus::Materials::Hyperelastic&lt; DEV, VOL &gt;::stressAcceptsVoigt</definition>
        <argsstring></argsstring>
        <name>stressAcceptsVoigt</name>
        <qualifiedname>Ikarus::Materials::Hyperelastic::stressAcceptsVoigt</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/hyperelastic/interface.hh" line="59" column="25" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/hyperelastic/interface.hh" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="a01562_1af34b26052c843ca9b2ee03b8e451d0e6" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr bool</type>
        <definition>constexpr bool Ikarus::Materials::Hyperelastic&lt; DEV, VOL &gt;::moduliToVoigt</definition>
        <argsstring></argsstring>
        <name>moduliToVoigt</name>
        <qualifiedname>Ikarus::Materials::Hyperelastic::moduliToVoigt</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/hyperelastic/interface.hh" line="60" column="25" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/hyperelastic/interface.hh" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="a01562_1a5f11f770473cf58e7934e261f257cfc0" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr bool</type>
        <definition>constexpr bool Ikarus::Materials::Hyperelastic&lt; DEV, VOL &gt;::moduliAcceptsVoigt</definition>
        <argsstring></argsstring>
        <name>moduliAcceptsVoigt</name>
        <qualifiedname>Ikarus::Materials::Hyperelastic::moduliAcceptsVoigt</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/hyperelastic/interface.hh" line="61" column="25" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/hyperelastic/interface.hh" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="a01562_1ac281a67b1069e3f6c5fe17942e8b6738" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr double</type>
        <definition>constexpr double Ikarus::Materials::Hyperelastic&lt; DEV, VOL &gt;::derivativeFactorImpl</definition>
        <argsstring></argsstring>
        <name>derivativeFactorImpl</name>
        <qualifiedname>Ikarus::Materials::Hyperelastic::derivativeFactorImpl</qualifiedname>
        <initializer>= 2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/hyperelastic/interface.hh" line="62" column="27" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/hyperelastic/interface.hh" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="a01622_1af50dfddadfe829082a56eb804bfb7980" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr bool</type>
        <definition>constexpr bool Ikarus::Materials::Material&lt; Hyperelastic&lt; DEV, NoVolumetricPart &gt;  &gt;::isReduced</definition>
        <argsstring></argsstring>
        <name>isReduced</name>
        <qualifiedname>Ikarus::Materials::Material&lt; Hyperelastic&lt; DEV, NoVolumetricPart &gt; &gt;::isReduced</qualifiedname>
        <briefdescription>
<para>Static constant for determining if the material has vanishing stress or strain components (is reduced). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/interface.hh" line="86" column="25" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/interface.hh" bodystart="86" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="a01622_1ae9e08c2d0dc02321b8a4d81d4052f63f" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr double</type>
        <definition>constexpr double Ikarus::Materials::Material&lt; Hyperelastic&lt; DEV, NoVolumetricPart &gt;  &gt;::derivativeFactor</definition>
        <argsstring></argsstring>
        <name>derivativeFactor</name>
        <qualifiedname>Ikarus::Materials::Material&lt; Hyperelastic&lt; DEV, NoVolumetricPart &gt; &gt;::derivativeFactor</qualifiedname>
        <briefdescription>
<para>This factor denotes the differences between the returned stresses and moduli and the passed strain. </para>
        </briefdescription>
        <detaileddescription>
<para>For neoHooke the inserted quantity is $C$ the Green-Lagrangian strain tensor, the function relation between the energy and the stresses is $S = 1 \dfrac{\partial\psi(E)}{\partial E}$. This factor is the pre factor, which is the difference to the actual derivative, which is written here </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/interface.hh" line="122" column="27" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/interface.hh" bodystart="122" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="a01562_1a86203ce138d5218be92336e27cec6a49" prot="private" static="no" mutable="no">
        <type>DEV</type>
        <definition>DEV Ikarus::Materials::Hyperelastic&lt; DEV, VOL &gt;::dev_</definition>
        <argsstring></argsstring>
        <name>dev_</name>
        <qualifiedname>Ikarus::Materials::Hyperelastic::dev_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/hyperelastic/interface.hh" line="168" column="7" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/hyperelastic/interface.hh" bodystart="168" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="a01562_1ab838ea785d53523b9f7a3a5fd9d01d16" prot="private" static="no" mutable="no">
        <type>VOL</type>
        <definition>VOL Ikarus::Materials::Hyperelastic&lt; DEV, VOL &gt;::vol_</definition>
        <argsstring></argsstring>
        <name>vol_</name>
        <qualifiedname>Ikarus::Materials::Hyperelastic::vol_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/hyperelastic/interface.hh" line="169" column="7" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/hyperelastic/interface.hh" bodystart="169" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="a01562_1af539f27afaa79241eb50e3a8a85504d3" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr std::string</type>
        <definition>static constexpr std::string Ikarus::Materials::Hyperelastic&lt; DEV, VOL &gt;::nameImpl</definition>
        <argsstring>() noexcept</argsstring>
        <name>nameImpl</name>
        <qualifiedname>Ikarus::Materials::Hyperelastic::nameImpl</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/hyperelastic/interface.hh" line="64" column="33" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/hyperelastic/interface.hh" bodystart="64" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="a01622_1a03ae10e8656beed2aa69c8a9d27907e5" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr std::string</type>
        <definition>static constexpr std::string Ikarus::Materials::Material&lt; Hyperelastic&lt; DEV, NoVolumetricPart &gt;  &gt;::name</definition>
        <argsstring>()</argsstring>
        <name>name</name>
        <qualifiedname>Ikarus::Materials::Material&lt; Hyperelastic&lt; DEV, NoVolumetricPart &gt; &gt;::name</qualifiedname>
        <briefdescription>
<para>Get the name of the implemented material. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Name of the material. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/interface.hh" line="108" column="33" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/interface.hh" bodystart="108" bodyend="108"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="a01562_1a034c61ea845cb6ddb2ae91971838078f" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Ikarus::Materials::Hyperelastic&lt; DEV, VOL &gt;::Hyperelastic</definition>
        <argsstring>(const DEV &amp;dev)</argsstring>
        <name>Hyperelastic</name>
        <qualifiedname>Ikarus::Materials::Hyperelastic::Hyperelastic</qualifiedname>
        <param>
          <type>const DEV &amp;</type>
          <declname>dev</declname>
        </param>
    <requiresclause>(not hasVolumetricPart)    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/hyperelastic/interface.hh" line="71" column="12" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/hyperelastic/interface.hh" bodystart="71" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="a01562_1ae0ada67dda859afd29cdc7afda47f4ea" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Ikarus::Materials::Hyperelastic&lt; DEV, VOL &gt;::Hyperelastic</definition>
        <argsstring>(const DEV &amp;dev, const VOL &amp;vol)</argsstring>
        <name>Hyperelastic</name>
        <qualifiedname>Ikarus::Materials::Hyperelastic::Hyperelastic</qualifiedname>
        <param>
          <type>const DEV &amp;</type>
          <declname>dev</declname>
        </param>
        <param>
          <type>const VOL &amp;</type>
          <declname>vol</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/hyperelastic/interface.hh" line="76" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/hyperelastic/interface.hh" bodystart="76" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="a01562_1a5693042bcd5d51d3218317685f74f4d0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const DEV &amp;</type>
        <definition>const DEV &amp; Ikarus::Materials::Hyperelastic&lt; DEV, VOL &gt;::deviatoricFunction</definition>
        <argsstring>() const</argsstring>
        <name>deviatoricFunction</name>
        <qualifiedname>Ikarus::Materials::Hyperelastic::deviatoricFunction</qualifiedname>
        <briefdescription>
<para>Returns the deviatoric function. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/hyperelastic/interface.hh" line="81" column="13" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/hyperelastic/interface.hh" bodystart="81" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="a01562_1adc4df3aa29c4a6c70198116882a65c24" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const VOL &amp;</type>
        <definition>const VOL &amp; Ikarus::Materials::Hyperelastic&lt; DEV, VOL &gt;::volumetricFunction</definition>
        <argsstring>() const</argsstring>
        <name>volumetricFunction</name>
        <qualifiedname>Ikarus::Materials::Hyperelastic::volumetricFunction</qualifiedname>
        <briefdescription>
<para>Returns the volumetric function. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/hyperelastic/interface.hh" line="84" column="13" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/hyperelastic/interface.hh" bodystart="84" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="a01562_1ac9eb8b0d10f4822e4d02deb3562415e7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="a01562_1a6993fca2600ef4701ac5ddb827f5fea9" kindref="member">MaterialParameters</ref></type>
        <definition>const MaterialParameters Ikarus::Materials::Hyperelastic&lt; DEV, VOL &gt;::materialParametersImpl</definition>
        <argsstring>() const</argsstring>
        <name>materialParametersImpl</name>
        <qualifiedname>Ikarus::Materials::Hyperelastic::materialParametersImpl</qualifiedname>
        <briefdescription>
<para>Returns the material parameters stored in the deviatoric part of the material. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/hyperelastic/interface.hh" line="89" column="28" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/hyperelastic/interface.hh" bodystart="89" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="a01562_1ab6b7e0732166247942ede24e025a3551" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Derived</type>
          </param>
        </templateparamlist>
        <type><ref refid="a01562_1a1cbd68ec89a8e264c989c1e6a89822f8" kindref="member">ScalarType</ref></type>
        <definition>ScalarType Ikarus::Materials::Hyperelastic&lt; DEV, VOL &gt;::storedEnergyImpl</definition>
        <argsstring>(const Eigen::MatrixBase&lt; Derived &gt; &amp;C) const</argsstring>
        <name>storedEnergyImpl</name>
        <qualifiedname>Ikarus::Materials::Hyperelastic::storedEnergyImpl</qualifiedname>
        <param>
          <type>const Eigen::MatrixBase&lt; Derived &gt; &amp;</type>
          <declname>C</declname>
        </param>
        <briefdescription>
<para>Computes the total stored energy in the <ref refid="a01562" kindref="compound">Hyperelastic</ref> material model. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Derived</parametername>
</parameternamelist>
<parameterdescription>
<para>The derived type of the input matrix. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>C</parametername>
</parameternamelist>
<parameterdescription>
<para>The right Cauchy-Green tensor. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>ScalarType The stored energy. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/hyperelastic/interface.hh" line="103" column="14" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/hyperelastic/interface.hh" bodystart="103" bodyend="110"/>
      </memberdef>
      <memberdef kind="function" id="a01562_1a7fc4c5a0220e307632751ef4c063f00f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>bool</type>
            <declname>voigt</declname>
            <defname>voigt</defname>
          </param>
          <param>
            <type>typename Derived</type>
          </param>
        </templateparamlist>
        <type><ref refid="a01562_1ab2fbeebd0a285ca71e54a933ae2a8c69" kindref="member">StressMatrix</ref></type>
        <definition>StressMatrix Ikarus::Materials::Hyperelastic&lt; DEV, VOL &gt;::stressesImpl</definition>
        <argsstring>(const Eigen::MatrixBase&lt; Derived &gt; &amp;C) const</argsstring>
        <name>stressesImpl</name>
        <qualifiedname>Ikarus::Materials::Hyperelastic::stressesImpl</qualifiedname>
        <param>
          <type>const Eigen::MatrixBase&lt; Derived &gt; &amp;</type>
          <declname>C</declname>
        </param>
        <briefdescription>
<para>Computes the stresses in the <ref refid="a01562" kindref="compound">Hyperelastic</ref> material model. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>voigt</parametername>
</parameternamelist>
<parameterdescription>
<para>A boolean indicating whether to return stresses in Voigt notation. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Derived</parametername>
</parameternamelist>
<parameterdescription>
<para>The derived type of the input matrix. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>C</parametername>
</parameternamelist>
<parameterdescription>
<para>The right Cauchy-Green tensor. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>StressMatrix The stresses. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/hyperelastic/interface.hh" line="120" column="16" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/hyperelastic/interface.hh" bodystart="120" bodyend="132"/>
      </memberdef>
      <memberdef kind="function" id="a01562_1ab14575e4a0ac4e7c20502c197d8ec4b8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>bool</type>
            <declname>voigt</declname>
            <defname>voigt</defname>
          </param>
          <param>
            <type>typename Derived</type>
          </param>
        </templateparamlist>
        <type><ref refid="a01562_1afab022b92fcc88b0e57d65ee310751d2" kindref="member">MaterialTensor</ref></type>
        <definition>MaterialTensor Ikarus::Materials::Hyperelastic&lt; DEV, VOL &gt;::tangentModuliImpl</definition>
        <argsstring>(const Eigen::MatrixBase&lt; Derived &gt; &amp;C) const</argsstring>
        <name>tangentModuliImpl</name>
        <qualifiedname>Ikarus::Materials::Hyperelastic::tangentModuliImpl</qualifiedname>
        <param>
          <type>const Eigen::MatrixBase&lt; Derived &gt; &amp;</type>
          <declname>C</declname>
        </param>
        <briefdescription>
<para>Computes the tangent moduli in the <ref refid="a01562" kindref="compound">Hyperelastic</ref> material model. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>voigt</parametername>
</parameternamelist>
<parameterdescription>
<para>A boolean indicating whether to return tangent moduli in Voigt notation. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Derived</parametername>
</parameternamelist>
<parameterdescription>
<para>The derived type of the input matrix. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>C</parametername>
</parameternamelist>
<parameterdescription>
<para>The right Cauchy-Green tensor. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>MaterialTensor The tangent moduli. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/hyperelastic/interface.hh" line="142" column="18" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/hyperelastic/interface.hh" bodystart="142" bodyend="154"/>
      </memberdef>
      <memberdef kind="function" id="a01562_1a93404b73ee63e850398a668fe0f7e8ba" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename STO</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto Ikarus::Materials::Hyperelastic&lt; DEV, VOL &gt;::rebind</definition>
        <argsstring>() const</argsstring>
        <name>rebind</name>
        <qualifiedname>Ikarus::Materials::Hyperelastic::rebind</qualifiedname>
        <briefdescription>
<para>Rebinds the material to a different scalar type. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>STO</parametername>
</parameternamelist>
<parameterdescription>
<para>The target scalar type. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Hyperelastic&lt;ScalarTypeOther&gt; The rebound <ref refid="a01562" kindref="compound">Hyperelastic</ref> material. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/hyperelastic/interface.hh" line="162" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/hyperelastic/interface.hh" bodystart="162" bodyend="165"/>
      </memberdef>
      <memberdef kind="function" id="a01622_1a2e6191f96be90789c574f58f268f5aea" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr const <ref refid="a01622_1a5303817231472050f36f079bc730988b" kindref="member">MaterialImpl</ref> &amp;</type>
        <definition>constexpr const MaterialImpl &amp; Ikarus::Materials::Material&lt; Hyperelastic&lt; DEV, NoVolumetricPart &gt;  &gt;::impl</definition>
        <argsstring>() const</argsstring>
        <name>impl</name>
        <qualifiedname>Ikarus::Materials::Material&lt; Hyperelastic&lt; DEV, NoVolumetricPart &gt; &gt;::impl</qualifiedname>
        <briefdescription>
<para>Const accessor to the underlying material (CRTP). </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Const reference to the underlying material. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/interface.hh" line="94" column="32" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/interface.hh" bodystart="94" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="a01622_1ae6ac28e09154cef841393f09f76d680b" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr <ref refid="a01622_1a5303817231472050f36f079bc730988b" kindref="member">MaterialImpl</ref> &amp;</type>
        <definition>constexpr MaterialImpl &amp; Ikarus::Materials::Material&lt; Hyperelastic&lt; DEV, NoVolumetricPart &gt;  &gt;::impl</definition>
        <argsstring>()</argsstring>
        <name>impl</name>
        <qualifiedname>Ikarus::Materials::Material&lt; Hyperelastic&lt; DEV, NoVolumetricPart &gt; &gt;::impl</qualifiedname>
        <briefdescription>
<para>Accessor to the underlying material (CRTP). </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Reference to the underlying material. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/interface.hh" line="101" column="26" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/interface.hh" bodystart="101" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="a01622_1a0b4a203f259da74328dacbcc405c0c22" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto Ikarus::Materials::Material&lt; Hyperelastic&lt; DEV, NoVolumetricPart &gt;  &gt;::materialParameters</definition>
        <argsstring>() const</argsstring>
        <name>materialParameters</name>
        <qualifiedname>Ikarus::Materials::Material&lt; Hyperelastic&lt; DEV, NoVolumetricPart &gt; &gt;::materialParameters</qualifiedname>
        <briefdescription>
<para>Returns the material parameters stored in the implemented material. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Material parameter. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/interface.hh" line="114" column="9" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/interface.hh" bodystart="114" bodyend="114"/>
      </memberdef>
      <memberdef kind="function" id="a01622_1a8d6370e3d198662f4222a0b94e2d6703" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto Ikarus::Materials::Material&lt; Hyperelastic&lt; DEV, NoVolumetricPart &gt;  &gt;::storedEnergy</definition>
        <argsstring>(const Eigen::MatrixBase&lt; Derived &gt; &amp;Eraw) const</argsstring>
        <name>storedEnergy</name>
        <qualifiedname>Ikarus::Materials::Material&lt; Hyperelastic&lt; DEV, NoVolumetricPart &gt; &gt;::storedEnergy</qualifiedname>
        <param>
          <type>const Eigen::MatrixBase&lt; Derived &gt; &amp;</type>
          <declname>Eraw</declname>
        </param>
        <briefdescription>
<para>Return the stored potential energy of the material. </para>
        </briefdescription>
        <detaileddescription>
<para>This function return the free Helmholtz energy of the material</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>tag</parametername>
</parameternamelist>
<parameterdescription>
<para>Strain tag indicating which strain tensor components are passed. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Derived</parametername>
</parameternamelist>
<parameterdescription>
<para>The underlying <ref refid="a00427" kindref="compound">Eigen</ref> type. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Eraw</parametername>
</parameternamelist>
<parameterdescription>
<para>The strain tensor components passed in Voigt notation or matrix notation. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Scalar return of stored energy. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/interface.hh" line="136" column="9" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/interface.hh" bodystart="136" bodyend="147"/>
      </memberdef>
      <memberdef kind="function" id="a01622_1a8a68e052cade23285d1a28d1e08845f5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto Ikarus::Materials::Material&lt; Hyperelastic&lt; DEV, NoVolumetricPart &gt;  &gt;::stresses</definition>
        <argsstring>(const Eigen::MatrixBase&lt; Derived &gt; &amp;Eraw) const</argsstring>
        <name>stresses</name>
        <qualifiedname>Ikarus::Materials::Material&lt; Hyperelastic&lt; DEV, NoVolumetricPart &gt; &gt;::stresses</qualifiedname>
        <param>
          <type>const Eigen::MatrixBase&lt; Derived &gt; &amp;</type>
          <declname>Eraw</declname>
        </param>
        <briefdescription>
<para>Get the stresses of the material. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>tag</parametername>
</parameternamelist>
<parameterdescription>
<para>Strain tag indicating which strain tensor components are passed. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>voigt</parametername>
</parameternamelist>
<parameterdescription>
<para>Boolean indicating whether to return Voigt-shaped result. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Derived</parametername>
</parameternamelist>
<parameterdescription>
<para>The underlying <ref refid="a00427" kindref="compound">Eigen</ref> type. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Eraw</parametername>
</parameternamelist>
<parameterdescription>
<para>The strain tensor components passed in Voigt notation or matrix notation. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Vectorial or Matrix return of stresses. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/interface.hh" line="160" column="9" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/interface.hh" bodystart="160" bodyend="168"/>
      </memberdef>
      <memberdef kind="function" id="a01622_1a7a97d64507fd1ce0c14e919edb8a639b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto Ikarus::Materials::Material&lt; Hyperelastic&lt; DEV, NoVolumetricPart &gt;  &gt;::tangentModuli</definition>
        <argsstring>(const Eigen::MatrixBase&lt; Derived &gt; &amp;Eraw) const</argsstring>
        <name>tangentModuli</name>
        <qualifiedname>Ikarus::Materials::Material&lt; Hyperelastic&lt; DEV, NoVolumetricPart &gt; &gt;::tangentModuli</qualifiedname>
        <param>
          <type>const Eigen::MatrixBase&lt; Derived &gt; &amp;</type>
          <declname>Eraw</declname>
        </param>
        <briefdescription>
<para>Get the tangentModuli of the material. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>tag</parametername>
</parameternamelist>
<parameterdescription>
<para>Strain tag indicating which strain tensor components are passed. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>voigt</parametername>
</parameternamelist>
<parameterdescription>
<para>Boolean indicating whether to return Voigt-shaped result. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Derived</parametername>
</parameternamelist>
<parameterdescription>
<para>The underlying <ref refid="a00427" kindref="compound">Eigen</ref> type. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Eraw</parametername>
</parameternamelist>
<parameterdescription>
<para>The strain tensor components passed in Voigt notation or matrix notation. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Tangent moduli in Voigt notation or as fourth-order tensor. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/interface.hh" line="181" column="9" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/interface.hh" bodystart="181" bodyend="189"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="a01562_1a316cf07baa31b15a08099b94ea6ac065" prot="private" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>static constexpr auto Ikarus::Materials::Hyperelastic&lt; DEV, VOL &gt;::dimensionRange</definition>
        <argsstring>()</argsstring>
        <name>dimensionRange</name>
        <qualifiedname>Ikarus::Materials::Hyperelastic::dimensionRange</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/hyperelastic/interface.hh" line="171" column="32" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/hyperelastic/interface.hh" bodystart="171" bodyend="171"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="a01562_1ae8df79e793345a2d9f09c731070f61bc" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ST</type>
          </param>
        </templateparamlist>
        <type>Eigen::Matrix&lt; ST, <ref refid="a01562_1a8d74fb06339caf2930a00ea40ecac5c0" kindref="member">dim</ref>, <ref refid="a01562_1a8d74fb06339caf2930a00ea40ecac5c0" kindref="member">dim</ref> &gt;</type>
        <definition>Eigen::Matrix&lt; ST, dim, dim &gt; Ikarus::Materials::Hyperelastic&lt; DEV, VOL &gt;::transformDeviatoricStresses</definition>
        <argsstring>(const Eigen::Vector&lt; ST, dim &gt; &amp;principalStress, const Eigen::Matrix&lt; ST, dim, dim &gt; &amp;N) const</argsstring>
        <name>transformDeviatoricStresses</name>
        <qualifiedname>Ikarus::Materials::Hyperelastic::transformDeviatoricStresses</qualifiedname>
        <param>
          <type>const Eigen::Vector&lt; ST, <ref refid="a01562_1a8d74fb06339caf2930a00ea40ecac5c0" kindref="member">dim</ref> &gt; &amp;</type>
          <declname>principalStress</declname>
        </param>
        <param>
          <type>const Eigen::Matrix&lt; ST, <ref refid="a01562_1a8d74fb06339caf2930a00ea40ecac5c0" kindref="member">dim</ref>, <ref refid="a01562_1a8d74fb06339caf2930a00ea40ecac5c0" kindref="member">dim</ref> &gt; &amp;</type>
          <declname>N</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/hyperelastic/interface.hh" line="174" column="17" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/hyperelastic/interface.hh" bodystart="174" bodyend="177"/>
      </memberdef>
      <memberdef kind="function" id="a01562_1a86da92db33324f584ce1f866e69e0487" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ST</type>
          </param>
        </templateparamlist>
        <type>Eigen::Matrix&lt; ST, <ref refid="a01562_1a8d74fb06339caf2930a00ea40ecac5c0" kindref="member">dim</ref>, <ref refid="a01562_1a8d74fb06339caf2930a00ea40ecac5c0" kindref="member">dim</ref> &gt;</type>
        <definition>Eigen::Matrix&lt; ST, dim, dim &gt; Ikarus::Materials::Hyperelastic&lt; DEV, VOL &gt;::transformVolumetricStresses</definition>
        <argsstring>(ST Uprime, const auto &amp;C, ST J) const</argsstring>
        <name>transformVolumetricStresses</name>
        <qualifiedname>Ikarus::Materials::Hyperelastic::transformVolumetricStresses</qualifiedname>
        <param>
          <type>ST</type>
          <declname>Uprime</declname>
        </param>
        <param>
          <type>const auto &amp;</type>
          <declname>C</declname>
        </param>
        <param>
          <type>ST</type>
          <declname>J</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/hyperelastic/interface.hh" line="180" column="17" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/hyperelastic/interface.hh" bodystart="180" bodyend="182"/>
      </memberdef>
      <memberdef kind="function" id="a01562_1a66123a60e8e8f5768b2d4fa5ebba6c76" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ST</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto Ikarus::Materials::Hyperelastic&lt; DEV, VOL &gt;::transformDeviatoricTangentModuli</definition>
        <argsstring>(const Eigen::TensorFixedSize&lt; ST, Eigen::Sizes&lt; dim, dim, dim, dim &gt; &gt; &amp;L, const Eigen::Matrix&lt; ST, dim, dim &gt; &amp;N) const</argsstring>
        <name>transformDeviatoricTangentModuli</name>
        <qualifiedname>Ikarus::Materials::Hyperelastic::transformDeviatoricTangentModuli</qualifiedname>
        <param>
          <type>const Eigen::TensorFixedSize&lt; ST, Eigen::Sizes&lt; <ref refid="a01562_1a8d74fb06339caf2930a00ea40ecac5c0" kindref="member">dim</ref>, <ref refid="a01562_1a8d74fb06339caf2930a00ea40ecac5c0" kindref="member">dim</ref>, <ref refid="a01562_1a8d74fb06339caf2930a00ea40ecac5c0" kindref="member">dim</ref>, <ref refid="a01562_1a8d74fb06339caf2930a00ea40ecac5c0" kindref="member">dim</ref> &gt; &gt; &amp;</type>
          <declname>L</declname>
        </param>
        <param>
          <type>const Eigen::Matrix&lt; ST, <ref refid="a01562_1a8d74fb06339caf2930a00ea40ecac5c0" kindref="member">dim</ref>, <ref refid="a01562_1a8d74fb06339caf2930a00ea40ecac5c0" kindref="member">dim</ref> &gt; &amp;</type>
          <declname>N</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/hyperelastic/interface.hh" line="185" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/hyperelastic/interface.hh" bodystart="185" bodyend="209"/>
      </memberdef>
      <memberdef kind="function" id="a01562_1a0067f1fe2524e6b9cd80eeffaa5b40c2" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ST</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto Ikarus::Materials::Hyperelastic&lt; DEV, VOL &gt;::transformVolumetricTangentModuli</definition>
        <argsstring>(const ST &amp;Uprime, const ST &amp;Uprimeprime, const auto &amp;C, ST J) const</argsstring>
        <name>transformVolumetricTangentModuli</name>
        <qualifiedname>Ikarus::Materials::Hyperelastic::transformVolumetricTangentModuli</qualifiedname>
        <param>
          <type>const ST &amp;</type>
          <declname>Uprime</declname>
        </param>
        <param>
          <type>const ST &amp;</type>
          <declname>Uprimeprime</declname>
        </param>
        <param>
          <type>const auto &amp;</type>
          <declname>C</declname>
        </param>
        <param>
          <type>ST</type>
          <declname>J</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/hyperelastic/interface.hh" line="212" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/hyperelastic/interface.hh" bodystart="212" bodyend="222"/>
      </memberdef>
      <memberdef kind="function" id="a01562_1ad7f29005709fe091d3badf631981af3d" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Derived</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto Ikarus::Materials::Hyperelastic&lt; DEV, VOL &gt;::principalStretches</definition>
        <argsstring>(const Eigen::MatrixBase&lt; Derived &gt; &amp;Craw, int options=Eigen::ComputeEigenvectors) const</argsstring>
        <name>principalStretches</name>
        <qualifiedname>Ikarus::Materials::Hyperelastic::principalStretches</qualifiedname>
        <param>
          <type>const Eigen::MatrixBase&lt; Derived &gt; &amp;</type>
          <declname>Craw</declname>
        </param>
        <param>
          <type>int</type>
          <declname>options</declname>
          <defval>Eigen::ComputeEigenvectors</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/hyperelastic/interface.hh" line="225" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/hyperelastic/interface.hh" bodystart="225" bodyend="228"/>
      </memberdef>
      <memberdef kind="function" id="a01562_1a301f95cfcdc11959b0002cc63f20d7fa" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Derived</type>
          </param>
          <param>
            <type>typename ST</type>
          </param>
        </templateparamlist>
        <type>ST</type>
        <definition>ST Ikarus::Materials::Hyperelastic&lt; DEV, VOL &gt;::detF</definition>
        <argsstring>(const Eigen::MatrixBase&lt; Derived &gt; &amp;C, const Eigen::Vector&lt; ST, 3 &gt; &amp;lambda) const</argsstring>
        <name>detF</name>
        <qualifiedname>Ikarus::Materials::Hyperelastic::detF</qualifiedname>
        <param>
          <type>const Eigen::MatrixBase&lt; Derived &gt; &amp;</type>
          <declname>C</declname>
        </param>
        <param>
          <type>const Eigen::Vector&lt; ST, 3 &gt; &amp;</type>
          <declname>lambda</declname>
        </param>
        <briefdescription>
<para>A helper function to determine the determinant of the deformation gradient F. </para>
        </briefdescription>
        <detaileddescription>
<para>According to <ulink url="https://eigen.tuxfamily.org/dox/Tridiagonalization_8h_source.html">https://eigen.tuxfamily.org/dox/Tridiagonalization_8h_source.html</ulink> (line 477), which is used while computing the eigenvalues to obtain the prinipal stretches, if the (2,0) entry of a matrix is zero, an early exit is performed. Even though this doesn&apos;t affect the results in the case of doubles, using an autodiff type leads to problems as information is lost. Alternatively, using <computeroutput>computeDirect()</computeroutput> to compute the eigenvalues leads to NaNs as sqrt of zero is being taken. Therefore, if autodiff is used, the determinant is computed explicitly from the right Cauchy-Green tensor C. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/hyperelastic/interface.hh" line="241" column="6" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/hyperelastic/interface.hh" bodystart="241" bodyend="250"/>
      </memberdef>
      <memberdef kind="function" id="a01562_1a326990588cb1e1d4f153d945f2c6d5d7" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Derived</type>
          </param>
          <param>
            <type>typename ST</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto Ikarus::Materials::Hyperelastic&lt; DEV, VOL &gt;::deviatoricEnergy</definition>
        <argsstring>(const Eigen::MatrixBase&lt; Derived &gt; &amp;C, const Eigen::Vector&lt; ST, 3 &gt; &amp;lambdasST) const</argsstring>
        <name>deviatoricEnergy</name>
        <qualifiedname>Ikarus::Materials::Hyperelastic::deviatoricEnergy</qualifiedname>
        <param>
          <type>const Eigen::MatrixBase&lt; Derived &gt; &amp;</type>
          <declname>C</declname>
        </param>
        <param>
          <type>const Eigen::Vector&lt; ST, 3 &gt; &amp;</type>
          <declname>lambdasST</declname>
        </param>
    <requiresclause>(std::same_as&lt;typename Derived::Scalar, ST&gt;)    </requiresclause>
        <briefdescription>
<para>A helper function to compute the deviatoric part of the energy. </para>
        </briefdescription>
        <detaileddescription>
<para>While using AutoDiff, if the eigenvalues (principal stretches) of C are degenerated, the derivative can have certain singularities. This is circumvented here by explicitly updating the derivatives. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/hyperelastic/interface.hh" line="260" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/hyperelastic/interface.hh" bodystart="260" bodyend="300"/>
      </memberdef>
      <memberdef kind="function" id="a01562_1a191040110c6554ea810741a6c960e52b" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Derived</type>
          </param>
          <param>
            <type>typename ST</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto Ikarus::Materials::Hyperelastic&lt; DEV, VOL &gt;::deviatoricStress</definition>
        <argsstring>(const Eigen::MatrixBase&lt; Derived &gt; &amp;C, const Eigen::Vector&lt; ST, dim &gt; &amp;lambdasST, Eigen::Matrix&lt; ST, dim, dim &gt; NST) const</argsstring>
        <name>deviatoricStress</name>
        <qualifiedname>Ikarus::Materials::Hyperelastic::deviatoricStress</qualifiedname>
        <param>
          <type>const Eigen::MatrixBase&lt; Derived &gt; &amp;</type>
          <declname>C</declname>
        </param>
        <param>
          <type>const Eigen::Vector&lt; ST, <ref refid="a01562_1a8d74fb06339caf2930a00ea40ecac5c0" kindref="member">dim</ref> &gt; &amp;</type>
          <declname>lambdasST</declname>
        </param>
        <param>
          <type>Eigen::Matrix&lt; ST, <ref refid="a01562_1a8d74fb06339caf2930a00ea40ecac5c0" kindref="member">dim</ref>, <ref refid="a01562_1a8d74fb06339caf2930a00ea40ecac5c0" kindref="member">dim</ref> &gt;</type>
          <declname>NST</declname>
        </param>
    <requiresclause>(std::same_as&lt;typename Derived::Scalar, ST&gt;)    </requiresclause>
        <briefdescription>
<para>A helper function to compute the deviatoric part of the stresses. </para>
        </briefdescription>
        <detaileddescription>
<para>While using AutoDiff, if the eigenvalues (principal stretches) of C are degenerated, the derivative can have certain singularities. This is circumvented here by explicitly updating the derivatives. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/hyperelastic/interface.hh" line="311" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/hyperelastic/interface.hh" bodystart="311" bodyend="337"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Implementation of a general <ref refid="a01562" kindref="compound">Hyperelastic</ref> <ref refid="a01622" kindref="compound">Material</ref> material model. </para>
    </briefdescription>
    <detaileddescription>
<para><formula id="42">$\Psi(\BC) = \hat{\Psi}(\la_1, \la_2, \la_3) + U(J)$</formula> with <formula id="43">$\hat{\Psi}$</formula> being the deviatoric part of the strain energy function and <formula id="44">$ U(J) $</formula> being the volumetric part. After calling the underlying deviatoric and volumetric function, the transformation to cartesian coordinate system is implemented in this interface. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>Ikarus::Materials::Hyperelastic&lt; DEV, VOL &gt;</label>
        <link refid="a01562"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>Ikarus::Materials::Material&lt; MI &gt;</label>
        <link refid="a01622"/>
      </node>
      <node id="2">
        <label>Ikarus::Materials::Material&lt; Hyperelastic&lt; DEV, NoVolumetricPart &gt; &gt;</label>
        <link refid="a01622"/>
        <childnode refid="3" relation="template-instance">
          <edgelabel>&lt; Hyperelastic&lt; DEV, NoVolumetricPart &gt; &gt;</edgelabel>
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>Ikarus::Materials::Hyperelastic&lt; DEV, VOL &gt;</label>
        <link refid="a01562"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>Ikarus::Materials::Material&lt; MI &gt;</label>
        <link refid="a01622"/>
      </node>
      <node id="2">
        <label>Ikarus::Materials::Material&lt; Hyperelastic&lt; DEV, NoVolumetricPart &gt; &gt;</label>
        <link refid="a01622"/>
        <childnode refid="3" relation="template-instance">
          <edgelabel>&lt; Hyperelastic&lt; DEV, NoVolumetricPart &gt; &gt;</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/hyperelastic/interface.hh" line="34" column="1" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/hyperelastic/interface.hh" bodystart="35" bodyend="338"/>
    <listofallmembers>
      <member refid="a01622_1ae9e08c2d0dc02321b8a4d81d4052f63f" prot="public" virt="non-virtual"><scope>Ikarus::Materials::Hyperelastic</scope><name>derivativeFactor</name></member>
      <member refid="a01562_1ac281a67b1069e3f6c5fe17942e8b6738" prot="public" virt="non-virtual"><scope>Ikarus::Materials::Hyperelastic</scope><name>derivativeFactorImpl</name></member>
      <member refid="a01562_1a301f95cfcdc11959b0002cc63f20d7fa" prot="private" virt="non-virtual"><scope>Ikarus::Materials::Hyperelastic</scope><name>detF</name></member>
      <member refid="a01562_1a86203ce138d5218be92336e27cec6a49" prot="private" virt="non-virtual"><scope>Ikarus::Materials::Hyperelastic</scope><name>dev_</name></member>
      <member refid="a01562_1a326990588cb1e1d4f153d945f2c6d5d7" prot="private" virt="non-virtual"><scope>Ikarus::Materials::Hyperelastic</scope><name>deviatoricEnergy</name></member>
      <member refid="a01562_1a5693042bcd5d51d3218317685f74f4d0" prot="public" virt="non-virtual"><scope>Ikarus::Materials::Hyperelastic</scope><name>deviatoricFunction</name></member>
      <member refid="a01562_1a191040110c6554ea810741a6c960e52b" prot="private" virt="non-virtual"><scope>Ikarus::Materials::Hyperelastic</scope><name>deviatoricStress</name></member>
      <member refid="a01562_1a8d74fb06339caf2930a00ea40ecac5c0" prot="public" virt="non-virtual"><scope>Ikarus::Materials::Hyperelastic</scope><name>dim</name></member>
      <member refid="a01562_1a316cf07baa31b15a08099b94ea6ac065" prot="private" virt="non-virtual"><scope>Ikarus::Materials::Hyperelastic</scope><name>dimensionRange</name></member>
      <member refid="a01562_1a07c2fbb17a5264b852a856a314e604bc" prot="public" virt="non-virtual"><scope>Ikarus::Materials::Hyperelastic</scope><name>energyAcceptsVoigt</name></member>
      <member refid="a01562_1ada824f063862cafe0415c1631a73f2fd" prot="public" virt="non-virtual"><scope>Ikarus::Materials::Hyperelastic</scope><name>hasVolumetricPart</name></member>
      <member refid="a01562_1a034c61ea845cb6ddb2ae91971838078f" prot="public" virt="non-virtual"><scope>Ikarus::Materials::Hyperelastic</scope><name>Hyperelastic</name></member>
      <member refid="a01562_1ae0ada67dda859afd29cdc7afda47f4ea" prot="public" virt="non-virtual"><scope>Ikarus::Materials::Hyperelastic</scope><name>Hyperelastic</name></member>
      <member refid="a01622_1a2e6191f96be90789c574f58f268f5aea" prot="public" virt="non-virtual"><scope>Ikarus::Materials::Hyperelastic</scope><name>impl</name></member>
      <member refid="a01622_1ae6ac28e09154cef841393f09f76d680b" prot="public" virt="non-virtual"><scope>Ikarus::Materials::Hyperelastic</scope><name>impl</name></member>
      <member refid="a01562_1ad470952ef099e9eed282135b0313389d" prot="public" virt="non-virtual"><scope>Ikarus::Materials::Hyperelastic</scope><name>isAutoDiff</name></member>
      <member refid="a01622_1af50dfddadfe829082a56eb804bfb7980" prot="public" virt="non-virtual"><scope>Ikarus::Materials::Hyperelastic</scope><name>isReduced</name></member>
      <member refid="a01622_1a5303817231472050f36f079bc730988b" prot="public" virt="non-virtual"><scope>Ikarus::Materials::Hyperelastic</scope><name>MaterialImpl</name></member>
      <member refid="a01622_1a0b4a203f259da74328dacbcc405c0c22" prot="public" virt="non-virtual"><scope>Ikarus::Materials::Hyperelastic</scope><name>materialParameters</name></member>
      <member refid="a01562_1a6993fca2600ef4701ac5ddb827f5fea9" prot="public" virt="non-virtual"><scope>Ikarus::Materials::Hyperelastic</scope><name>MaterialParameters</name></member>
      <member refid="a01562_1acb4984a4214a872ad37491cfd2b4c6e3" prot="public" virt="non-virtual"><scope>Ikarus::Materials::Hyperelastic</scope><name>MaterialParametersDEV</name></member>
      <member refid="a01562_1ac9eb8b0d10f4822e4d02deb3562415e7" prot="public" virt="non-virtual"><scope>Ikarus::Materials::Hyperelastic</scope><name>materialParametersImpl</name></member>
      <member refid="a01562_1a93488f549ae3c5c63d7a2d9da0212b6b" prot="public" virt="non-virtual"><scope>Ikarus::Materials::Hyperelastic</scope><name>MaterialParametersVOL</name></member>
      <member refid="a01562_1afab022b92fcc88b0e57d65ee310751d2" prot="public" virt="non-virtual"><scope>Ikarus::Materials::Hyperelastic</scope><name>MaterialTensor</name></member>
      <member refid="a01562_1a5f11f770473cf58e7934e261f257cfc0" prot="public" virt="non-virtual"><scope>Ikarus::Materials::Hyperelastic</scope><name>moduliAcceptsVoigt</name></member>
      <member refid="a01562_1af34b26052c843ca9b2ee03b8e451d0e6" prot="public" virt="non-virtual"><scope>Ikarus::Materials::Hyperelastic</scope><name>moduliToVoigt</name></member>
      <member refid="a01622_1a03ae10e8656beed2aa69c8a9d27907e5" prot="public" virt="non-virtual"><scope>Ikarus::Materials::Hyperelastic</scope><name>name</name></member>
      <member refid="a01562_1af539f27afaa79241eb50e3a8a85504d3" prot="public" virt="non-virtual"><scope>Ikarus::Materials::Hyperelastic</scope><name>nameImpl</name></member>
      <member refid="a01562_1ad7f29005709fe091d3badf631981af3d" prot="private" virt="non-virtual"><scope>Ikarus::Materials::Hyperelastic</scope><name>principalStretches</name></member>
      <member refid="a01562_1a93404b73ee63e850398a668fe0f7e8ba" prot="public" virt="non-virtual"><scope>Ikarus::Materials::Hyperelastic</scope><name>rebind</name></member>
      <member refid="a01562_1a1cbd68ec89a8e264c989c1e6a89822f8" prot="public" virt="non-virtual"><scope>Ikarus::Materials::Hyperelastic</scope><name>ScalarType</name></member>
      <member refid="a01622_1a8d6370e3d198662f4222a0b94e2d6703" prot="public" virt="non-virtual"><scope>Ikarus::Materials::Hyperelastic</scope><name>storedEnergy</name></member>
      <member refid="a01562_1ab6b7e0732166247942ede24e025a3551" prot="public" virt="non-virtual"><scope>Ikarus::Materials::Hyperelastic</scope><name>storedEnergyImpl</name></member>
      <member refid="a01562_1ac72c18e90263b11ece94c7557cda4cc6" prot="public" virt="non-virtual"><scope>Ikarus::Materials::Hyperelastic</scope><name>StrainMatrix</name></member>
      <member refid="a01562_1aea27e3ad0a717064f2a19d0b806e9adc" prot="public" virt="non-virtual"><scope>Ikarus::Materials::Hyperelastic</scope><name>strainTag</name></member>
      <member refid="a01562_1a06ee513dc5ee636e6463ef1eae39a587" prot="public" virt="non-virtual"><scope>Ikarus::Materials::Hyperelastic</scope><name>stressAcceptsVoigt</name></member>
      <member refid="a01622_1a8a68e052cade23285d1a28d1e08845f5" prot="public" virt="non-virtual"><scope>Ikarus::Materials::Hyperelastic</scope><name>stresses</name></member>
      <member refid="a01562_1a7fc4c5a0220e307632751ef4c063f00f" prot="public" virt="non-virtual"><scope>Ikarus::Materials::Hyperelastic</scope><name>stressesImpl</name></member>
      <member refid="a01562_1ab2fbeebd0a285ca71e54a933ae2a8c69" prot="public" virt="non-virtual"><scope>Ikarus::Materials::Hyperelastic</scope><name>StressMatrix</name></member>
      <member refid="a01562_1abd5c28c042abbccda39cbe647270498d" prot="public" virt="non-virtual"><scope>Ikarus::Materials::Hyperelastic</scope><name>stressTag</name></member>
      <member refid="a01562_1ab57d932294230ce993122bdd800cf77f" prot="public" virt="non-virtual"><scope>Ikarus::Materials::Hyperelastic</scope><name>stressToVoigt</name></member>
      <member refid="a01622_1a7a97d64507fd1ce0c14e919edb8a639b" prot="public" virt="non-virtual"><scope>Ikarus::Materials::Hyperelastic</scope><name>tangentModuli</name></member>
      <member refid="a01562_1ab14575e4a0ac4e7c20502c197d8ec4b8" prot="public" virt="non-virtual"><scope>Ikarus::Materials::Hyperelastic</scope><name>tangentModuliImpl</name></member>
      <member refid="a01562_1a08a9a2762d170c489979438257467543" prot="public" virt="non-virtual"><scope>Ikarus::Materials::Hyperelastic</scope><name>tangentModuliTag</name></member>
      <member refid="a01562_1ae8df79e793345a2d9f09c731070f61bc" prot="private" virt="non-virtual"><scope>Ikarus::Materials::Hyperelastic</scope><name>transformDeviatoricStresses</name></member>
      <member refid="a01562_1a66123a60e8e8f5768b2d4fa5ebba6c76" prot="private" virt="non-virtual"><scope>Ikarus::Materials::Hyperelastic</scope><name>transformDeviatoricTangentModuli</name></member>
      <member refid="a01562_1a86da92db33324f584ce1f866e69e0487" prot="private" virt="non-virtual"><scope>Ikarus::Materials::Hyperelastic</scope><name>transformVolumetricStresses</name></member>
      <member refid="a01562_1a0067f1fe2524e6b9cd80eeffaa5b40c2" prot="private" virt="non-virtual"><scope>Ikarus::Materials::Hyperelastic</scope><name>transformVolumetricTangentModuli</name></member>
      <member refid="a01562_1ab838ea785d53523b9f7a3a5fd9d01d16" prot="private" virt="non-virtual"><scope>Ikarus::Materials::Hyperelastic</scope><name>vol_</name></member>
      <member refid="a01562_1adc4df3aa29c4a6c70198116882a65c24" prot="public" virt="non-virtual"><scope>Ikarus::Materials::Hyperelastic</scope><name>volumetricFunction</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
