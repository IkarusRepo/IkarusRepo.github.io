<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="a01324" kind="struct" language="C++" prot="public">
    <compoundname>Ikarus::LoadControlSubsidiaryFunction</compoundname>
    <includes refid="a00197" local="no">ikarus/controlroutines/pathfollowingfunctions.hh</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="a01324_1aea5de41cde5e7506712e8bdd84be6ffa" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ikarus::LoadControlSubsidiaryFunction::operator()</definition>
        <argsstring>(SubsidiaryArgs &amp;args) const</argsstring>
        <name>operator()</name>
        <qualifiedname>Ikarus::LoadControlSubsidiaryFunction::operator()</qualifiedname>
        <param>
          <type><ref refid="a01316" kindref="compound">SubsidiaryArgs</ref> &amp;</type>
          <declname>args</declname>
        </param>
        <briefdescription>
<para>Evaluates the subsidiary function for the load control method. </para>
        </briefdescription>
        <detaileddescription>
<para>This method calculates the subsidiary function value and its derivatives for the given arguments.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>args</parametername>
</parameternamelist>
<parameterdescription>
<para>The subsidiary function arguments. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/controlroutines/pathfollowingfunctions.hh" line="182" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/controlroutines/pathfollowingfunctions.hh" bodystart="182" bodyend="186"/>
      </memberdef>
      <memberdef kind="function" id="a01324_1a4670840cb26672b50f79dfc70ba47973" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename NLO</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Ikarus::LoadControlSubsidiaryFunction::initialPrediction</definition>
        <argsstring>(NLO &amp;nonLinearOperator, SubsidiaryArgs &amp;args)</argsstring>
        <name>initialPrediction</name>
        <qualifiedname>Ikarus::LoadControlSubsidiaryFunction::initialPrediction</qualifiedname>
        <param>
          <type>NLO &amp;</type>
          <declname>nonLinearOperator</declname>
        </param>
        <param>
          <type><ref refid="a01316" kindref="compound">SubsidiaryArgs</ref> &amp;</type>
          <declname>args</declname>
        </param>
        <briefdescription>
<para>Performs initial prediction for the load control method. </para>
        </briefdescription>
        <detaileddescription>
<para>This method initializes the prediction step for the load control method.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>NLO</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of the nonlinear operator. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>nonLinearOperator</parametername>
</parameternamelist>
<parameterdescription>
<para>The nonlinear operator. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>args</parametername>
</parameternamelist>
<parameterdescription>
<para>The subsidiary function arguments. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/controlroutines/pathfollowingfunctions.hh" line="198" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/controlroutines/pathfollowingfunctions.hh" bodystart="198" bodyend="201"/>
      </memberdef>
      <memberdef kind="function" id="a01324_1abd2369cff03a98552df1f8c8a4184e90" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename NLO</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Ikarus::LoadControlSubsidiaryFunction::intermediatePrediction</definition>
        <argsstring>(NLO &amp;nonLinearOperator, SubsidiaryArgs &amp;args)</argsstring>
        <name>intermediatePrediction</name>
        <qualifiedname>Ikarus::LoadControlSubsidiaryFunction::intermediatePrediction</qualifiedname>
        <param>
          <type>NLO &amp;</type>
          <declname>nonLinearOperator</declname>
        </param>
        <param>
          <type><ref refid="a01316" kindref="compound">SubsidiaryArgs</ref> &amp;</type>
          <declname>args</declname>
        </param>
        <briefdescription>
<para>Performs intermediate prediction for the load control method. </para>
        </briefdescription>
        <detaileddescription>
<para>This method updates the prediction step for the load control method.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>NLO</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of the nonlinear operator. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>nonLinearOperator</parametername>
</parameternamelist>
<parameterdescription>
<para>The nonlinear operator. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>args</parametername>
</parameternamelist>
<parameterdescription>
<para>The subsidiary function arguments. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/controlroutines/pathfollowingfunctions.hh" line="213" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/controlroutines/pathfollowingfunctions.hh" bodystart="213" bodyend="215"/>
      </memberdef>
      <memberdef kind="function" id="a01324_1a6e2ee6e5a234c1b14ce197f4a1460ed3" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto Ikarus::LoadControlSubsidiaryFunction::name</definition>
        <argsstring>() const</argsstring>
        <name>name</name>
        <qualifiedname>Ikarus::LoadControlSubsidiaryFunction::name</qualifiedname>
        <briefdescription>
<para>The name of the <ref refid="a01312" kindref="compound">PathFollowing</ref> method. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/controlroutines/pathfollowingfunctions.hh" line="218" column="18" bodyfile="/__w/ikarus/ikarus/repo/ikarus/controlroutines/pathfollowingfunctions.hh" bodystart="218" bodyend="218"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Structure representing the subsidiary function for the load control method. </para>
    </briefdescription>
    <detaileddescription>
<para>The equation for the load control method reads <formula id="13">\[
f(\mathrm{D}\mathbf{D}, \mathrm{D} \lambda)=
\mathrm{D} \lambda -  \hat{s}, \]</formula> where <formula id="7">$\mathrm{D}\mathbf{D}$</formula> is the increment of the solution vector and <formula id="8">$\mathrm{D} \lambda$</formula> is the load factor increment. The scalar <formula id="12">$\hat{s} $</formula> defines the requested size of the step. </para>
    </detaileddescription>
    <location file="/__w/ikarus/ikarus/repo/ikarus/controlroutines/pathfollowingfunctions.hh" line="173" column="1" bodyfile="/__w/ikarus/ikarus/repo/ikarus/controlroutines/pathfollowingfunctions.hh" bodystart="174" bodyend="219"/>
    <listofallmembers>
      <member refid="a01324_1a4670840cb26672b50f79dfc70ba47973" prot="public" virt="non-virtual"><scope>Ikarus::LoadControlSubsidiaryFunction</scope><name>initialPrediction</name></member>
      <member refid="a01324_1abd2369cff03a98552df1f8c8a4184e90" prot="public" virt="non-virtual"><scope>Ikarus::LoadControlSubsidiaryFunction</scope><name>intermediatePrediction</name></member>
      <member refid="a01324_1a6e2ee6e5a234c1b14ce197f4a1460ed3" prot="public" virt="non-virtual"><scope>Ikarus::LoadControlSubsidiaryFunction</scope><name>name</name></member>
      <member refid="a01324_1aea5de41cde5e7506712e8bdd84be6ffa" prot="public" virt="non-virtual"><scope>Ikarus::LoadControlSubsidiaryFunction</scope><name>operator()</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
