<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="a01615" kind="class" language="C++" prot="public">
    <compoundname>Ikarus::Truss</compoundname>
    <basecompoundref refid="a01423" prot="public" virt="non-virtual">Ikarus::ResultTypeBase&lt; ResultTypes::cauchyAxialForce, ResultTypes::PK2AxialForce, ResultTypes::linearAxialForce &gt;</basecompoundref>
    <includes refid="a00284" local="no">ikarus/finiteelements/mechanics/truss.hh</includes>
    <innerclass refid="a01623" prot="public">Ikarus::Truss::KinematicVariables</innerclass>
    <templateparamlist>
      <param>
        <type>typename <ref refid="a01359" kindref="compound">PreFE</ref></type>
      </param>
      <param>
        <type>typename <ref refid="a01355" kindref="compound">FE</ref></type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="a01615_1a654c3e629e27c55d748a00bdea36c3c8" prot="public" static="no">
        <type><ref refid="a01359_1a826c356a5afb013faffb5f7ac893cff4" kindref="member">PreFE::Traits</ref></type>
        <definition>using Ikarus::Truss&lt; PreFE, FE &gt;::Traits =  PreFE::Traits</definition>
        <argsstring></argsstring>
        <name>Traits</name>
        <qualifiedname>Ikarus::Truss::Traits</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/truss.hh" line="49" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/truss.hh" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="a01615_1aa1f84ce75ed79a35a1f3daa0d7ecbb18" prot="public" static="no">
        <type>typename <ref refid="a01427_1a129085c175bca28f94c71699b734ba04" kindref="member">Traits::BasisHandler</ref></type>
        <definition>using Ikarus::Truss&lt; PreFE, FE &gt;::BasisHandler =  typename Traits::BasisHandler</definition>
        <argsstring></argsstring>
        <name>BasisHandler</name>
        <qualifiedname>Ikarus::Truss::BasisHandler</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/truss.hh" line="50" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/truss.hh" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="a01615_1a6417a09910a66224d26c7436b478c0bb" prot="public" static="no">
        <type>typename <ref refid="a01427_1a81feef959fedef62b2e1daabbd52b5f2" kindref="member">Traits::FlatBasis</ref></type>
        <definition>using Ikarus::Truss&lt; PreFE, FE &gt;::FlatBasis =  typename Traits::FlatBasis</definition>
        <argsstring></argsstring>
        <name>FlatBasis</name>
        <qualifiedname>Ikarus::Truss::FlatBasis</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/truss.hh" line="51" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/truss.hh" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="a01615_1ac504734adac1da1bca9de8115550a74f" prot="public" static="no">
        <type><ref refid="a01391" kindref="compound">FERequirementsFactory</ref>&lt; <ref refid="a00383_1ggaea763c94a1cecbeefc4f8661debcc5a3a0c2d35f5f278a229db5ba41d40120f1c" kindref="member">FESolutions::displacement</ref>, <ref refid="a00383_1gga0c1577fd05efee8475b0f7fef795bbbeaf72bac0ac84c0315e7bcbb8aa84b2ff8" kindref="member">FEParameter::loadfactor</ref>, <ref refid="a01427_1a60456621f63d34ff66c1d6b861a3b91e" kindref="member">Traits::useEigenRef</ref> &gt;::type</type>
        <definition>using Ikarus::Truss&lt; PreFE, FE &gt;::Requirement =  FERequirementsFactory&lt;FESolutions::displacement, FEParameter::loadfactor, Traits::useEigenRef&gt;::type</definition>
        <argsstring></argsstring>
        <name>Requirement</name>
        <qualifiedname>Ikarus::Truss::Requirement</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/truss.hh" line="52" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/truss.hh" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="a01615_1a2fe6312a266dde582b526f80bab5513e" prot="public" static="no">
        <type>typename <ref refid="a01427_1a06bdad066f621e46875af45a22677a3c" kindref="member">Traits::LocalView</ref></type>
        <definition>using Ikarus::Truss&lt; PreFE, FE &gt;::LocalView =  typename Traits::LocalView</definition>
        <argsstring></argsstring>
        <name>LocalView</name>
        <qualifiedname>Ikarus::Truss::LocalView</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/truss.hh" line="54" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/truss.hh" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="a01615_1a612cd26d67f7be9923188c46bfedeba3" prot="public" static="no">
        <type>typename <ref refid="a01427_1a0b7be1104fba2d190e3fed46f291a851" kindref="member">Traits::Geometry</ref></type>
        <definition>using Ikarus::Truss&lt; PreFE, FE &gt;::Geometry =  typename Traits::Geometry</definition>
        <argsstring></argsstring>
        <name>Geometry</name>
        <qualifiedname>Ikarus::Truss::Geometry</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/truss.hh" line="55" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/truss.hh" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="a01615_1a703d7e18265f53bf4e24390a3123f24c" prot="public" static="no">
        <type>typename <ref refid="a01427_1a3ec0294824df467074f5070cb58f5a91" kindref="member">Traits::GridView</ref></type>
        <definition>using Ikarus::Truss&lt; PreFE, FE &gt;::GridView =  typename Traits::GridView</definition>
        <argsstring></argsstring>
        <name>GridView</name>
        <qualifiedname>Ikarus::Truss::GridView</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/truss.hh" line="56" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/truss.hh" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="a01615_1ad953dbda6b497d1e6fe27405d2d74edd" prot="public" static="no">
        <type>typename <ref refid="a01427_1ac4668b9c9142defdf3b70cca8eeb30c4" kindref="member">Traits::Element</ref></type>
        <definition>using Ikarus::Truss&lt; PreFE, FE &gt;::Element =  typename Traits::Element</definition>
        <argsstring></argsstring>
        <name>Element</name>
        <qualifiedname>Ikarus::Truss::Element</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/truss.hh" line="57" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/truss.hh" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="a01615_1ab3db78c617c0abe71269a2dfc156ea6e" prot="public" static="no">
        <type><ref refid="a01619" kindref="compound">TrussPre</ref></type>
        <definition>using Ikarus::Truss&lt; PreFE, FE &gt;::Pre =  TrussPre</definition>
        <argsstring></argsstring>
        <name>Pre</name>
        <qualifiedname>Ikarus::Truss::Pre</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/truss.hh" line="58" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/truss.hh" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="a01423_1ac43d0000154d9bd08d7fdce3c279ccbb" prot="public" static="no">
        <type>std::tuple&lt; decltype(<ref refid="a00396_1a38629395c2d43ba44328b01ce0c0daf3" kindref="member">makeRT</ref>&lt; ResultTypes &gt;())... &gt;</type>
        <definition>using Ikarus::ResultTypeBase&lt; ResultTypes &gt;::SupportedResultTypes =  std::tuple&lt;decltype(makeRT&lt;ResultTypes&gt;())...&gt;</definition>
        <argsstring></argsstring>
        <name>SupportedResultTypes</name>
        <qualifiedname>Ikarus::ResultTypeBase&lt; ResultTypes::cauchyAxialForce, ResultTypes::PK2AxialForce, ResultTypes::linearAxialForce &gt;::SupportedResultTypes</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/feresulttypes.hh" line="287" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/feresulttypes.hh" bodystart="287" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="a01615_1ad0e7e96505e71d75eb2f64b079169acb" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr int</type>
        <definition>constexpr int Ikarus::Truss&lt; PreFE, FE &gt;::myDim</definition>
        <argsstring></argsstring>
        <name>myDim</name>
        <qualifiedname>Ikarus::Truss::myDim</qualifiedname>
        <initializer>= <ref refid="a01427_1ae15b8efa9f66a3caee81d99dd5c648de" kindref="member">Traits::mydim</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/truss.hh" line="60" column="24" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/truss.hh" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="a01615_1a41e2a568f1739778e2277d5eec69cfce" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr int</type>
        <definition>constexpr int Ikarus::Truss&lt; PreFE, FE &gt;::worldDim</definition>
        <argsstring></argsstring>
        <name>worldDim</name>
        <qualifiedname>Ikarus::Truss::worldDim</qualifiedname>
        <initializer>= <ref refid="a01427_1a5d611e1d48285bac5c5ebd6fda9c7cc7" kindref="member">Traits::worlddim</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/truss.hh" line="61" column="24" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/truss.hh" bodystart="61" bodyend="-1"/>
        <referencedby refid="a01615_1aeab583c651a9704392133a98e58e6ad4" compoundref="a00284" startline="117" endline="158">Ikarus::Truss&lt; PreFE, FE &gt;::computeStrain</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="a01615_1ac4d8b275d61f80f7db679325802970f9" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double Ikarus::Truss&lt; PreFE, FE &gt;::E</definition>
        <argsstring></argsstring>
        <name>E</name>
        <qualifiedname>Ikarus::Truss::E</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/truss.hh" line="196" column="10" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/truss.hh" bodystart="196" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="a01615_1a0237151f6e7a1b1d5f0ba56077c662de" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double Ikarus::Truss&lt; PreFE, FE &gt;::A</definition>
        <argsstring></argsstring>
        <name>A</name>
        <qualifiedname>Ikarus::Truss::A</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/truss.hh" line="197" column="10" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/truss.hh" bodystart="197" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="a01615_1a31c3128e6407c9b869b6eb4a3436aae6" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Ikarus::Truss&lt; PreFE, FE &gt;::Truss</definition>
        <argsstring>(const Pre &amp;pre)</argsstring>
        <name>Truss</name>
        <qualifiedname>Ikarus::Truss::Truss</qualifiedname>
        <param>
          <type>const <ref refid="a01615_1ab3db78c617c0abe71269a2dfc156ea6e" kindref="member">Pre</ref> &amp;</type>
          <declname>pre</declname>
        </param>
        <briefdescription>
<para>Constructor for the <ref refid="a01615" kindref="compound">Truss</ref> class. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pre</parametername>
</parameternamelist>
<parameterdescription>
<para>The pre fe </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/truss.hh" line="87" column="12" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/truss.hh" bodystart="87" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="a01615_1af6a1883a353d39ea3aee75c1b5b59514" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ST</type>
            <defval>double</defval>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto Ikarus::Truss&lt; PreFE, FE &gt;::displacement</definition>
        <argsstring>(const Requirement &amp;par, const std::optional&lt; std::reference_wrapper&lt; const Eigen::VectorX&lt; ST &gt; &gt; &gt; &amp;dx=std::nullopt) const</argsstring>
        <name>displacement</name>
        <qualifiedname>Ikarus::Truss::displacement</qualifiedname>
        <param>
          <type>const <ref refid="a01615_1ac504734adac1da1bca9de8115550a74f" kindref="member">Requirement</ref> &amp;</type>
          <declname>par</declname>
        </param>
        <param>
          <type>const std::optional&lt; std::reference_wrapper&lt; const Eigen::VectorX&lt; ST &gt; &gt; &gt; &amp;</type>
          <declname>dx</declname>
          <defval>std::nullopt</defval>
        </param>
        <briefdescription>
<para>Gets the displacement for the given Requirement and optional displacement vector. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>ST</parametername>
</parameternamelist>
<parameterdescription>
<para>The scalar type for the displacement vector. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>par</parametername>
</parameternamelist>
<parameterdescription>
<para>The Requirement object. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dx</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional displacement vector. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The local displacement vector of the type Dune::BlockVector&lt;Dune::RealTuple&lt;ST, worldDim&gt;&gt; </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/truss.hh" line="100" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/truss.hh" bodystart="100" bodyend="105"/>
        <referencedby refid="a01615_1aeab583c651a9704392133a98e58e6ad4" compoundref="a00284" startline="117" endline="158">Ikarus::Truss&lt; PreFE, FE &gt;::computeStrain</referencedby>
      </memberdef>
      <memberdef kind="function" id="a01615_1aeab583c651a9704392133a98e58e6ad4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class ST</type>
            <defval>double</defval>
          </param>
        </templateparamlist>
        <type><ref refid="a01623" kindref="compound">KinematicVariables</ref>&lt; ST &gt;</type>
        <definition>KinematicVariables&lt; ST &gt; Ikarus::Truss&lt; PreFE, FE &gt;::computeStrain</definition>
        <argsstring>(const Requirement &amp;par, const std::optional&lt; std::reference_wrapper&lt; const Eigen::VectorX&lt; ST &gt; &gt; &gt; &amp;dx=std::nullopt) const</argsstring>
        <name>computeStrain</name>
        <qualifiedname>Ikarus::Truss::computeStrain</qualifiedname>
        <param>
          <type>const <ref refid="a01615_1ac504734adac1da1bca9de8115550a74f" kindref="member">Requirement</ref> &amp;</type>
          <declname>par</declname>
        </param>
        <param>
          <type>const std::optional&lt; std::reference_wrapper&lt; const Eigen::VectorX&lt; ST &gt; &gt; &gt; &amp;</type>
          <declname>dx</declname>
          <defval>std::nullopt</defval>
        </param>
        <briefdescription>
<para>Gets the strain for the given Requirement and optional displacement vector. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>ST</parametername>
</parameternamelist>
<parameterdescription>
<para>The scalar type for the strain. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>par</parametername>
</parameternamelist>
<parameterdescription>
<para>The Requirement object. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dx</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional displacement vector. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A tuple containing Green-Lagrange strain, its first and second derivatives w.r.t displacements and the length of the undeformed and deformed geometry. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/truss.hh" line="117" column="22" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/truss.hh" bodystart="117" bodyend="158"/>
        <referencedby refid="a01615_1a1e7e9cdb036a72153c163cb6e8fd2a18" compoundref="a00284" startline="173" endline="189">Ikarus::Truss&lt; PreFE, FE &gt;::calculateAtImpl</referencedby>
        <referencedby refid="a01615_1a5955fba6251da3eda818f6c14ef5ca73" compoundref="a00284" startline="201" endline="206">Ikarus::Truss&lt; PreFE, FE &gt;::calculateMatrixImpl</referencedby>
        <referencedby refid="a01615_1ad11254e9306f1a740bab191314ee3108" compoundref="a00284" startline="209" endline="214">Ikarus::Truss&lt; PreFE, FE &gt;::calculateScalarImpl</referencedby>
        <referencedby refid="a01615_1a1c9876db9b831de421fe04750e11d9ed" compoundref="a00284" startline="217" endline="222">Ikarus::Truss&lt; PreFE, FE &gt;::calculateVectorImpl</referencedby>
      </memberdef>
      <memberdef kind="function" id="a01615_1a1e7e9cdb036a72153c163cb6e8fd2a18" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>template&lt; typename, int, int &gt; class</type>
            <declname>RT</declname>
            <defname>RT</defname>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto Ikarus::Truss&lt; PreFE, FE &gt;::calculateAtImpl</definition>
        <argsstring>(const Requirement &amp;req, const Dune::FieldVector&lt; double, Traits::mydim &gt; &amp;local, Dune::PriorityTag&lt; 0 &gt;) const</argsstring>
        <name>calculateAtImpl</name>
        <qualifiedname>Ikarus::Truss::calculateAtImpl</qualifiedname>
        <param>
          <type>const <ref refid="a01615_1ac504734adac1da1bca9de8115550a74f" kindref="member">Requirement</ref> &amp;</type>
          <declname>req</declname>
        </param>
        <param>
          <type>const <ref refid="a01867" kindref="compound">Dune::FieldVector</ref>&lt; double, <ref refid="a01427_1ae15b8efa9f66a3caee81d99dd5c648de" kindref="member">Traits::mydim</ref> &gt; &amp;</type>
          <declname>local</declname>
        </param>
        <param>
          <type>Dune::PriorityTag&lt; 0 &gt;</type>
        </param>
    <requiresclause>(supportsResultType&lt;RT&gt;())    </requiresclause>
        <briefdescription>
<para>Calculates a requested result at a specific local position. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>req</parametername>
</parameternamelist>
<parameterdescription>
<para>The Requirement object holding the global solution. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>local</parametername>
</parameternamelist>
<parameterdescription>
<para>Local position vector. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>RT</parametername>
</parameternamelist>
<parameterdescription>
<para>The requested result type </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>calculated result</para>
</simplesect>
<parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>RT</parametername>
</parameternamelist>
<parameterdescription>
<para>The type representing the requested result. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/truss.hh" line="173" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/truss.hh" bodystart="173" bodyend="189"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="a01615_1a401b031c6949e54cd1f549f4be781f1b" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const auto &amp;</type>
        <definition>const auto &amp; Ikarus::Truss&lt; PreFE, FE &gt;::underlying</definition>
        <argsstring>() const</argsstring>
        <name>underlying</name>
        <qualifiedname>Ikarus::Truss::underlying</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/truss.hh" line="193" column="14" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/truss.hh" bodystart="193" bodyend="193"/>
      </memberdef>
      <memberdef kind="function" id="a01615_1ab8d4e543c1e18437755053c6ebf8d998" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>auto &amp;</type>
        <definition>auto &amp; Ikarus::Truss&lt; PreFE, FE &gt;::underlying</definition>
        <argsstring>()</argsstring>
        <name>underlying</name>
        <qualifiedname>Ikarus::Truss::underlying</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/truss.hh" line="194" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/truss.hh" bodystart="194" bodyend="194"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="a01615_1a5955fba6251da3eda818f6c14ef5ca73" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ScalarType</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Ikarus::Truss&lt; PreFE, FE &gt;::calculateMatrixImpl</definition>
        <argsstring>(const Requirement &amp;par, const MatrixAffordance &amp;affordance, typename Traits::template MatrixType&lt;&gt; K, const std::optional&lt; std::reference_wrapper&lt; const Eigen::VectorX&lt; ScalarType &gt; &gt; &gt; &amp;dx=std::nullopt) const</argsstring>
        <name>calculateMatrixImpl</name>
        <qualifiedname>Ikarus::Truss::calculateMatrixImpl</qualifiedname>
        <param>
          <type>const <ref refid="a01615_1ac504734adac1da1bca9de8115550a74f" kindref="member">Requirement</ref> &amp;</type>
          <declname>par</declname>
        </param>
        <param>
          <type>const <ref refid="a00396_1a390d5311179ec61d163a29c943b3d1a0" kindref="member">MatrixAffordance</ref> &amp;</type>
          <declname>affordance</declname>
        </param>
        <param>
          <type>typename Traits::template MatrixType&lt;&gt;</type>
          <declname>K</declname>
        </param>
        <param>
          <type>const std::optional&lt; std::reference_wrapper&lt; const Eigen::VectorX&lt; ScalarType &gt; &gt; &gt; &amp;</type>
          <declname>dx</declname>
          <defval>std::nullopt</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/truss.hh" line="201" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/truss.hh" bodystart="201" bodyend="206"/>
      </memberdef>
      <memberdef kind="function" id="a01615_1ad11254e9306f1a740bab191314ee3108" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ScalarType</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto Ikarus::Truss&lt; PreFE, FE &gt;::calculateScalarImpl</definition>
        <argsstring>(const Requirement &amp;par, ScalarAffordance affordance, const std::optional&lt; std::reference_wrapper&lt; const Eigen::VectorX&lt; ScalarType &gt; &gt; &gt; &amp;dx=std::nullopt) const -&gt; ScalarType</argsstring>
        <name>calculateScalarImpl</name>
        <qualifiedname>Ikarus::Truss::calculateScalarImpl</qualifiedname>
        <param>
          <type>const <ref refid="a01615_1ac504734adac1da1bca9de8115550a74f" kindref="member">Requirement</ref> &amp;</type>
          <declname>par</declname>
        </param>
        <param>
          <type><ref refid="a00396_1af6f894084edd9109762b86222995ef2a" kindref="member">ScalarAffordance</ref></type>
          <declname>affordance</declname>
        </param>
        <param>
          <type>const std::optional&lt; std::reference_wrapper&lt; const Eigen::VectorX&lt; ScalarType &gt; &gt; &gt; &amp;</type>
          <declname>dx</declname>
          <defval>std::nullopt</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/truss.hh" line="209" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/truss.hh" bodystart="209" bodyend="214"/>
      </memberdef>
      <memberdef kind="function" id="a01615_1a1c9876db9b831de421fe04750e11d9ed" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ScalarType</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Ikarus::Truss&lt; PreFE, FE &gt;::calculateVectorImpl</definition>
        <argsstring>(const Requirement &amp;par, VectorAffordance affordance, typename Traits::template VectorType&lt; ScalarType &gt; force, const std::optional&lt; std::reference_wrapper&lt; const Eigen::VectorX&lt; ScalarType &gt; &gt; &gt; &amp;dx=std::nullopt) const</argsstring>
        <name>calculateVectorImpl</name>
        <qualifiedname>Ikarus::Truss::calculateVectorImpl</qualifiedname>
        <param>
          <type>const <ref refid="a01615_1ac504734adac1da1bca9de8115550a74f" kindref="member">Requirement</ref> &amp;</type>
          <declname>par</declname>
        </param>
        <param>
          <type><ref refid="a00396_1aab9e3e38507d1db7602bc750718c302a" kindref="member">VectorAffordance</ref></type>
          <declname>affordance</declname>
        </param>
        <param>
          <type>typename Traits::template VectorType&lt; ScalarType &gt;</type>
          <declname>force</declname>
        </param>
        <param>
          <type>const std::optional&lt; std::reference_wrapper&lt; const Eigen::VectorX&lt; ScalarType &gt; &gt; &gt; &amp;</type>
          <declname>dx</declname>
          <defval>std::nullopt</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/truss.hh" line="217" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/truss.hh" bodystart="217" bodyend="222"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="a01423_1af33553a01e6940265639d561c31b7746" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>consteval bool</type>
        <definition>static consteval bool Ikarus::ResultTypeBase&lt; ResultTypes &gt;::supportsResultType</definition>
        <argsstring>()</argsstring>
        <name>supportsResultType</name>
        <qualifiedname>Ikarus::ResultTypeBase&lt; ResultTypes::cauchyAxialForce, ResultTypes::PK2AxialForce, ResultTypes::linearAxialForce &gt;::supportsResultType</qualifiedname>
        <briefdescription>
<para>Returns whether a ResultType is provided by the element. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>RT</parametername>
</parameternamelist>
<parameterdescription>
<para>requested ResultType </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/feresulttypes.hh" line="283" column="25" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/feresulttypes.hh" bodystart="283" bodyend="285"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="a01615" kindref="compound">Truss</ref> class represents a truss finite element. </para>
    </briefdescription>
    <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername><ref refid="a01359" kindref="compound">PreFE</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the pre finite element. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="a01355" kindref="compound">FE</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the finite element. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>Ikarus::ResultTypeBase&lt; ResultTypes &gt;</label>
        <link refid="a01423"/>
      </node>
      <node id="1">
        <label>Ikarus::Truss&lt; PreFE, FE &gt;</label>
        <link refid="a01615"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>Ikarus::ResultTypeBase&lt; ResultTypes::cauchyAxialForce, ResultTypes::PK2AxialForce, ResultTypes::linearAxialForce &gt;</label>
        <link refid="a01423"/>
        <childnode refid="3" relation="template-instance">
          <edgelabel>&lt; ResultTypes::cauchyAxialForce, ResultTypes::PK2AxialForce, ResultTypes::linearAxialForce &gt;</edgelabel>
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3">
        <label>Ikarus::ResultTypeBase&lt; ResultTypes &gt;</label>
        <link refid="a01423"/>
      </node>
      <node id="1">
        <label>Ikarus::Truss&lt; PreFE, FE &gt;</label>
        <link refid="a01615"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>Ikarus::ResultTypeBase&lt; ResultTypes::cauchyAxialForce, ResultTypes::PK2AxialForce, ResultTypes::linearAxialForce &gt;</label>
        <link refid="a01423"/>
        <childnode refid="3" relation="template-instance">
          <edgelabel>&lt; ResultTypes::cauchyAxialForce, ResultTypes::PK2AxialForce, ResultTypes::linearAxialForce &gt;</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/truss.hh" line="45" column="1" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/truss.hh" bodystart="47" bodyend="223"/>
    <listofallmembers>
      <member refid="a01615_1a0237151f6e7a1b1d5f0ba56077c662de" prot="private" virt="non-virtual"><scope>Ikarus::Truss</scope><name>A</name></member>
      <member refid="a01615_1aa1f84ce75ed79a35a1f3daa0d7ecbb18" prot="public" virt="non-virtual"><scope>Ikarus::Truss</scope><name>BasisHandler</name></member>
      <member refid="a01615_1a1e7e9cdb036a72153c163cb6e8fd2a18" prot="public" virt="non-virtual"><scope>Ikarus::Truss</scope><name>calculateAtImpl</name></member>
      <member refid="a01615_1a5955fba6251da3eda818f6c14ef5ca73" prot="protected" virt="non-virtual"><scope>Ikarus::Truss</scope><name>calculateMatrixImpl</name></member>
      <member refid="a01615_1ad11254e9306f1a740bab191314ee3108" prot="protected" virt="non-virtual"><scope>Ikarus::Truss</scope><name>calculateScalarImpl</name></member>
      <member refid="a01615_1a1c9876db9b831de421fe04750e11d9ed" prot="protected" virt="non-virtual"><scope>Ikarus::Truss</scope><name>calculateVectorImpl</name></member>
      <member refid="a01615_1aeab583c651a9704392133a98e58e6ad4" prot="public" virt="non-virtual"><scope>Ikarus::Truss</scope><name>computeStrain</name></member>
      <member refid="a01615_1af6a1883a353d39ea3aee75c1b5b59514" prot="public" virt="non-virtual"><scope>Ikarus::Truss</scope><name>displacement</name></member>
      <member refid="a01615_1ac4d8b275d61f80f7db679325802970f9" prot="private" virt="non-virtual"><scope>Ikarus::Truss</scope><name>E</name></member>
      <member refid="a01615_1ad953dbda6b497d1e6fe27405d2d74edd" prot="public" virt="non-virtual"><scope>Ikarus::Truss</scope><name>Element</name></member>
      <member refid="a01615_1a6417a09910a66224d26c7436b478c0bb" prot="public" virt="non-virtual"><scope>Ikarus::Truss</scope><name>FlatBasis</name></member>
      <member refid="a01615_1a612cd26d67f7be9923188c46bfedeba3" prot="public" virt="non-virtual"><scope>Ikarus::Truss</scope><name>Geometry</name></member>
      <member refid="a01615_1a703d7e18265f53bf4e24390a3123f24c" prot="public" virt="non-virtual"><scope>Ikarus::Truss</scope><name>GridView</name></member>
      <member refid="a01615_1a2fe6312a266dde582b526f80bab5513e" prot="public" virt="non-virtual"><scope>Ikarus::Truss</scope><name>LocalView</name></member>
      <member refid="a01615_1ad0e7e96505e71d75eb2f64b079169acb" prot="public" virt="non-virtual"><scope>Ikarus::Truss</scope><name>myDim</name></member>
      <member refid="a01615_1ab3db78c617c0abe71269a2dfc156ea6e" prot="public" virt="non-virtual"><scope>Ikarus::Truss</scope><name>Pre</name></member>
      <member refid="a01615_1ac504734adac1da1bca9de8115550a74f" prot="public" virt="non-virtual"><scope>Ikarus::Truss</scope><name>Requirement</name></member>
      <member refid="a01423_1ac43d0000154d9bd08d7fdce3c279ccbb" prot="public" virt="non-virtual"><scope>Ikarus::Truss</scope><name>SupportedResultTypes</name></member>
      <member refid="a01423_1af33553a01e6940265639d561c31b7746" prot="public" virt="non-virtual"><scope>Ikarus::Truss</scope><name>supportsResultType</name></member>
      <member refid="a01615_1a654c3e629e27c55d748a00bdea36c3c8" prot="public" virt="non-virtual"><scope>Ikarus::Truss</scope><name>Traits</name></member>
      <member refid="a01615_1a31c3128e6407c9b869b6eb4a3436aae6" prot="public" virt="non-virtual"><scope>Ikarus::Truss</scope><name>Truss</name></member>
      <member refid="a01615_1a401b031c6949e54cd1f549f4be781f1b" prot="private" virt="non-virtual"><scope>Ikarus::Truss</scope><name>underlying</name></member>
      <member refid="a01615_1ab8d4e543c1e18437755053c6ebf8d998" prot="private" virt="non-virtual"><scope>Ikarus::Truss</scope><name>underlying</name></member>
      <member refid="a01615_1a41e2a568f1739778e2277d5eec69cfce" prot="public" virt="non-virtual"><scope>Ikarus::Truss</scope><name>worldDim</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
