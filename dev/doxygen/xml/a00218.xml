<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="a00218" kind="file" language="C++">
    <compoundname>material.hh</compoundname>
    <includes local="no">dune/common/classname.hh</includes>
    <includes local="no">dune/python/common/typeregistry.hh</includes>
    <includes local="no">dune/python/pybind11/eigen.h</includes>
    <includes local="no">dune/python/pybind11/pybind11.h</includes>
    <includes local="no">dune/python/pybind11/stl.h</includes>
    <includes refid="a02861" local="no">ikarus/finiteelements/mechanics/materials.hh</includes>
    <includes refid="a00047" local="no">ikarus/utils/concepts.hh</includes>
    <includedby refid="a02864" local="no">materials.hh</includedby>
    <incdepgraph>
      <node id="32">
        <label>ikarus/assembler/dirichletbcenforcement.hh</label>
        <link refid="a00176"/>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="62">
        <label>ikarus/finiteelements/ferequirements.hh</label>
        <link refid="a00314"/>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="64">
        <label>ikarus/finiteelements/feresulttypes.hh</label>
        <link refid="a00305"/>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>ikarus/finiteelements/mechanics/materials.hh</label>
        <link refid="a02861"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>ikarus/finiteelements/mechanics/materials/interface.hh</label>
        <link refid="a02858"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>ikarus/finiteelements/mechanics/materials/linearelasticity.hh</label>
        <link refid="a00257"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="45">
        <label>ikarus/finiteelements/mechanics/materials/neohooke.hh</label>
        <link refid="a00251"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>ikarus/finiteelements/mechanics/materials/strainconversions.hh</label>
        <link refid="a00263"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>svk.hh</label>
        <link refid="a00260"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>tags.hh</label>
        <link refid="a00242"/>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="47">
        <label>vanishinghelpers.hh</label>
        <link refid="a00248"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="46">
        <label>ikarus/finiteelements/mechanics/materials/vanishingstrain.hh</label>
        <link refid="a00254"/>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
      </node>
      <node id="59">
        <label>ikarus/finiteelements/mechanics/materials/vanishingstress.hh</label>
        <link refid="a00245"/>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>ikarus/finiteelements/physicshelper.hh</label>
        <link refid="a00293"/>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>material.hh</label>
        <link refid="a00218"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="49">
        <label>ikarus/solver/linearsolver/linearsolver.hh</label>
        <link refid="a00146"/>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="48">
        <label>ikarus/solver/nonlinearsolver/newtonraphson.hh</label>
        <link refid="a00158"/>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
      </node>
      <node id="60">
        <label>ikarus/solver/nonlinearsolver/nonlinearsolverfactory.hh</label>
        <link refid="a00161"/>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
      </node>
      <node id="53">
        <label>ikarus/solver/nonlinearsolver/solverinfos.hh</label>
        <link refid="a00152"/>
      </node>
      <node id="22">
        <label>ikarus/utils/concepts.hh</label>
        <link refid="a00047"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="54">
        <label>ikarus/utils/defaultfunctions.hh</label>
        <link refid="a00065"/>
        <childnode refid="40" relation="include">
        </childnode>
      </node>
      <node id="40">
        <label>ikarus/utils/linearalgebrahelper.hh</label>
        <link refid="a00023"/>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>ikarus/utils/makeenum.hh</label>
        <link refid="a00005"/>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>ikarus/utils/math.hh</label>
        <link refid="a00038"/>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="58">
        <label>ikarus/utils/nonlinearoperator.hh</label>
        <link refid="a00056"/>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="61">
        <label>ikarus/utils/nonlinopfactory.hh</label>
        <link refid="a00026"/>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
      </node>
      <node id="55">
        <label>ikarus/utils/observer/observer.hh</label>
        <link refid="a00122"/>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="57">
        <label>ikarus/utils/observer/observermessages.hh</label>
        <link refid="a00131"/>
      </node>
      <node id="17">
        <label>ikarus/utils/tensorutils.hh</label>
        <link refid="a00032"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>ikarus/utils/traits.hh</label>
        <link refid="a00011"/>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>Eigen/Core</label>
      </node>
      <node id="29">
        <label>Eigen/Dense</label>
      </node>
      <node id="30">
        <label>Eigen/Sparse</label>
      </node>
      <node id="52">
        <label>Eigen/SparseCore</label>
      </node>
      <node id="31">
        <label>autodiff/forward/dual/dual.hpp</label>
      </node>
      <node id="23">
        <label>concepts</label>
      </node>
      <node id="2">
        <label>dune/common/classname.hh</label>
      </node>
      <node id="14">
        <label>dune/common/exceptions.hh</label>
      </node>
      <node id="39">
        <label>dune/common/float_cmp.hh</label>
      </node>
      <node id="36">
        <label>dune/common/hybridutilities.hh</label>
      </node>
      <node id="21">
        <label>dune/common/promotiontraits.hh</label>
      </node>
      <node id="43">
        <label>dune/common/tuplevector.hh</label>
      </node>
      <node id="27">
        <label>dune/functions/functionspacebases/basistags.hh</label>
      </node>
      <node id="28">
        <label>dune/functions/functionspacebases/lagrangebasis.hh</label>
      </node>
      <node id="44">
        <label>dune/istl/bvector.hh</label>
      </node>
      <node id="3">
        <label>dune/python/common/typeregistry.hh</label>
      </node>
      <node id="4">
        <label>dune/python/pybind11/eigen.h</label>
      </node>
      <node id="5">
        <label>dune/python/pybind11/pybind11.h</label>
      </node>
      <node id="6">
        <label>dune/python/pybind11/stl.h</label>
      </node>
      <node id="34">
        <label>functional</label>
      </node>
      <node id="41">
        <label>iosfwd</label>
      </node>
      <node id="56">
        <label>map</label>
      </node>
      <node id="50">
        <label>memory</label>
      </node>
      <node id="18">
        <label>numeric</label>
      </node>
      <node id="42">
        <label>random</label>
      </node>
      <node id="19">
        <label>ranges</label>
      </node>
      <node id="63">
        <label>set</label>
      </node>
      <node id="35">
        <label>tuple</label>
      </node>
      <node id="24">
        <label>type_traits</label>
      </node>
      <node id="20">
        <label>unsupported/Eigen/CXX11/Tensor</label>
      </node>
      <node id="15">
        <label>unsupported/Eigen/MatrixFunctions</label>
      </node>
      <node id="25">
        <label>utility</label>
      </node>
      <node id="51">
        <label>variant</label>
      </node>
      <node id="26">
        <label>vector</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1">
        <label>material.hh</label>
        <link refid="a00218"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>_ikarus.cc</label>
        <link refid="a00347"/>
      </node>
      <node id="2">
        <label>materials.hh</label>
        <link refid="a02864"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innernamespace refid="a00384">Ikarus</innernamespace>
    <innernamespace refid="a00398">Ikarus::Python</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="a00218_1a52604789ad84df5cf20d4571f90af39e" prot="public" static="no">
        <name>MAKE_MaterialFunction</name>
        <param><defname>clsName</defname></param>
        <param><defname>materialName</defname></param>
        <param><defname>functionname</defname></param>
        <param><defname>vecSize</defname></param>
        <initializer>  clsName.def(                                                                                                 \
      #functionname,                                                                                           \
      [](materialName&amp; self, StrainTags straintag, Eigen::Ref&lt;const Eigen::Vector&lt;double, vecSize&gt;&gt; eVoigt_) { \
        if constexpr (not Concepts::IsMaterial&lt;LinearElasticityT, materialName&gt;) {                             \
          Eigen::Vector&lt;double, vecSize&gt; eVoigt = eVoigt_;                                                     \
          if (straintag == StrainTags::rightCauchyGreenTensor)                                                 \
            return self.template functionname&lt;StrainTags::rightCauchyGreenTensor&gt;(eVoigt);                     \
          else if (straintag == StrainTags::greenLagrangian)                                                   \
            return self.template functionname&lt;StrainTags::greenLagrangian&gt;(eVoigt);                            \
          else if (straintag == StrainTags::linear)                                                            \
            DUNE_THROW(Dune::MathError, &quot;Passing linear strain to &quot; + std::string(#materialName) +             \
                                            &quot; does not makes sense use LinearElastic class&quot;);                  \
          else if (straintag == StrainTags::displacementGradient)                                              \
            DUNE_THROW(Dune::MathError,                                                                        \
                       &quot;Passing displacementGradient strain in 6d Voigt notation does not make any sense!&quot;);   \
          else if (straintag == StrainTags::deformationGradient)                                               \
            DUNE_THROW(Dune::MathError,                                                                        \
                       &quot;Passing deformationGradient strain in 6d Voigt notation does not make any sense!&quot;);    \
          else                                                                                                 \
            DUNE_THROW(Dune::MathError, toString(straintag) + &quot;is not a valid strain tag.&quot;);                   \
        } else {                                                                                               \
          Eigen::Vector&lt;double, vecSize&gt; eVoigt = eVoigt_; /* Linear elastic path */                           \
          if (straintag == StrainTags::linear)                                                                 \
            return self.template functionname&lt;StrainTags::linear&gt;(eVoigt);                                     \
          else                                                                                                 \
            DUNE_THROW(Dune::MathError, &quot;Linear elastic material only accepts linear strains!&quot;);               \
        }                                                                                                      \
        __builtin_unreachable();                                                                               \
      },                                                                                                       \
      &quot;StrainName&quot;_a, &quot;strainVector&quot;_a);</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/python/finiteelements/material.hh" line="20" column="9" bodyfile="/__w/ikarus/ikarus/repo/ikarus/python/finiteelements/material.hh" bodystart="20" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="a00218_1a3b167811a24da0f84173e9309cb1fdb9" prot="public" static="no">
        <name>MAKE_MATERIAL_REGISTERY_FUNCTION</name>
        <param><defname>name</defname></param>
        <param><defname>vecSize</defname></param>
        <initializer>  template &lt;class Material, class... options&gt;                                               \
  void register##name(pybind11::handle scope, pybind11::class_&lt;Material, options...&gt; cls) { \
    <ref refid="a00398_1a3a4831265d4a775b43c50c25242a2910" kindref="member">Ikarus::Python::registerMaterial</ref>&lt;Material, vecSize&gt;(scope, cls);                        \
  }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/python/finiteelements/material.hh" line="198" column="9" bodyfile="/__w/ikarus/ikarus/repo/ikarus/python/finiteelements/material.hh" bodystart="198" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="a00406" kindref="compound">Python</ref> bindings for materials. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>SPDX-FileCopyrightText:<sp/>2021-2025<sp/>The<sp/>Ikarus<sp/>Developers<sp/>mueller@ibb.uni-stuttgart.de</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>SPDX-License-Identifier:<sp/>LGPL-3.0-or-later</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;dune/common/classname.hh&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;dune/python/common/typeregistry.hh&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;dune/python/pybind11/eigen.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;dune/python/pybind11/pybind11.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;dune/python/pybind11/stl.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="a02861" kindref="compound">ikarus/finiteelements/mechanics/materials.hh</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="a00047" kindref="compound">ikarus/utils/concepts.hh</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20" refid="a00218_1a52604789ad84df5cf20d4571f90af39e" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAKE_MaterialFunction(clsName,<sp/>materialName,<sp/>functionname,<sp/>vecSize)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="21"><highlight class="preprocessor"><sp/><sp/>clsName.def(<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="22"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#functionname,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="23"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>[](materialName&amp;<sp/>self,<sp/>StrainTags<sp/>straintag,<sp/>Eigen::Ref&lt;const<sp/>Eigen::Vector&lt;double,<sp/>vecSize&gt;&gt;<sp/>eVoigt_)<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="24"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>constexpr<sp/>(not<sp/>Concepts::IsMaterial&lt;LinearElasticityT,<sp/>materialName&gt;)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="25"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Eigen::Vector&lt;double,<sp/>vecSize&gt;<sp/>eVoigt<sp/>=<sp/>eVoigt_;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="26"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(straintag<sp/>==<sp/>StrainTags::rightCauchyGreenTensor)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="27"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>self.template<sp/>functionname&lt;StrainTags::rightCauchyGreenTensor&gt;(eVoigt);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="28"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>else<sp/>if<sp/>(straintag<sp/>==<sp/>StrainTags::greenLagrangian)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="29"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>self.template<sp/>functionname&lt;StrainTags::greenLagrangian&gt;(eVoigt);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="30"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>else<sp/>if<sp/>(straintag<sp/>==<sp/>StrainTags::linear)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="31"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DUNE_THROW(Dune::MathError,<sp/>&quot;Passing<sp/>linear<sp/>strain<sp/>to<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::string(#materialName)<sp/>+<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;<sp/>does<sp/>not<sp/>makes<sp/>sense<sp/>use<sp/>LinearElastic<sp/>class&quot;);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>else<sp/>if<sp/>(straintag<sp/>==<sp/>StrainTags::displacementGradient)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DUNE_THROW(Dune::MathError,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;Passing<sp/>displacementGradient<sp/>strain<sp/>in<sp/>6d<sp/>Voigt<sp/>notation<sp/>does<sp/>not<sp/>make<sp/>any<sp/>sense!&quot;);<sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>else<sp/>if<sp/>(straintag<sp/>==<sp/>StrainTags::deformationGradient)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DUNE_THROW(Dune::MathError,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;Passing<sp/>deformationGradient<sp/>strain<sp/>in<sp/>6d<sp/>Voigt<sp/>notation<sp/>does<sp/>not<sp/>make<sp/>any<sp/>sense!&quot;);<sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>else<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DUNE_THROW(Dune::MathError,<sp/>toString(straintag)<sp/>+<sp/>&quot;is<sp/>not<sp/>a<sp/>valid<sp/>strain<sp/>tag.&quot;);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>else<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Eigen::Vector&lt;double,<sp/>vecSize&gt;<sp/>eVoigt<sp/>=<sp/>eVoigt_;<sp/></highlight><highlight class="comment">/*<sp/>Linear<sp/>elastic<sp/>path<sp/>*/</highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="43"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(straintag<sp/>==<sp/>StrainTags::linear)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="44"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>self.template<sp/>functionname&lt;StrainTags::linear&gt;(eVoigt);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="45"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>else<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="46"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DUNE_THROW(Dune::MathError,<sp/>&quot;Linear<sp/>elastic<sp/>material<sp/>only<sp/>accepts<sp/>linear<sp/>strains!&quot;</highlight><highlight class="normal">);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__builtin_unreachable();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>},<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&quot;StrainName&quot;_a,<sp/>&quot;strainVector&quot;_a);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="a00398" kindref="compound">Ikarus::Python</ref><sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">Impl<sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Function<sp/>to<sp/>extract<sp/>and<sp/>convert<sp/>parameters<sp/>using<sp/>a<sp/>conversion<sp/>strategy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/>LamesFirstParameterAndShearModulus<sp/>convertMaterialParameters(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pybind11::kwargs&amp;<sp/>kwargs,</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>param1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>param2)<sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>converter<sp/>=</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="a00384_1a5e27551f9edaebc557108aa164899b54" kindref="member">convertLameConstants</ref>(T{kwargs[param1.c_str()].cast&lt;double&gt;(),<sp/>kwargs[param2.c_str()].cast&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;()});</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>necessary<sp/>as<sp/>the<sp/>converter<sp/>can&apos;t<sp/>convert<sp/>to<sp/>a<sp/>parameter<sp/>already<sp/>present<sp/>due<sp/>to<sp/>compile-time<sp/>constraints</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>lamesFirst<sp/>=<sp/>[&amp;]()<sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">requires</highlight><highlight class="normal"><sp/>{<sp/>converter.toLamesFirstParameter();<sp/>})</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>converter.toLamesFirstParameter();</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>kwargs[</highlight><highlight class="stringliteral">&quot;Lambda&quot;</highlight><highlight class="normal">].cast&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;();</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>}();</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>shearModulus<sp/>=<sp/>[&amp;]()<sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">requires</highlight><highlight class="normal"><sp/>{<sp/>converter.toShearModulus();<sp/>})</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>converter.toShearModulus();</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>kwargs[</highlight><highlight class="stringliteral">&quot;mu&quot;</highlight><highlight class="normal">].cast&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;();</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>}();</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{lamesFirst,<sp/>shearModulus};</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><ref refid="a01584" kindref="compound">Ikarus::LamesFirstParameterAndShearModulus</ref><sp/>extractMaterialParameters(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pybind11::kwargs&amp;<sp/>kwargs)<sp/>{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>clang-format<sp/>off</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::map&lt;std::array&lt;std::string,<sp/>2&gt;,<sp/>std::function&lt;LamesFirstParameterAndShearModulus(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pybind11::kwargs&amp;)&gt;&gt;<sp/>conversionMap<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{{</highlight><highlight class="stringliteral">&quot;E&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;nu&quot;</highlight><highlight class="normal">},<sp/>[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>kw){<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>convertMaterialParameters&lt;YoungsModulusAndPoissonsRatio&gt;(kw,<sp/></highlight><highlight class="stringliteral">&quot;E&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;nu&quot;</highlight><highlight class="normal">);<sp/>}},</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{{</highlight><highlight class="stringliteral">&quot;E&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;mu&quot;</highlight><highlight class="normal">},<sp/>[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>kw){<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>convertMaterialParameters&lt;YoungsModulusAndShearModulus&gt;(kw,<sp/></highlight><highlight class="stringliteral">&quot;E&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;mu&quot;</highlight><highlight class="normal">);<sp/>}},</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{{</highlight><highlight class="stringliteral">&quot;E&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;K&quot;</highlight><highlight class="normal">},<sp/>[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>kw){<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>convertMaterialParameters&lt;YoungsModulusAndBulkModulus&gt;(kw,<sp/></highlight><highlight class="stringliteral">&quot;E&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;K&quot;</highlight><highlight class="normal">);<sp/>}},</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{{</highlight><highlight class="stringliteral">&quot;E&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Lambda&quot;</highlight><highlight class="normal">},<sp/>[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>kw){<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>convertMaterialParameters&lt;YoungsModulusAndLamesFirstParameter&gt;(kw,<sp/></highlight><highlight class="stringliteral">&quot;E&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Lambda&quot;</highlight><highlight class="normal">);<sp/>}},</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{{</highlight><highlight class="stringliteral">&quot;K&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Lambda&quot;</highlight><highlight class="normal">},<sp/>[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>kw){<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>convertMaterialParameters&lt;BulkModulusAndLamesFirstParameter&gt;(kw,<sp/></highlight><highlight class="stringliteral">&quot;K&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Lambda&quot;</highlight><highlight class="normal">);<sp/>}},</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{{</highlight><highlight class="stringliteral">&quot;Lambda&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;mu&quot;</highlight><highlight class="normal">},<sp/>[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>kw){<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>LamesFirstParameterAndShearModulus{kw[</highlight><highlight class="stringliteral">&quot;Lambda&quot;</highlight><highlight class="normal">].template<sp/>cast&lt;double&gt;(),<sp/>kw[</highlight><highlight class="stringliteral">&quot;mu&quot;</highlight><highlight class="normal">].template<sp/>cast&lt;double&gt;()};<sp/>}}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>clang-format<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(kwargs.size()<sp/>!=<sp/>2)</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DUNE_THROW(Dune::IOError,<sp/></highlight><highlight class="stringliteral">&quot;The<sp/>number<sp/>of<sp/>material<sp/>parameters<sp/>passed<sp/>to<sp/>the<sp/>material<sp/>should<sp/>be<sp/>2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>[materialParameters,<sp/>parameterConverter]<sp/>:<sp/>conversionMap)<sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>[firstPar,<sp/>secondPar]<sp/>=<sp/>materialParameters;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(kwargs.contains(firstPar)<sp/>&amp;&amp;<sp/>kwargs.contains(secondPar))<sp/>{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>parameterConverter(kwargs);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>DUNE_THROW(Dune::IOError,</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;No<sp/>suitable<sp/>combination<sp/>of<sp/>material<sp/>parameters<sp/>found,<sp/>valid<sp/>combinations<sp/>are:<sp/>(E,<sp/>nu),<sp/>(E,<sp/>mu),<sp/>(E,<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;K),<sp/>(E,<sp/>Lambda),<sp/>(K,<sp/>Lambda),<sp/>(Lambda,<sp/>nu)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="104"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>Impl</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Material,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>vecSize,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">...<sp/>options&gt;</highlight></codeline>
<codeline lineno="106" refid="a00398_1a3a4831265d4a775b43c50c25242a2910" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="a00398_1a3a4831265d4a775b43c50c25242a2910" kindref="member">registerMaterial</ref>(pybind11::handle<sp/>scope,<sp/>pybind11::class_&lt;Material,<sp/>options...&gt;<sp/>cls)<sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">pybind11::operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">_a;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">py<sp/>=<sp/>pybind11;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/>cls.def(<ref refid="a00384_1ac8243891c1b961e50a066140ab79a142" kindref="member">pybind11::init</ref>([](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>py::kwargs&amp;<sp/>kwargs)<sp/>{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>matParameter<sp/>=<sp/>Impl::extractMaterialParameters(kwargs);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="a01492" kindref="compound">Material</ref>(matParameter);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/>}));</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/>std::string<sp/>materialname<sp/>=<sp/><ref refid="a01492_1a990c4d651c61c33042baec575c54f488" kindref="member">Material::name</ref>();</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><ref refid="a00218_1a52604789ad84df5cf20d4571f90af39e" kindref="member">MAKE_MaterialFunction</ref>(cls,<sp/><ref refid="a01492" kindref="compound">Material</ref>,<sp/>storedEnergy,<sp/>vecSize);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><ref refid="a00218_1a52604789ad84df5cf20d4571f90af39e" kindref="member">MAKE_MaterialFunction</ref>(cls,<sp/><ref refid="a01492" kindref="compound">Material</ref>,<sp/>stresses,<sp/>vecSize);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><ref refid="a00218_1a52604789ad84df5cf20d4571f90af39e" kindref="member">MAKE_MaterialFunction</ref>(cls,<sp/><ref refid="a01492" kindref="compound">Material</ref>,<sp/>tangentModuli,<sp/>vecSize);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">PlaneStressClass<sp/>=<sp/></highlight><highlight class="keyword">decltype</highlight><highlight class="normal">(<ref refid="a00384_1ad43f50b1b1c3410c4a0c547be7ada4a0" kindref="member">planeStress</ref>(std::declval&lt;Material&gt;()));</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>includes<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>Dune::Python::IncludeFiles{</highlight><highlight class="stringliteral">&quot;ikarus/finiteelements/mechanics/materials.hh&quot;</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>pS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>Dune::Python::insertClass&lt;PlaneStressClass&gt;(</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scope,<sp/>std::string(</highlight><highlight class="stringliteral">&quot;PlaneStress_&quot;</highlight><highlight class="normal">)<sp/>+<sp/>materialname,</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Dune::Python::GenerateTypeName(</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Ikarus::VanishingStress&lt;std::array&lt;Ikarus::Impl::MatrixIndexPair,<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;3ul&gt;{{Ikarus::Impl::MatrixIndexPair{2ul,<sp/>1ul},<sp/>Ikarus::Impl::MatrixIndexPair{2ul,0ul},<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Ikarus::Impl::MatrixIndexPair{2ul,<sp/>2ul}}},&quot;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Dune::className&lt;Material&gt;()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;&gt;&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>includes)</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.first;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><ref refid="a00218_1a52604789ad84df5cf20d4571f90af39e" kindref="member">MAKE_MaterialFunction</ref>(pS,<sp/>PlaneStressClass,<sp/>storedEnergy,<sp/>3);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><ref refid="a00218_1a52604789ad84df5cf20d4571f90af39e" kindref="member">MAKE_MaterialFunction</ref>(pS,<sp/>PlaneStressClass,<sp/>stresses,<sp/>3);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><ref refid="a00218_1a52604789ad84df5cf20d4571f90af39e" kindref="member">MAKE_MaterialFunction</ref>(pS,<sp/>PlaneStressClass,<sp/>tangentModuli,<sp/>3);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><ref refid="a00218_1a52604789ad84df5cf20d4571f90af39e" kindref="member">MAKE_MaterialFunction</ref>(pS,<sp/>PlaneStressClass,<sp/>storedEnergy,<sp/>6);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><ref refid="a00218_1a52604789ad84df5cf20d4571f90af39e" kindref="member">MAKE_MaterialFunction</ref>(pS,<sp/>PlaneStressClass,<sp/>stresses,<sp/>6);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><ref refid="a00218_1a52604789ad84df5cf20d4571f90af39e" kindref="member">MAKE_MaterialFunction</ref>(pS,<sp/>PlaneStressClass,<sp/>tangentModuli,<sp/>6);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/>cls.def(</highlight><highlight class="stringliteral">&quot;asPlaneStress&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[](<ref refid="a01492" kindref="compound">Material</ref>&amp;<sp/>self)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="a00384_1ad43f50b1b1c3410c4a0c547be7ada4a0" kindref="member">planeStress</ref>(self);<sp/>});<sp/></highlight><highlight class="comment">/*<sp/>no<sp/>keep_alive<sp/>since<sp/>planeStress<sp/>copies<sp/>the<sp/>material<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">PlaneStrainClass<sp/>=<sp/></highlight><highlight class="keyword">decltype</highlight><highlight class="normal">(<ref refid="a00384_1a7eab44c25129e4c2dfdf111fdef25a43" kindref="member">planeStrain</ref>(std::declval&lt;Material&gt;()));</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>pStrain<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>Dune::Python::insertClass&lt;PlaneStrainClass&gt;(</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scope,<sp/>std::string(</highlight><highlight class="stringliteral">&quot;PlaneStrain_&quot;</highlight><highlight class="normal">)<sp/>+<sp/>materialname,</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Dune::Python::GenerateTypeName(</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Ikarus::VanishingStrain&lt;std::array&lt;Ikarus::Impl::MatrixIndexPair,<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;3ul&gt;{{Ikarus::Impl::MatrixIndexPair{2ul,<sp/>1ul},<sp/>Ikarus::Impl::MatrixIndexPair{2ul,0ul},<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Ikarus::Impl::MatrixIndexPair{2ul,<sp/>2ul}}},&quot;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Dune::className&lt;Material&gt;()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;&gt;&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>includes)</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.first;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><ref refid="a00218_1a52604789ad84df5cf20d4571f90af39e" kindref="member">MAKE_MaterialFunction</ref>(pStrain,<sp/>PlaneStrainClass,<sp/>storedEnergy,<sp/>3);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><ref refid="a00218_1a52604789ad84df5cf20d4571f90af39e" kindref="member">MAKE_MaterialFunction</ref>(pStrain,<sp/>PlaneStrainClass,<sp/>stresses,<sp/>3);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><ref refid="a00218_1a52604789ad84df5cf20d4571f90af39e" kindref="member">MAKE_MaterialFunction</ref>(pStrain,<sp/>PlaneStrainClass,<sp/>tangentModuli,<sp/>3);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><ref refid="a00218_1a52604789ad84df5cf20d4571f90af39e" kindref="member">MAKE_MaterialFunction</ref>(pStrain,<sp/>PlaneStrainClass,<sp/>storedEnergy,<sp/>6);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><ref refid="a00218_1a52604789ad84df5cf20d4571f90af39e" kindref="member">MAKE_MaterialFunction</ref>(pStrain,<sp/>PlaneStrainClass,<sp/>stresses,<sp/>6);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><ref refid="a00218_1a52604789ad84df5cf20d4571f90af39e" kindref="member">MAKE_MaterialFunction</ref>(pStrain,<sp/>PlaneStrainClass,<sp/>tangentModuli,<sp/>6);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/>cls.def(</highlight><highlight class="stringliteral">&quot;asPlaneStrain&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[](<ref refid="a01492" kindref="compound">Material</ref>&amp;<sp/>self)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="a00384_1a7eab44c25129e4c2dfdf111fdef25a43" kindref="member">planeStrain</ref>(self);<sp/>});<sp/></highlight><highlight class="comment">/*<sp/>no<sp/>keep_alive<sp/>since<sp/>planeStrain<sp/>copies<sp/>the<sp/>material<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">ShellMaterialClass<sp/>=<sp/></highlight><highlight class="keyword">decltype</highlight><highlight class="normal">(<ref refid="a00384_1a9a1d1c81201b4c4c8cbee139df43b5d6" kindref="member">shellMaterial</ref>(std::declval&lt;Material&gt;()));</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>shellmaterial<sp/>=</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Dune::Python::insertClass&lt;ShellMaterialClass&gt;(</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scope,<sp/>std::string(</highlight><highlight class="stringliteral">&quot;Shell_&quot;</highlight><highlight class="normal">)<sp/>+<sp/>materialname,</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Dune::Python::GenerateTypeName(</highlight><highlight class="stringliteral">&quot;Ikarus::VanishingStress&lt;std::array&lt;Ikarus::Impl::MatrixIndexPair,<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;1ul&gt;{{Ikarus::Impl::MatrixIndexPair{2ul,<sp/>2ul}}},&quot;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Dune::className&lt;Material&gt;()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;&gt;&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>includes)</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.first;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><ref refid="a00218_1a52604789ad84df5cf20d4571f90af39e" kindref="member">MAKE_MaterialFunction</ref>(shellmaterial,<sp/>ShellMaterialClass,<sp/>storedEnergy,<sp/>5);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><ref refid="a00218_1a52604789ad84df5cf20d4571f90af39e" kindref="member">MAKE_MaterialFunction</ref>(shellmaterial,<sp/>ShellMaterialClass,<sp/>stresses,<sp/>5);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><ref refid="a00218_1a52604789ad84df5cf20d4571f90af39e" kindref="member">MAKE_MaterialFunction</ref>(shellmaterial,<sp/>ShellMaterialClass,<sp/>tangentModuli,<sp/>5);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><ref refid="a00218_1a52604789ad84df5cf20d4571f90af39e" kindref="member">MAKE_MaterialFunction</ref>(shellmaterial,<sp/>ShellMaterialClass,<sp/>storedEnergy,<sp/>6);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><ref refid="a00218_1a52604789ad84df5cf20d4571f90af39e" kindref="member">MAKE_MaterialFunction</ref>(shellmaterial,<sp/>ShellMaterialClass,<sp/>stresses,<sp/>6);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><ref refid="a00218_1a52604789ad84df5cf20d4571f90af39e" kindref="member">MAKE_MaterialFunction</ref>(shellmaterial,<sp/>ShellMaterialClass,<sp/>tangentModuli,<sp/>6);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/>cls.def(</highlight><highlight class="stringliteral">&quot;asShellMaterial&quot;</highlight><highlight class="normal">,<sp/>[](<ref refid="a01492" kindref="compound">Material</ref>&amp;<sp/>self)<sp/>{</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="a00384_1a9a1d1c81201b4c4c8cbee139df43b5d6" kindref="member">shellMaterial</ref>(self);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/>});<sp/></highlight><highlight class="comment">/*<sp/>no<sp/>keep_alive<sp/>since<sp/>shellMaterial<sp/>copies<sp/>the<sp/>material<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">BeamMaterialClass<sp/>=<sp/></highlight><highlight class="keyword">decltype</highlight><highlight class="normal">(<ref refid="a00384_1a9b582bcc3c887a57428b25984bc6f7ac" kindref="member">beamMaterial</ref>(std::declval&lt;Material&gt;()));</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>beammaterial<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>Dune::Python::insertClass&lt;BeamMaterialClass&gt;(</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scope,<sp/>std::string(</highlight><highlight class="stringliteral">&quot;Beam_&quot;</highlight><highlight class="normal">)<sp/>+<sp/>materialname,</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Dune::Python::GenerateTypeName(</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Ikarus::VanishingStress&lt;std::array&lt;Ikarus::Impl::MatrixIndexPair,<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;2ul&gt;{{Impl::MatrixIndexPair{1,<sp/>1},Ikarus::Impl::MatrixIndexPair{2ul,<sp/>2ul}}},&quot;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Dune::className&lt;Material&gt;()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;&gt;&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>includes)</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.first;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><ref refid="a00218_1a52604789ad84df5cf20d4571f90af39e" kindref="member">MAKE_MaterialFunction</ref>(beammaterial,<sp/>BeamMaterialClass,<sp/>storedEnergy,<sp/>4);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><ref refid="a00218_1a52604789ad84df5cf20d4571f90af39e" kindref="member">MAKE_MaterialFunction</ref>(beammaterial,<sp/>BeamMaterialClass,<sp/>stresses,<sp/>4);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><ref refid="a00218_1a52604789ad84df5cf20d4571f90af39e" kindref="member">MAKE_MaterialFunction</ref>(beammaterial,<sp/>BeamMaterialClass,<sp/>tangentModuli,<sp/>4);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><ref refid="a00218_1a52604789ad84df5cf20d4571f90af39e" kindref="member">MAKE_MaterialFunction</ref>(beammaterial,<sp/>BeamMaterialClass,<sp/>storedEnergy,<sp/>6);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><ref refid="a00218_1a52604789ad84df5cf20d4571f90af39e" kindref="member">MAKE_MaterialFunction</ref>(beammaterial,<sp/>BeamMaterialClass,<sp/>stresses,<sp/>6);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><ref refid="a00218_1a52604789ad84df5cf20d4571f90af39e" kindref="member">MAKE_MaterialFunction</ref>(beammaterial,<sp/>BeamMaterialClass,<sp/>tangentModuli,<sp/>6);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/>cls.def(</highlight><highlight class="stringliteral">&quot;asBeamMaterial&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[](<ref refid="a01492" kindref="compound">Material</ref>&amp;<sp/>self)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="a00384_1a9b582bcc3c887a57428b25984bc6f7ac" kindref="member">beamMaterial</ref>(self);<sp/>});<sp/></highlight><highlight class="comment">/*<sp/>no<sp/>keep_alive<sp/>since<sp/>beamMaterial<sp/>copies<sp/>the<sp/>material<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal">}</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198" refid="a00218_1a3b167811a24da0f84173e9309cb1fdb9" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAKE_MATERIAL_REGISTERY_FUNCTION(name,<sp/>vecSize)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="199"><highlight class="preprocessor"><sp/><sp/>template<sp/>&lt;class<sp/>Material,<sp/>class...<sp/>options&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="200"><highlight class="preprocessor"><sp/><sp/>void<sp/>register##name(pybind11::handle<sp/>scope,<sp/>pybind11::class_&lt;Material,<sp/>options...&gt;<sp/>cls)<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="201"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>Ikarus::Python::registerMaterial&lt;Material,<sp/>vecSize&gt;(scope,<sp/>cls);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="202"><highlight class="preprocessor"><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204" refid="a00398_1a2cdc302115d5d01f08f150303127978d" refkind="member"><highlight class="normal"><ref refid="a00398_1a2cdc302115d5d01f08f150303127978d" kindref="member">MAKE_MATERIAL_REGISTERY_FUNCTION</ref>(<ref refid="a01496" kindref="compound">LinearElasticity</ref>,<sp/>6);</highlight></codeline>
<codeline lineno="205" refid="a00398_1a3d042e3d4c085fd281a2d263ece077ee" refkind="member"><highlight class="normal"><ref refid="a00398_1a2cdc302115d5d01f08f150303127978d" kindref="member">MAKE_MATERIAL_REGISTERY_FUNCTION</ref>(<ref refid="a01504" kindref="compound">StVenantKirchhoff</ref>,<sp/>6);</highlight></codeline>
<codeline lineno="206" refid="a00398_1a20c0ab75a990e72f965df8d8172c99b6" refkind="member"><highlight class="normal"><ref refid="a00398_1a2cdc302115d5d01f08f150303127978d" kindref="member">MAKE_MATERIAL_REGISTERY_FUNCTION</ref>(<ref refid="a01500" kindref="compound">NeoHooke</ref>,<sp/>6);</highlight></codeline>
<codeline lineno="207"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>Ikarus::Python</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/__w/ikarus/ikarus/repo/ikarus/python/finiteelements/material.hh"/>
  </compounddef>
</doxygen>
