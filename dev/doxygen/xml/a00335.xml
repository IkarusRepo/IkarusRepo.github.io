<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="a00335" kind="file" language="C++">
    <compoundname>utils.hh</compoundname>
    <includes local="no">dune/python/pybind11/eigen.h</includes>
    <includes local="no">dune/python/pybind11/operators.h</includes>
    <includes local="no">dune/python/pybind11/pybind11.h</includes>
    <includes refid="a00032" local="no">ikarus/utils/tensorutils.hh</includes>
    <includedby refid="a00347" local="yes">_ikarus.cc</includedby>
    <incdepgraph>
      <node id="20">
        <label>ikarus/assembler/dirichletbcenforcement.hh</label>
        <link refid="a00176"/>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>ikarus/finiteelements/mechanics/materials/tags.hh</label>
        <link refid="a00242"/>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>ikarus/utils/concepts.hh</label>
        <link refid="a00047"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>ikarus/utils/makeenum.hh</label>
        <link refid="a00005"/>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>ikarus/utils/math.hh</label>
        <link refid="a00038"/>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>ikarus/utils/tensorutils.hh</label>
        <link refid="a00032"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>ikarus/utils/traits.hh</label>
        <link refid="a00011"/>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>utils.hh</label>
        <link refid="a00335"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>Eigen/Dense</label>
      </node>
      <node id="18">
        <label>Eigen/Sparse</label>
      </node>
      <node id="19">
        <label>autodiff/forward/dual/dual.hpp</label>
      </node>
      <node id="11">
        <label>concepts</label>
      </node>
      <node id="22">
        <label>dune/common/exceptions.hh</label>
      </node>
      <node id="27">
        <label>dune/common/hybridutilities.hh</label>
      </node>
      <node id="9">
        <label>dune/common/promotiontraits.hh</label>
      </node>
      <node id="15">
        <label>dune/functions/functionspacebases/basistags.hh</label>
      </node>
      <node id="16">
        <label>dune/functions/functionspacebases/lagrangebasis.hh</label>
      </node>
      <node id="2">
        <label>dune/python/pybind11/eigen.h</label>
      </node>
      <node id="3">
        <label>dune/python/pybind11/operators.h</label>
      </node>
      <node id="4">
        <label>dune/python/pybind11/pybind11.h</label>
      </node>
      <node id="25">
        <label>functional</label>
      </node>
      <node id="6">
        <label>numeric</label>
      </node>
      <node id="7">
        <label>ranges</label>
      </node>
      <node id="26">
        <label>tuple</label>
      </node>
      <node id="12">
        <label>type_traits</label>
      </node>
      <node id="8">
        <label>unsupported/Eigen/CXX11/Tensor</label>
      </node>
      <node id="13">
        <label>utility</label>
      </node>
      <node id="14">
        <label>vector</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>_ikarus.cc</label>
        <link refid="a00347"/>
      </node>
      <node id="1">
        <label>utils.hh</label>
        <link refid="a00335"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="a00379_1ga1fbedbac54712740abe25ceab2990472" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void addBindingsToUtils</definition>
        <argsstring>()</argsstring>
        <name>addBindingsToUtils</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>Converts a square 1x1, 2x2 or 3x3 matrix to a Voigt notation vector.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>E</parametername>
</parameternamelist>
<parameterdescription>
<para>Input matrix of size (size x size). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>isStrain</parametername>
</parameternamelist>
<parameterdescription>
<para>Flag indicating whether the conversion is for strain (true) or not (false) (default is true).. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Vector with components in Voigt notation vector.</para>
</simplesect>
This function converts a square matrix to a Voigt notation vector, which contains the unique components of the input matrix.</para>
<para>The optional isStrain parameter allows the user to specify whether the conversion is intended for strain calculations. If isStrain is true, the off-diagonal components are multiplied by 2, providing the correct Voigt notation for symmetric strain tensors.</para>
<para>Converts a vector given in Voigt notation to a matrix.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>EVoigt</parametername>
</parameternamelist>
<parameterdescription>
<para>Voigt notation vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>isStrain</parametername>
</parameternamelist>
<parameterdescription>
<para>Flag indicating whether the vector represents a strain (default is true). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Matrix corresponding to the vector in Voigt notation.</para>
</simplesect>
This function converts a vector given in Voigt notation to the corresponding matrix. The conversion depends on the size The parameter <computeroutput>isStrain</computeroutput> is used to determine the conversion factor for off-diagonal components, which need to be divided by 2 in the matrix representation if the quantity is a strain tensor.</para>
<para>The function requires that the size of the Voigt notation vector is valid (1, 3, or 6).</para>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/python/ikarus/utils/utils.hh" line="10" column="6" bodyfile="/__w/ikarus/ikarus/repo/python/ikarus/utils/utils.hh" bodystart="10" bodyend="57"/>
        <referencedby refid="a00347_1a0e4f7cface71bec1c24bbed3aaa798d8" compoundref="a00347" startline="70" endline="105">PYBIND11_MODULE</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>SPDX-FileCopyrightText:<sp/>2021-2025<sp/>The<sp/>Ikarus<sp/>Developers<sp/>mueller@ibb.uni-stuttgart.de</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>SPDX-License-Identifier:<sp/>LGPL-3.0-or-later</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;dune/python/pybind11/eigen.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;dune/python/pybind11/operators.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;dune/python/pybind11/pybind11.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="a00032" kindref="compound">ikarus/utils/tensorutils.hh</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10" refid="a00379_1ga1fbedbac54712740abe25ceab2990472" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="a00379_1ga1fbedbac54712740abe25ceab2990472" kindref="member">addBindingsToUtils</ref>()<sp/>{</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">py<sp/>=<sp/>pybind11;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">pybind11::literals;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="a00384" kindref="compound">Ikarus</ref>;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>utils<sp/>=<sp/>pybind11::module::import(</highlight><highlight class="stringliteral">&quot;ikarus.utils&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/>utils.def(</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;toVoigt&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>[](Eigen::Matrix&lt;double,<sp/>Eigen::Dynamic,<sp/>Eigen::Dynamic,<sp/>0,<sp/>3,<sp/>3&gt;<sp/>mat,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isStrain<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="a00380_1ga4304655095296ce9283e012587817a51" kindref="member">toVoigt</ref>(mat,<sp/>isStrain);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>py::arg(</highlight><highlight class="stringliteral">&quot;matrix&quot;</highlight><highlight class="normal">),<sp/>py::arg(</highlight><highlight class="stringliteral">&quot;isStrain&quot;</highlight><highlight class="normal">)<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/>utils.def(</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;fromVoigt&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>[](Eigen::Matrix&lt;double,<sp/>Eigen::Dynamic,<sp/>1,<sp/>0,<sp/>6,<sp/>1&gt;<sp/>vec,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isStrain<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="a00380_1gadc8e9e9f3838d0392a5fcf1e11374ee9" kindref="member">fromVoigt</ref>(vec,<sp/>isStrain);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>py::arg(</highlight><highlight class="stringliteral">&quot;vector&quot;</highlight><highlight class="normal">),<sp/>py::arg(</highlight><highlight class="stringliteral">&quot;isStrain&quot;</highlight><highlight class="normal">)<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="57"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/__w/ikarus/ikarus/repo/python/ikarus/utils/utils.hh"/>
  </compounddef>
</doxygen>
