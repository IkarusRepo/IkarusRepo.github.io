<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="a01404" kind="struct" language="C++" prot="public">
    <compoundname>Ikarus::ResultTypeBase</compoundname>
    <includes refid="a00305" local="no">ikarus/finiteelements/feresulttypes.hh</includes>
    <templateparamlist>
      <param>
        <type>template&lt; typename, int, int &gt; typename...</type>
        <declname>ResultTypes</declname>
        <defname>ResultTypes</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="a01404_1ac43d0000154d9bd08d7fdce3c279ccbb" prot="public" static="no">
        <type>std::tuple&lt; decltype(<ref refid="a00384_1a38629395c2d43ba44328b01ce0c0daf3" kindref="member">makeRT</ref>&lt; ResultTypes &gt;())... &gt;</type>
        <definition>using Ikarus::ResultTypeBase&lt; ResultTypes &gt;::SupportedResultTypes =  std::tuple&lt;decltype(makeRT&lt;ResultTypes&gt;())...&gt;</definition>
        <argsstring></argsstring>
        <name>SupportedResultTypes</name>
        <qualifiedname>Ikarus::ResultTypeBase::SupportedResultTypes</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/feresulttypes.hh" line="287" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/feresulttypes.hh" bodystart="287" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="a01404_1af33553a01e6940265639d561c31b7746" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>template&lt; typename, int, int &gt; typename</type>
            <declname>RT</declname>
            <defname>RT</defname>
          </param>
        </templateparamlist>
        <type>consteval bool</type>
        <definition>static consteval bool Ikarus::ResultTypeBase&lt; ResultTypes &gt;::supportsResultType</definition>
        <argsstring>()</argsstring>
        <name>supportsResultType</name>
        <qualifiedname>Ikarus::ResultTypeBase::supportsResultType</qualifiedname>
        <briefdescription>
<para>Returns whether a ResultType is provided by the element. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>RT</parametername>
</parameternamelist>
<parameterdescription>
<para>requested ResultType </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/feresulttypes.hh" line="283" column="25" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/feresulttypes.hh" bodystart="283" bodyend="285"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Base class for element definitions that provides common functionality for <ref refid="a00390" kindref="compound">ResultTypes</ref>. </para>
    </briefdescription>
    <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername><ref refid="a00390" kindref="compound">ResultTypes</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>supported <ref refid="a00390" kindref="compound">ResultTypes</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>Ikarus::KirchhoffLoveShell&lt; PreFE, FE &gt;</label>
        <link refid="a01452"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>Ikarus::LinearElastic&lt; PreFE, FE, PRE &gt;</label>
        <link refid="a01468"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>Ikarus::NonLinearElastic&lt; PreFE, FE, PRE &gt;</label>
        <link refid="a01524"/>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>Ikarus::ResultTypeBase&lt; ResultTypes &gt;</label>
        <link refid="a01404"/>
      </node>
      <node id="9">
        <label>Ikarus::Truss&lt; PreFE, FE &gt;</label>
        <link refid="a01532"/>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>Ikarus::ResultTypeBase&lt; ResultTypes::PK2Stress, ResultTypes::PK2StressFull &gt;</label>
        <link refid="a01404"/>
        <childnode refid="1" relation="template-instance">
          <edgelabel>&lt; ResultTypes::PK2Stress, ResultTypes::PK2StressFull &gt;</edgelabel>
        </childnode>
      </node>
      <node id="8">
        <label>Ikarus::ResultTypeBase&lt; ResultTypes::cauchyAxialForce, ResultTypes::PK2AxialForce, ResultTypes::linearAxialForce &gt;</label>
        <link refid="a01404"/>
        <childnode refid="1" relation="template-instance">
          <edgelabel>&lt; ResultTypes::cauchyAxialForce, ResultTypes::PK2AxialForce, ResultTypes::linearAxialForce &gt;</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>Ikarus::ResultTypeBase&lt; ResultTypes::linearStress, ResultTypes::linearStressFull &gt;</label>
        <link refid="a01404"/>
        <childnode refid="1" relation="template-instance">
          <edgelabel>&lt; ResultTypes::linearStress, ResultTypes::linearStressFull &gt;</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>Ikarus::ResultTypeBase&lt;&gt;</label>
        <link refid="a01404"/>
        <childnode refid="1" relation="template-instance">
          <edgelabel>&lt;&gt;</edgelabel>
        </childnode>
      </node>
    </inheritancegraph>
    <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/feresulttypes.hh" line="276" column="1" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/feresulttypes.hh" bodystart="277" bodyend="288"/>
    <listofallmembers>
      <member refid="a01404_1ac43d0000154d9bd08d7fdce3c279ccbb" prot="public" virt="non-virtual"><scope>Ikarus::ResultTypeBase</scope><name>SupportedResultTypes</name></member>
      <member refid="a01404_1af33553a01e6940265639d561c31b7746" prot="public" virt="non-virtual"><scope>Ikarus::ResultTypeBase</scope><name>supportsResultType</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
