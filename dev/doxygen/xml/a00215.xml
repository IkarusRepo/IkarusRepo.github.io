<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="a00215" kind="file" language="C++">
    <compoundname>registerferequirements.hh</compoundname>
    <includes local="no">dune/python/common/typeregistry.hh</includes>
    <includes local="no">dune/python/pybind11/pybind11.h</includes>
    <includes refid="a00212" local="no">ikarus/python/finiteelements/scalarwrapper.hh</includes>
    <includedby refid="a00221" local="no">fe.hh</includedby>
    <incdepgraph>
      <node id="1">
        <label>registerferequirements.hh</label>
        <link refid="a00215"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>ikarus/python/finiteelements/scalarwrapper.hh</label>
        <link refid="a00212"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>dune/common/referencehelper.hh</label>
      </node>
      <node id="2">
        <label>dune/python/common/typeregistry.hh</label>
      </node>
      <node id="3">
        <label>dune/python/pybind11/pybind11.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>fe.hh</label>
        <link refid="a00221"/>
      </node>
      <node id="1">
        <label>registerferequirements.hh</label>
        <link refid="a00215"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innernamespace refid="a00396">Ikarus</innernamespace>
    <innernamespace refid="a00414">Ikarus::Python</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>SPDX-FileCopyrightText:<sp/>2021-2025<sp/>The<sp/>Ikarus<sp/>Developers<sp/>mueller@ibb.uni-stuttgart.de</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>SPDX-License-Identifier:<sp/>LGPL-3.0-or-later</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;dune/python/common/typeregistry.hh&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;dune/python/pybind11/pybind11.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="a00212" kindref="compound">ikarus/python/finiteelements/scalarwrapper.hh</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="a00414" kindref="compound">Ikarus::Python</ref><sp/>{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">FE,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">...<sp/>options&gt;</highlight></codeline>
<codeline lineno="14" refid="a00414_1a32c3989a8ef1dbc581313ef17a0c6f5b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="a00414_1a32c3989a8ef1dbc581313ef17a0c6f5b" kindref="member">registerFERequirement</ref>(pybind11::handle<sp/>scope,<sp/>pybind11::class_&lt;FE,<sp/>options...&gt;<sp/>cls)<sp/>{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="a01387" kindref="compound">FERequirements</ref><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="a01627_1a86c0fea1b37e487f3c78cde6facca9c3" kindref="member">FE::Requirement</ref>;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">SolutionVectorType<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="a01387_1a438e8f848c50755740ef8ee17620a284" kindref="member">FERequirements::SolutionVectorType</ref>;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">ParameterType<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="a01387_1a50a1c42fc0b05811dfc370217fb70169" kindref="member">FERequirements::ParameterType</ref>;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">ParameterType<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="a01387_1a50a1c42fc0b05811dfc370217fb70169" kindref="member">FERequirements::ParameterType</ref>;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">pybind11::literals;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/>cls.def(</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;createRequirement&quot;</highlight><highlight class="normal">,<sp/>[](pybind11::object<sp/></highlight><highlight class="comment">/*<sp/>self<sp/>*/</highlight><highlight class="normal">)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="a01387" kindref="compound">FERequirements</ref>();<sp/>},</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pybind11::return_value_policy::copy);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>includes<sp/><sp/><sp/><sp/><sp/>=<sp/>Dune::Python::IncludeFiles{</highlight><highlight class="stringliteral">&quot;ikarus/finiteelements/ferequirements.hh&quot;</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>[req,<sp/>isNew]<sp/>=<sp/>Dune::Python::insertClass&lt;FERequirements&gt;(</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>scope,<sp/></highlight><highlight class="stringliteral">&quot;FERequirements&quot;</highlight><highlight class="normal">,<sp/>Dune::Python::GenerateTypeName(Dune::className&lt;FERequirements&gt;()),<sp/>includes);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isNew)<sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>req.def(<ref refid="a00396_1ac8243891c1b961e50a066140ab79a142" kindref="member">pybind11::init</ref>());</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>req.def(pybind11::init&lt;SolutionVectorType&amp;,<sp/>ParameterType&amp;&gt;());</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>req.def(</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;insertGlobalSolution&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[](<ref refid="a01387" kindref="compound">FERequirements</ref>&amp;<sp/>self,<sp/>SolutionVectorType<sp/>solVec)<sp/>{<sp/>self.<ref refid="a01387_1ada341483ec62ec030c03d43ab4bd86c9" kindref="member">insertGlobalSolution</ref>(solVec);<sp/>},</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;solutionVector&quot;</highlight><highlight class="normal">_a.noconvert());</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>req.def(</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;globalSolution&quot;</highlight><highlight class="normal">,<sp/>[](<ref refid="a01387" kindref="compound">FERequirements</ref>&amp;<sp/>self)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.<ref refid="a01387_1a523ed390dfea00379b5b638e523ddb74" kindref="member">globalSolution</ref>();<sp/>},</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pybind11::return_value_policy::reference_internal);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>req.def(</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;insertParameter&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[](<ref refid="a01387" kindref="compound">FERequirements</ref>&amp;<sp/>self,<sp/><ref refid="a01751" kindref="compound">ScalarWrapper&lt;double&gt;</ref>&amp;<sp/>parVal)<sp/>{<sp/>self.<ref refid="a01387_1aafb4ad2fa6c16a3845596f76e6cdeb16" kindref="member">insertParameter</ref>(parVal.<ref refid="a01751_1a0f885d047f898e549e8ece9cac3adea8" kindref="member">value</ref>());<sp/>},</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pybind11::keep_alive&lt;1,<sp/>2&gt;(),<sp/></highlight><highlight class="stringliteral">&quot;parameterValue&quot;</highlight><highlight class="normal">_a.noconvert());</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>req.def(</highlight><highlight class="stringliteral">&quot;parameter&quot;</highlight><highlight class="normal">,<sp/>[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="a01387" kindref="compound">FERequirements</ref>&amp;<sp/>self)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.<ref refid="a01387_1af11316c1f0fca6982a2d7497bc71a10c" kindref="member">parameter</ref>();<sp/>});</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="48"><highlight class="normal">}</highlight></codeline>
<codeline lineno="49"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>Ikarus::Python</highlight></codeline>
    </programlisting>
    <location file="/__w/ikarus/ikarus/repo/ikarus/python/finiteelements/registerferequirements.hh"/>
  </compounddef>
</doxygen>
