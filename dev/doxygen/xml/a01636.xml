<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="a01636" kind="struct" language="C++" prot="public">
    <compoundname>Ikarus::Vtk::Writer</compoundname>
    <basecompoundref prot="public" virt="non-virtual">Base</basecompoundref>
    <includes refid="a02867" local="no">ikarus/io/vtkwriter.hh</includes>
    <templateparamlist>
      <param>
        <type>typename AS</type>
      </param>
      <param>
        <type>typename DC</type>
      </param>
      <param>
        <type>typename Base</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="a01636_1a48666f99819393e871c84b4f4bd4b816" prot="public" static="no">
        <type>AS</type>
        <definition>using Ikarus::Vtk::Writer&lt; AS, DC, Base &gt;::Assembler =  AS</definition>
        <argsstring></argsstring>
        <name>Assembler</name>
        <qualifiedname>Ikarus::Vtk::Writer::Assembler</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/io/vtkwriter.hh" line="83" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/io/vtkwriter.hh" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="a01636_1aadd66859407a6b1a5d7604e693348c00" prot="public" static="no">
        <type>typename Assembler::GridView</type>
        <definition>using Ikarus::Vtk::Writer&lt; AS, DC, Base &gt;::GridView =  typename Assembler::GridView</definition>
        <argsstring></argsstring>
        <name>GridView</name>
        <qualifiedname>Ikarus::Vtk::Writer::GridView</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/io/vtkwriter.hh" line="84" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/io/vtkwriter.hh" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="a01636_1af943a6fe7f917d909b06aaace360c129" prot="public" static="no">
        <type>typename Assembler::FERequirement</type>
        <definition>using Ikarus::Vtk::Writer&lt; AS, DC, Base &gt;::FERequirement =  typename Assembler::FERequirement</definition>
        <argsstring></argsstring>
        <name>FERequirement</name>
        <qualifiedname>Ikarus::Vtk::Writer::FERequirement</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/io/vtkwriter.hh" line="85" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/io/vtkwriter.hh" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="a01636_1aaac8aafaef3b80c862dd57fbf7b97279" prot="public" static="no">
        <type>typename Assembler::FEContainer</type>
        <definition>using Ikarus::Vtk::Writer&lt; AS, DC, Base &gt;::FEContainer =  typename Assembler::FEContainer</definition>
        <argsstring></argsstring>
        <name>FEContainer</name>
        <qualifiedname>Ikarus::Vtk::Writer::FEContainer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/io/vtkwriter.hh" line="86" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/io/vtkwriter.hh" bodystart="86" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="a01636_1a3a3fcd008921213a40a189cf5c947a08" prot="public" static="no">
        <type>typename std::remove_cvref_t&lt; <ref refid="a01636_1aaac8aafaef3b80c862dd57fbf7b97279" kindref="member">FEContainer</ref> &gt;::value_type</type>
        <definition>using Ikarus::Vtk::Writer&lt; AS, DC, Base &gt;::FEType =  typename std::remove_cvref_t&lt;FEContainer&gt;::value_type</definition>
        <argsstring></argsstring>
        <name>FEType</name>
        <qualifiedname>Ikarus::Vtk::Writer::FEType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/io/vtkwriter.hh" line="87" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/io/vtkwriter.hh" bodystart="87" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="a01636_1a700ee4a5f71f8985ee7e4364372c6895" prot="public" static="no">
        <type>DC</type>
        <definition>using Ikarus::Vtk::Writer&lt; AS, DC, Base &gt;::DataCollector =  DC</definition>
        <argsstring></argsstring>
        <name>DataCollector</name>
        <qualifiedname>Ikarus::Vtk::Writer::DataCollector</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/io/vtkwriter.hh" line="89" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/io/vtkwriter.hh" bodystart="89" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="a01636_1a7e43687c38b914c1c3805c0ebefff9bd" prot="public" static="no">
        <type>Base</type>
        <definition>using Ikarus::Vtk::Writer&lt; AS, DC, Base &gt;::VTKWriter =  Base</definition>
        <argsstring></argsstring>
        <name>VTKWriter</name>
        <qualifiedname>Ikarus::Vtk::Writer::VTKWriter</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/io/vtkwriter.hh" line="90" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/io/vtkwriter.hh" bodystart="90" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="a01636_1ad65e7e7e400b49e4c3e94a8413e0af10" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="a01636_1a48666f99819393e871c84b4f4bd4b816" kindref="member">Assembler</ref> &gt;</type>
        <definition>std::shared_ptr&lt;Assembler&gt; Ikarus::Vtk::Writer&lt; AS, DC, Base &gt;::assembler_</definition>
        <argsstring></argsstring>
        <name>assembler_</name>
        <qualifiedname>Ikarus::Vtk::Writer::assembler_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/io/vtkwriter.hh" line="182" column="19" bodyfile="/__w/ikarus/ikarus/repo/ikarus/io/vtkwriter.hh" bodystart="182" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="a01636_1a7f632eb9736d0518bfccc57782911611" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type></type>
        <definition>Ikarus::Vtk::Writer&lt; AS, DC, Base &gt;::Writer</definition>
        <argsstring>(std::shared_ptr&lt; AS &gt; assembler, Args... args)</argsstring>
        <name>Writer</name>
        <qualifiedname>Ikarus::Vtk::Writer::Writer</qualifiedname>
        <param>
          <type>std::shared_ptr&lt; AS &gt;</type>
          <declname>assembler</declname>
        </param>
        <param>
          <type>Args...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
<para>Constructor with assembler and additional arguments. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>assembler</parametername>
</parameternamelist>
<parameterdescription>
<para>Shared pointer to assembler. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>args</parametername>
</parameternamelist>
<parameterdescription>
<para>Additional arguments. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/io/vtkwriter.hh" line="99" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/io/vtkwriter.hh" bodystart="99" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="a01636_1a2bd5df12f7819102911d2ec09ce8a977" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename DC_</type>
          </param>
          <param>
            <type>class...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type></type>
        <definition>Ikarus::Vtk::Writer&lt; AS, DC, Base &gt;::Writer</definition>
        <argsstring>(std::shared_ptr&lt; AS &gt; assembler, DC_ &amp;&amp;dc, Args... args)</argsstring>
        <name>Writer</name>
        <qualifiedname>Ikarus::Vtk::Writer::Writer</qualifiedname>
        <param>
          <type>std::shared_ptr&lt; AS &gt;</type>
          <declname>assembler</declname>
        </param>
        <param>
          <type>DC_ &amp;&amp;</type>
          <declname>dc</declname>
        </param>
        <param>
          <type>Args...</type>
          <declname>args</declname>
        </param>
    <requiresclause>Concepts::DataCollector&lt;std::decay_t&lt;DC_&gt;&gt;    </requiresclause>
        <briefdescription>
<para>Constructor with assembler, data collector, and additional arguments. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>assembler</parametername>
</parameternamelist>
<parameterdescription>
<para>Shared pointer to assembler. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dc</parametername>
</parameternamelist>
<parameterdescription>
<para>Data collector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>args</parametername>
</parameternamelist>
<parameterdescription>
<para>Additional arguments. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/io/vtkwriter.hh" line="112" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/io/vtkwriter.hh" bodystart="112" bodyend="114"/>
      </memberdef>
      <memberdef kind="function" id="a01636_1a658290b81fbe3d75d228ea393f5a6d47" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename RF</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Ikarus::Vtk::Writer&lt; AS, DC, Base &gt;::addResultFunction</definition>
        <argsstring>(RF &amp;&amp;resultFunction, DataTag dataTag=DataTag::asPointData)</argsstring>
        <name>addResultFunction</name>
        <qualifiedname>Ikarus::Vtk::Writer::addResultFunction</qualifiedname>
        <param>
          <type>RF &amp;&amp;</type>
          <declname>resultFunction</declname>
        </param>
        <param>
          <type><ref refid="a00394_1af59748ac04116ae85cd64ea8675d273b" kindref="member">DataTag</ref></type>
          <declname>dataTag</declname>
          <defval><ref refid="a00394_1af59748ac04116ae85cd64ea8675d273ba68cd52d11d0547e9fa755ed70680591b" kindref="member">DataTag::asPointData</ref></defval>
        </param>
        <briefdescription>
<para>Adds a result function for the given data tag. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>RF</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of the result function. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>resultFunction</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="a01616" kindref="compound">Ikarus::ResultFunction</ref>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dataTag</parametername>
</parameternamelist>
<parameterdescription>
<para>The data tag (defaults to <ref refid="a00394_1af59748ac04116ae85cd64ea8675d273ba68cd52d11d0547e9fa755ed70680591b" kindref="member">DataTag::asPointData</ref>). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/io/vtkwriter.hh" line="124" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/io/vtkwriter.hh" bodystart="124" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="a01636_1a80776ad077f50b77de658392cb8736fe" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>template&lt; typename, int, int &gt; class</type>
            <declname>RT</declname>
            <defname>RT</defname>
          </param>
          <param>
            <type>typename UserFunction</type>
            <defval>Ikarus::Impl::DefaultUserFunction</defval>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Ikarus::Vtk::Writer&lt; AS, DC, Base &gt;::addResult</definition>
        <argsstring>(DataTag dataTag=DataTag::asPointData, UserFunction &amp;&amp;userFunction={})</argsstring>
        <name>addResult</name>
        <qualifiedname>Ikarus::Vtk::Writer::addResult</qualifiedname>
        <param>
          <type><ref refid="a00394_1af59748ac04116ae85cd64ea8675d273b" kindref="member">DataTag</ref></type>
          <declname>dataTag</declname>
          <defval><ref refid="a00394_1af59748ac04116ae85cd64ea8675d273ba68cd52d11d0547e9fa755ed70680591b" kindref="member">DataTag::asPointData</ref></defval>
        </param>
        <param>
          <type>UserFunction &amp;&amp;</type>
          <declname>userFunction</declname>
          <defval>{}</defval>
        </param>
    <requiresclause>(Concepts::ResultType&lt;RT&gt;)    </requiresclause>
        <briefdescription>
<para>Adds a result for the given data tag. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>RT</parametername>
</parameternamelist>
<parameterdescription>
<para>Result type template. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dataTag</parametername>
</parameternamelist>
<parameterdescription>
<para>The data tag (defaults to <ref refid="a00394_1af59748ac04116ae85cd64ea8675d273ba68cd52d11d0547e9fa755ed70680591b" kindref="member">DataTag::asPointData</ref>). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/io/vtkwriter.hh" line="139" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/io/vtkwriter.hh" bodystart="139" bodyend="142"/>
      </memberdef>
      <memberdef kind="function" id="a01636_1a1e3b740ff000dacda0ade44cc0646d9d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ikarus::Vtk::Writer&lt; AS, DC, Base &gt;::addAllResults</definition>
        <argsstring>(DataTag dataTag=DataTag::asPointData)</argsstring>
        <name>addAllResults</name>
        <qualifiedname>Ikarus::Vtk::Writer::addAllResults</qualifiedname>
        <param>
          <type><ref refid="a00394_1af59748ac04116ae85cd64ea8675d273b" kindref="member">DataTag</ref></type>
          <declname>dataTag</declname>
          <defval><ref refid="a00394_1af59748ac04116ae85cd64ea8675d273ba68cd52d11d0547e9fa755ed70680591b" kindref="member">DataTag::asPointData</ref></defval>
        </param>
        <briefdescription>
<para>Adds all results for the given data tag. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dataTag</parametername>
</parameternamelist>
<parameterdescription>
<para>The data tag (defaults to <ref refid="a00394_1af59748ac04116ae85cd64ea8675d273ba68cd52d11d0547e9fa755ed70680591b" kindref="member">DataTag::asPointData</ref>). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/io/vtkwriter.hh" line="149" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/io/vtkwriter.hh" bodystart="149" bodyend="153"/>
      </memberdef>
      <memberdef kind="function" id="a01636_1a40effe127a60fe7ae01bb7511a581d08" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Basis</type>
          </param>
          <param>
            <type>typename R</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Ikarus::Vtk::Writer&lt; AS, DC, Base &gt;::addInterpolation</definition>
        <argsstring>(R &amp;&amp;vals, const Basis &amp;basis, const std::string &amp;name, DataTag dataTag=DataTag::asPointData)</argsstring>
        <name>addInterpolation</name>
        <qualifiedname>Ikarus::Vtk::Writer::addInterpolation</qualifiedname>
        <param>
          <type>R &amp;&amp;</type>
          <declname>vals</declname>
        </param>
        <param>
          <type>const Basis &amp;</type>
          <declname>basis</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="a00394_1af59748ac04116ae85cd64ea8675d273b" kindref="member">DataTag</ref></type>
          <declname>dataTag</declname>
          <defval><ref refid="a00394_1af59748ac04116ae85cd64ea8675d273ba68cd52d11d0547e9fa755ed70680591b" kindref="member">DataTag::asPointData</ref></defval>
        </param>
        <briefdescription>
<para>Adds interpolation data for the given basis and container. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Container</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of the container used by the gridfunction. This can be deduced for power basis and scalarbasis, otherwise define a Dune::FieldVector&lt;ctype, dim&gt; yourself <linebreak/>
 This only works properly with scalar, power and scalar subspacebasis at the moment. If you need more granular control over your output format, create the gridFunction yourself and add it with <computeroutput>writer.addPointData(gridFuntion,
  fieldInfo)</computeroutput> manually </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vals</parametername>
</parameternamelist>
<parameterdescription>
<para>Coefficient vector to be interpolated. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>basis</parametername>
</parameternamelist>
<parameterdescription>
<para>The underlying basis, can be a subspacebasis </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the field. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dataTag</parametername>
</parameternamelist>
<parameterdescription>
<para>The data tag. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/io/vtkwriter.hh" line="169" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/io/vtkwriter.hh" bodystart="169" bodyend="179"/>
      </memberdef>
      </sectiondef>
    <requiresclause>(Concepts::FlatAssembler&lt;AS&gt; &amp;&amp; Concepts::DataCollector&lt;DC&gt;)    </requiresclause>
    <briefdescription>
<para>Manages writing results using VTK, based on assembler and data collector. </para>
    </briefdescription>
    <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>AS</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of the assembler. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>DC</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of the data collector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Base</parametername>
</parameternamelist>
<parameterdescription>
<para>Base class for VTK writer. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>Base</label>
      </node>
      <node id="1">
        <label>Ikarus::Vtk::Writer&lt; AS, DC, Base &gt;</label>
        <link refid="a01636"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>Base</label>
      </node>
      <node id="1">
        <label>Ikarus::Vtk::Writer&lt; AS, DC, Base &gt;</label>
        <link refid="a01636"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/__w/ikarus/ikarus/repo/ikarus/io/vtkwriter.hh" line="80" column="1" bodyfile="/__w/ikarus/ikarus/repo/ikarus/io/vtkwriter.hh" bodystart="81" bodyend="183"/>
    <listofallmembers>
      <member refid="a01636_1a1e3b740ff000dacda0ade44cc0646d9d" prot="public" virt="non-virtual"><scope>Ikarus::Vtk::Writer</scope><name>addAllResults</name></member>
      <member refid="a01636_1a40effe127a60fe7ae01bb7511a581d08" prot="public" virt="non-virtual"><scope>Ikarus::Vtk::Writer</scope><name>addInterpolation</name></member>
      <member refid="a01636_1a80776ad077f50b77de658392cb8736fe" prot="public" virt="non-virtual"><scope>Ikarus::Vtk::Writer</scope><name>addResult</name></member>
      <member refid="a01636_1a658290b81fbe3d75d228ea393f5a6d47" prot="public" virt="non-virtual"><scope>Ikarus::Vtk::Writer</scope><name>addResultFunction</name></member>
      <member refid="a01636_1a48666f99819393e871c84b4f4bd4b816" prot="public" virt="non-virtual"><scope>Ikarus::Vtk::Writer</scope><name>Assembler</name></member>
      <member refid="a01636_1ad65e7e7e400b49e4c3e94a8413e0af10" prot="private" virt="non-virtual"><scope>Ikarus::Vtk::Writer</scope><name>assembler_</name></member>
      <member refid="a01636_1a700ee4a5f71f8985ee7e4364372c6895" prot="public" virt="non-virtual"><scope>Ikarus::Vtk::Writer</scope><name>DataCollector</name></member>
      <member refid="a01636_1aaac8aafaef3b80c862dd57fbf7b97279" prot="public" virt="non-virtual"><scope>Ikarus::Vtk::Writer</scope><name>FEContainer</name></member>
      <member refid="a01636_1af943a6fe7f917d909b06aaace360c129" prot="public" virt="non-virtual"><scope>Ikarus::Vtk::Writer</scope><name>FERequirement</name></member>
      <member refid="a01636_1a3a3fcd008921213a40a189cf5c947a08" prot="public" virt="non-virtual"><scope>Ikarus::Vtk::Writer</scope><name>FEType</name></member>
      <member refid="a01636_1aadd66859407a6b1a5d7604e693348c00" prot="public" virt="non-virtual"><scope>Ikarus::Vtk::Writer</scope><name>GridView</name></member>
      <member refid="a01636_1a7e43687c38b914c1c3805c0ebefff9bd" prot="public" virt="non-virtual"><scope>Ikarus::Vtk::Writer</scope><name>VTKWriter</name></member>
      <member refid="a01636_1a7f632eb9736d0518bfccc57782911611" prot="public" virt="non-virtual"><scope>Ikarus::Vtk::Writer</scope><name>Writer</name></member>
      <member refid="a01636_1a2bd5df12f7819102911d2ec09ce8a977" prot="public" virt="non-virtual"><scope>Ikarus::Vtk::Writer</scope><name>Writer</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
