<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="a00254" kind="file" language="C++">
    <compoundname>ogden.hh</compoundname>
    <includes refid="a00263" local="no">ikarus/finiteelements/mechanics/materials/materialhelpers.hh</includes>
    <includes refid="a00242" local="no">ikarus/finiteelements/mechanics/materials/tags.hh</includes>
    <includes refid="a00032" local="no">ikarus/utils/tensorutils.hh</includes>
    <includedby refid="a00251" local="no">factory.hh</includedby>
    <incdepgraph>
      <node id="15">
        <label>ikarus/assembler/dirichletbcenforcement.hh</label>
        <link refid="a00176"/>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>ogden.hh</label>
        <link refid="a00254"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>ikarus/finiteelements/mechanics/materials/materialhelpers.hh</label>
        <link refid="a00263"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>ikarus/finiteelements/mechanics/materials/tags.hh</label>
        <link refid="a00242"/>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>ikarus/utils/concepts.hh</label>
        <link refid="a03012"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>ikarus/utils/makeenum.hh</label>
        <link refid="a00005"/>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>ikarus/utils/math.hh</label>
        <link refid="a00038"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>ikarus/utils/tensorutils.hh</label>
        <link refid="a00032"/>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>ikarus/utils/traits.hh</label>
        <link refid="a00011"/>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>Eigen/Dense</label>
      </node>
      <node id="13">
        <label>Eigen/Sparse</label>
      </node>
      <node id="14">
        <label>autodiff/forward/dual/dual.hpp</label>
      </node>
      <node id="7">
        <label>concepts</label>
      </node>
      <node id="17">
        <label>dune/common/exceptions.hh</label>
      </node>
      <node id="4">
        <label>dune/common/float_cmp.hh</label>
      </node>
      <node id="22">
        <label>dune/common/hybridutilities.hh</label>
      </node>
      <node id="26">
        <label>dune/common/promotiontraits.hh</label>
      </node>
      <node id="11">
        <label>dune/functions/functionspacebases/basistags.hh</label>
      </node>
      <node id="12">
        <label>dune/functions/functionspacebases/lagrangebasis.hh</label>
      </node>
      <node id="20">
        <label>functional</label>
      </node>
      <node id="24">
        <label>numeric</label>
      </node>
      <node id="3">
        <label>ranges</label>
      </node>
      <node id="21">
        <label>tuple</label>
      </node>
      <node id="8">
        <label>type_traits</label>
      </node>
      <node id="25">
        <label>unsupported/Eigen/CXX11/Tensor</label>
      </node>
      <node id="9">
        <label>utility</label>
      </node>
      <node id="10">
        <label>vector</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="4">
        <label>linearelastic.hh</label>
        <link refid="a00293"/>
      </node>
      <node id="3">
        <label>materials.hh</label>
        <link refid="a02991"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>ogden.hh</label>
        <link refid="a00254"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>factory.hh</label>
        <link refid="a00251"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>resultevaluators.hh</label>
        <link refid="a00338"/>
      </node>
      <node id="5">
        <label>material.hh</label>
        <link refid="a00218"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>_ikarus.cc</label>
        <link refid="a00359"/>
      </node>
      <node id="6">
        <label>materials.hh</label>
        <link refid="a02994"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="a01515" prot="public">Ikarus::Materials::OgdenT</innerclass>
    <innernamespace refid="a00396">Ikarus</innernamespace>
    <innernamespace refid="a00407">Ikarus::Materials</innernamespace>
    <briefdescription>
<para>Implementation of the Ogden material model. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>SPDX-FileCopyrightText:<sp/>2021-2025<sp/>The<sp/>Ikarus<sp/>Developers<sp/>mueller@ibb.uni-stuttgart.de</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>SPDX-License-Identifier:<sp/>LGPL-3.0-or-later</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="a00263" kindref="compound">ikarus/finiteelements/mechanics/materials/materialhelpers.hh</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="a00242" kindref="compound">ikarus/finiteelements/mechanics/materials/tags.hh</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="a00032" kindref="compound">ikarus/utils/tensorutils.hh</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="a00407" kindref="compound">Ikarus::Materials</ref><sp/>{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ST_,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n,<sp/>PrincipalStretchTags<sp/>tag&gt;</highlight></codeline>
<codeline lineno="40" refid="a01515" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="a01515" kindref="compound">OgdenT</ref></highlight></codeline>
<codeline lineno="41"><highlight class="normal">{</highlight></codeline>
<codeline lineno="42" refid="a01515_1ac3e4137441a45fd58b4dc9f9f6d5fb9e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="a01515_1ac3e4137441a45fd58b4dc9f9f6d5fb9e" kindref="member">ScalarType</ref><sp/>=<sp/>ST_;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ST<sp/>=<sp/>ScalarType&gt;</highlight></codeline>
<codeline lineno="45" refid="a01515_1a2ad1ff72f65e6d792878a06d4dc2bf30" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="a01515_1a2ad1ff72f65e6d792878a06d4dc2bf30" kindref="member">PrincipalStretches</ref><sp/>=<sp/>Eigen::Vector&lt;ST,<sp/>3&gt;;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="a01515_1aa855e364c62dfcff5ee47ae04973e9a5" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/><ref refid="a00396_1aec3d3c4647af5c01e1bf18637b3c89fe" kindref="member">PrincipalStretchTags</ref><sp/><ref refid="a01515_1aa855e364c62dfcff5ee47ae04973e9a5" kindref="member">stretchTag</ref><sp/>=<sp/>tag;</highlight></codeline>
<codeline lineno="48" refid="a01515_1a4812a748c0df58031f26bf4d8bbff37e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="a01515_1a4812a748c0df58031f26bf4d8bbff37e" kindref="member">numMatParameters</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>n;</highlight></codeline>
<codeline lineno="49" refid="a01515_1a5b88a4ff271dcdde64f5a08fcadd9b85" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="a01515_1a5b88a4ff271dcdde64f5a08fcadd9b85" kindref="member">dim</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="50" refid="a01515_1a5828b2c22e985dc66871605fb834a873" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="a01515_1a5828b2c22e985dc66871605fb834a873" kindref="member">usesDeviatoricStretches</ref><sp/><sp/><sp/><sp/>=<sp/><ref refid="a01515_1aa855e364c62dfcff5ee47ae04973e9a5" kindref="member">stretchTag</ref><sp/>==<sp/><ref refid="a00396_1aec3d3c4647af5c01e1bf18637b3c89feaae6dc167631992e1312a197d5c3c39f8" kindref="member">PrincipalStretchTags::deviatoric</ref>;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ST<sp/>=<sp/>ScalarType&gt;</highlight></codeline>
<codeline lineno="53" refid="a01515_1ac33ad2eb2b73263e513dd3461c57f5df" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="a01515_1ac33ad2eb2b73263e513dd3461c57f5df" kindref="member">FirstDerivative</ref><sp/>=<sp/>Eigen::Vector&lt;ST,<sp/>dim&gt;;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ST<sp/>=<sp/>ScalarType&gt;</highlight></codeline>
<codeline lineno="55" refid="a01515_1a971bfbea9f8f2e1dd6f98f1acfaa8217" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="a01515_1a971bfbea9f8f2e1dd6f98f1acfaa8217" kindref="member">SecondDerivative</ref><sp/>=<sp/>Eigen::Matrix&lt;ST,<sp/>dim,<sp/>dim&gt;;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57" refid="a01515_1a0164eb06fa929e1608493879f3832c80" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="a01515_1a0164eb06fa929e1608493879f3832c80" kindref="member">MaterialParameters</ref><sp/>=<sp/>std::array&lt;double,<sp/>numMatParameters&gt;;</highlight></codeline>
<codeline lineno="58" refid="a01515_1a9b01e9124f3fa51d8a1a5881bd842bd9" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="a01515_1a9b01e9124f3fa51d8a1a5881bd842bd9" kindref="member">MaterialExponents</ref><sp/><sp/>=<sp/>std::array&lt;double,<sp/>numMatParameters&gt;;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60" refid="a01515_1af415cd72d105db7efb92a77286c3ed61" refkind="member"><highlight class="normal"><sp/><sp/>[[nodiscard]]<sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="a01515_1af415cd72d105db7efb92a77286c3ed61" kindref="member">name</ref>()<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ogden<sp/>(n<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(<ref refid="a01515_1a4812a748c0df58031f26bf4d8bbff37e" kindref="member">numMatParameters</ref>)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>stretch<sp/>type<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="a00396_1aef80b6b5b45dcfbea4f722f51a84f53f" kindref="member">toString</ref>(tag)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;)&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="70" refid="a01515_1a793fd3b05467714b5b630b904855f3ce" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="a01515_1a793fd3b05467714b5b630b904855f3ce" kindref="member">OgdenT</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="a01515_1a0164eb06fa929e1608493879f3832c80" kindref="member">MaterialParameters</ref>&amp;<sp/>mpt,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="a01515_1a9b01e9124f3fa51d8a1a5881bd842bd9" kindref="member">MaterialExponents</ref>&amp;<sp/>mex)</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>materialParameters_{mpt},</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>materialExponents_{mex}<sp/>{}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="77" refid="a01515_1a83461b830e07a4078ce77cda6b2af5a5" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="a01515_1a0164eb06fa929e1608493879f3832c80" kindref="member">MaterialParameters</ref><sp/><ref refid="a01515_1a83461b830e07a4078ce77cda6b2af5a5" kindref="member">materialParametersImpl</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>materialParameters_;<sp/>}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="82" refid="a01515_1a5123ba0830430d313b96a7bc53ba08ce" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="a01515_1a9b01e9124f3fa51d8a1a5881bd842bd9" kindref="member">MaterialExponents</ref>&amp;<sp/><ref refid="a01515_1a5123ba0830430d313b96a7bc53ba08ce" kindref="member">materialExponents</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>materialExponents_;<sp/>}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ST&gt;</highlight></codeline>
<codeline lineno="93" refid="a01515_1aedb6f5d097a629d1992873adfcfddaca" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="a01515_1aedb6f5d097a629d1992873adfcfddaca" kindref="member">storedEnergyImpl</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="a01515_1a2ad1ff72f65e6d792878a06d4dc2bf30" kindref="member">PrincipalStretches&lt;ST&gt;</ref>&amp;<sp/>lambda)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>mu<sp/><sp/><sp/><sp/>=<sp/>materialParameters_;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>alpha<sp/>=<sp/>materialExponents_;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>ST<sp/>energy{};</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>(<ref refid="a01515_1a5828b2c22e985dc66871605fb834a873" kindref="member">usesDeviatoricStretches</ref>)<sp/>{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>lambdaBar<sp/>=<sp/>Impl::deviatoricStretches(lambda);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>i<sp/>:<sp/>parameterRange())</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>energy<sp/>+=<sp/>mu[i]<sp/>/<sp/>alpha[i]<sp/>*<sp/>(lambdaBar.array().pow(alpha[i]).sum()<sp/>-<sp/>3);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>J<sp/><sp/><sp/><sp/>=<sp/>lambda[0]<sp/>*<sp/>lambda[1]<sp/>*<sp/>lambda[2];</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>logJ<sp/>=<sp/>log(J);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>i<sp/>:<sp/>parameterRange())</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>energy<sp/>+=<sp/>mu[i]<sp/>/<sp/>alpha[i]<sp/>*<sp/>(lambda.array().pow(alpha[i]).sum()<sp/>-<sp/>3)<sp/>-<sp/>mu[i]<sp/>*<sp/>logJ;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>energy;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ST&gt;</highlight></codeline>
<codeline lineno="121" refid="a01515_1a47d6472e966e0dfa7918237ea7e4fba8" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="a01515_1a47d6472e966e0dfa7918237ea7e4fba8" kindref="member">firstDerivativeImpl</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="a01515_1a2ad1ff72f65e6d792878a06d4dc2bf30" kindref="member">PrincipalStretches&lt;ST&gt;</ref>&amp;<sp/>lambda)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>mu<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>materialParameters_;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>alpha<sp/><sp/><sp/><sp/>=<sp/>materialExponents_;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>dWdLambda<sp/>=<sp/><ref refid="a01515_1ac33ad2eb2b73263e513dd3461c57f5df" kindref="member">FirstDerivative&lt;ST&gt;::Zero</ref>().eval();</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>(<ref refid="a01515_1a5828b2c22e985dc66871605fb834a873" kindref="member">usesDeviatoricStretches</ref>)<sp/>{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>lambdaBar<sp/><sp/><sp/><sp/>=<sp/>Impl::deviatoricStretches(lambda);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>dWdLambdaBar<sp/>=<sp/>Eigen::Array&lt;ST,<sp/>dim,<sp/>1&gt;::Zero().eval();</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>j<sp/>:<sp/>parameterRange())</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dWdLambdaBar<sp/>+=<sp/>mu[j]<sp/>*<sp/>lambdaBar.array().pow(alpha[j]<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ST<sp/>sumLambdaBar<sp/>=<sp/>(lambdaBar.array()<sp/>*<sp/>dWdLambdaBar).sum();</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dWdLambda<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>(lambdaBar.array()<sp/>*<sp/>dWdLambdaBar<sp/>-<sp/>(1.0<sp/>/<sp/>3.0)<sp/>*<sp/>sumLambdaBar)<sp/>/<sp/>lambda.array();</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>j<sp/>:<sp/>parameterRange())</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dWdLambda.array()<sp/>+=<sp/>(mu[j]<sp/>*<sp/>(lambda.array().pow(alpha[j])<sp/>-<sp/>1))<sp/>/<sp/>lambda.array();</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dWdLambda;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ST&gt;</highlight></codeline>
<codeline lineno="151" refid="a01515_1a0c57c366c288614b425baabf11930fa2" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="a01515_1a0c57c366c288614b425baabf11930fa2" kindref="member">secondDerivativeImpl</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="a01515_1a2ad1ff72f65e6d792878a06d4dc2bf30" kindref="member">PrincipalStretches&lt;ST&gt;</ref>&amp;<sp/>lambda)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>mu<sp/><sp/><sp/><sp/>=<sp/>materialParameters_;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>alpha<sp/>=<sp/>materialExponents_;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>dS<sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="a01515_1a971bfbea9f8f2e1dd6f98f1acfaa8217" kindref="member">SecondDerivative&lt;ST&gt;::Zero</ref>().eval();</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>(<ref refid="a01515_1a5828b2c22e985dc66871605fb834a873" kindref="member">usesDeviatoricStretches</ref>)<sp/>{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>lambdaBar<sp/>=<sp/>Impl::deviatoricStretches(lambda);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>dWdLambda<sp/>=<sp/><ref refid="a01515_1a47d6472e966e0dfa7918237ea7e4fba8" kindref="member">firstDerivativeImpl</ref>(lambda);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>lambdaBarPowSum<sp/>=<sp/>Eigen::Array&lt;ST,<sp/>dim,<sp/>1&gt;::Zero().eval();</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>p<sp/>:<sp/>parameterRange())</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lambdaBarPowSum[p]<sp/>=<sp/>lambdaBar.array().pow(alpha[p]).sum();</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>a<sp/>:<sp/>dimensionRange())<sp/>{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>b<sp/>:<sp/>dimensionRange())<sp/>{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(a<sp/>==<sp/>b)</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>p<sp/>:<sp/>parameterRange())</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dS(a,<sp/>b)<sp/>+=<sp/>mu[p]<sp/>*<sp/>alpha[p]<sp/>*<sp/>(1.0<sp/>/<sp/>3.0<sp/>*<sp/>pow(lambdaBar[a],<sp/>alpha[p])<sp/>+<sp/>1.0<sp/>/<sp/>9.0<sp/>*<sp/>lambdaBarPowSum[p]);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>p<sp/>:<sp/>parameterRange())</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dS(a,<sp/>b)<sp/>+=<sp/>mu[p]<sp/>*<sp/>alpha[p]<sp/>*</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(-(1.0<sp/>/<sp/>3.0)<sp/>*<sp/>(pow(lambdaBar[a],<sp/>alpha[p])<sp/>+<sp/>pow(lambdaBar[b],<sp/>alpha[p]))<sp/>+</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1.0<sp/>/<sp/>9.0<sp/>*<sp/>lambdaBarPowSum[p]);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dS(a,<sp/>b)<sp/>*=<sp/>1.0<sp/>/<sp/>(lambda[a]<sp/>*<sp/>lambda[b]);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(a<sp/>==<sp/>b)</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dS(a,<sp/>b)<sp/>-=<sp/>(2.0<sp/>/<sp/>lambda[a])<sp/>*<sp/>dWdLambda[a];</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>j<sp/>:<sp/>parameterRange())<sp/>{</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dS.diagonal().array()<sp/>+=</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(-2<sp/>*<sp/>mu[j]<sp/>*<sp/>(lambda.array().pow(alpha[j])<sp/>-<sp/>1)<sp/>+<sp/>mu[j]<sp/>*<sp/>lambda.array().pow(alpha[j])<sp/>*<sp/>alpha[j])<sp/>/</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lambda.array().square();</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dS;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>STO&gt;</highlight></codeline>
<codeline lineno="197" refid="a01515_1a6e193a52046c0fd18c9386f526c40ed2" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="a01515_1a6e193a52046c0fd18c9386f526c40ed2" kindref="member">rebind</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="a01515" kindref="compound">OgdenT&lt;STO, numMatParameters, stretchTag&gt;</ref>(materialParameters_,<sp/>materialExponents_);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><ref refid="a01515_1a0164eb06fa929e1608493879f3832c80" kindref="member">MaterialParameters</ref><sp/>materialParameters_;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><ref refid="a01515_1a9b01e9124f3fa51d8a1a5881bd842bd9" kindref="member">MaterialExponents</ref><sp/>materialExponents_;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parameterRange()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Dune::range(<ref refid="a01515_1a4812a748c0df58031f26bf4d8bbff37e" kindref="member">numMatParameters</ref>);<sp/>}</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>dimensionRange()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Dune::range(<ref refid="a01515_1a5b88a4ff271dcdde64f5a08fcadd9b85" kindref="member">dim</ref>);<sp/>}</highlight></codeline>
<codeline lineno="207"><highlight class="normal">};</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n,<sp/>PrincipalStretchTags<sp/>tag&gt;</highlight></codeline>
<codeline lineno="213" refid="a00407_1a7759118d563e476dc3b7e737df439f4d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="a01515" kindref="compound">Ogden</ref><sp/>=<sp/><ref refid="a01515" kindref="compound">OgdenT&lt;double, n, tag&gt;</ref>;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>Ikarus::Materials</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/hyperelastic/deviatoric/ogden.hh"/>
  </compounddef>
</doxygen>
