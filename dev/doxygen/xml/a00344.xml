<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="a00344" kind="file" language="C++">
    <compoundname>assemblermanipulatorbuildingblocks.hh</compoundname>
    <includes local="no">utility</includes>
    <includes local="no">dune/functions/backends/istlvectorbackend.hh</includes>
    <includes refid="a00347" local="no">ikarus/assembler/dirichletbcenforcement.hh</includes>
    <includes refid="a03065" local="no">ikarus/assembler/interface.hh</includes>
    <includes refid="a00203" local="no">ikarus/finiteelements/fehelper.hh</includes>
    <includes refid="a00197" local="no">ikarus/finiteelements/ferequirements.hh</includes>
    <includes refid="a03101" local="no">ikarus/utils/concepts.hh</includes>
    <includes refid="a03089" local="no">ikarus/utils/dirichletvalues.hh</includes>
    <includedby refid="a00341" local="no">assemblermanipulatorfuser.hh</includedby>
    <incdepgraph>
      <node id="1">
        <label>assemblermanipulatorbuildingblocks.hh</label>
        <link refid="a00344"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>ikarus/assembler/dirichletbcenforcement.hh</label>
        <link refid="a00347"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>ikarus/assembler/interface.hh</label>
        <link refid="a03065"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>ikarus/finiteelements/fehelper.hh</label>
        <link refid="a00203"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>ikarus/finiteelements/ferequirements.hh</label>
        <link refid="a00197"/>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>ikarus/finiteelements/feresulttypes.hh</label>
        <link refid="a00302"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>ikarus/finiteelements/mechanics/materials/tags.hh</label>
        <link refid="a00233"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>ikarus/utils/concepts.hh</label>
        <link refid="a03101"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>ikarus/utils/dirichletvalues.hh</label>
        <link refid="a03089"/>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>ikarus/utils/makeenum.hh</label>
        <link refid="a00011"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>ikarus/utils/math.hh</label>
        <link refid="a00044"/>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>ikarus/utils/tensorutils.hh</label>
        <link refid="a00032"/>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>ikarus/utils/traits.hh</label>
        <link refid="a00068"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>ikarus/utils/traversal.hh</label>
        <link refid="a00020"/>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>Eigen/Core</label>
      </node>
      <node id="21">
        <label>Eigen/Dense</label>
      </node>
      <node id="22">
        <label>Eigen/Sparse</label>
      </node>
      <node id="40">
        <label>algorithm</label>
      </node>
      <node id="23">
        <label>autodiff/forward/dual/dual.hpp</label>
      </node>
      <node id="45">
        <label>autodiff/forward/real/real.hpp</label>
      </node>
      <node id="16">
        <label>concepts</label>
      </node>
      <node id="41">
        <label>cstddef</label>
      </node>
      <node id="6">
        <label>dune/common/exceptions.hh</label>
      </node>
      <node id="27">
        <label>dune/common/hybridutilities.hh</label>
      </node>
      <node id="37">
        <label>dune/common/promotiontraits.hh</label>
      </node>
      <node id="9">
        <label>dune/common/referencehelper.hh</label>
      </node>
      <node id="3">
        <label>dune/functions/backends/istlvectorbackend.hh</label>
      </node>
      <node id="19">
        <label>dune/functions/functionspacebases/basistags.hh</label>
      </node>
      <node id="42">
        <label>dune/functions/functionspacebases/boundarydofs.hh</label>
      </node>
      <node id="43">
        <label>dune/functions/functionspacebases/flatmultiindex.hh</label>
      </node>
      <node id="20">
        <label>dune/functions/functionspacebases/lagrangebasis.hh</label>
      </node>
      <node id="44">
        <label>dune/functions/functionspacebases/subspacebasis.hh</label>
      </node>
      <node id="13">
        <label>dune/localfefunctions/manifolds/realTuple.hh</label>
      </node>
      <node id="11">
        <label>functional</label>
      </node>
      <node id="29">
        <label>iosfwd</label>
      </node>
      <node id="30">
        <label>map</label>
      </node>
      <node id="35">
        <label>numeric</label>
      </node>
      <node id="12">
        <label>optional</label>
      </node>
      <node id="8">
        <label>ranges</label>
      </node>
      <node id="31">
        <label>set</label>
      </node>
      <node id="26">
        <label>tuple</label>
      </node>
      <node id="17">
        <label>type_traits</label>
      </node>
      <node id="36">
        <label>unsupported/Eigen/CXX11/Tensor</label>
      </node>
      <node id="2">
        <label>utility</label>
      </node>
      <node id="18">
        <label>vector</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1">
        <label>assemblermanipulatorbuildingblocks.hh</label>
        <link refid="a00344"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>assemblermanipulatorfuser.hh</label>
        <link refid="a00341"/>
      </node>
    </invincdepgraph>
    <innerclass refid="a01262" prot="public">Ikarus::ScalarManipulator</innerclass>
    <innerclass refid="a01266" prot="public">Ikarus::VectorManipulator</innerclass>
    <innerclass refid="a01270" prot="public">Ikarus::MatrixManipulator</innerclass>
    <innernamespace refid="a00411">Ikarus</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>SPDX-FileCopyrightText:<sp/>2021-2025<sp/>The<sp/>Ikarus<sp/>Developers<sp/>mueller@ibb.uni-stuttgart.de</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>SPDX-License-Identifier:<sp/>LGPL-3.0-or-later</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;utility&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;dune/functions/backends/istlvectorbackend.hh&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="a00347" kindref="compound">ikarus/assembler/dirichletbcenforcement.hh</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="a03065" kindref="compound">ikarus/assembler/interface.hh</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="a00203" kindref="compound">ikarus/finiteelements/fehelper.hh</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="a00197" kindref="compound">ikarus/finiteelements/ferequirements.hh</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="a03101" kindref="compound">ikarus/utils/concepts.hh</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="a03089" kindref="compound">ikarus/utils/dirichletvalues.hh</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22" refid="a00411" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="a00411" kindref="compound">Ikarus</ref><sp/>{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Wrapper,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Assembler&gt;</highlight></codeline>
<codeline lineno="30" refid="a01262" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="a01262" kindref="compound">ScalarManipulator</ref></highlight></codeline>
<codeline lineno="31"><highlight class="normal">{</highlight></codeline>
<codeline lineno="32" refid="a01262_1ae6d1ae2d4630e6aefcece21ae861969d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="a01262_1ae6d1ae2d4630e6aefcece21ae861969d" kindref="member">WrappedAssembler</ref><sp/>=<sp/>Wrapper;</highlight></codeline>
<codeline lineno="33" refid="a01262_1aef57ffcaac072a4b0e6ba4c8fd2da511" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="a01262_1aef57ffcaac072a4b0e6ba4c8fd2da511" kindref="member">FEC</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Assembler::FEContainer;</highlight></codeline>
<codeline lineno="34" refid="a01262_1a8a0ded758481b53136e2972ee60b7325" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="a01262_1a8a0ded758481b53136e2972ee60b7325" kindref="member">DV</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Assembler::DirichletValuesType;</highlight></codeline>
<codeline lineno="35" refid="a01262_1a4c75930c7ccea42b2ac91f23e2a35361" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="a01262_1a4c75930c7ccea42b2ac91f23e2a35361" kindref="member">FERequirement</ref><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Assembler::FERequirement;</highlight></codeline>
<codeline lineno="36" refid="a01262_1a814c920d1c56e4581e8abf753d9786cc" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="a01262_1a814c920d1c56e4581e8abf753d9786cc" kindref="member">ScalarType</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Assembler::ScalarType;</highlight></codeline>
<codeline lineno="37" refid="a01262_1a58c797a347e9ef2ab41c6d9dfaaafdf2" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="a01298" kindref="compound">Interface</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="a01298" kindref="compound">ScalarAssembler&lt;WrappedAssembler, FEC, DV, ScalarType&gt;</ref>;</highlight></codeline>
<codeline lineno="38" refid="a01262_1abe3c798ea90c0aaef3e4d4c6577dcfd5" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/><ref refid="a01262_1abe3c798ea90c0aaef3e4d4c6577dcfd5" kindref="member">Interface</ref>;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40" refid="a01262_1a82dd99b0e222c3c99d56569ca235957b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="a01262_1a82dd99b0e222c3c99d56569ca235957b" kindref="member">FunctionType</ref><sp/>=<sp/>std::function&lt;void(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Assembler&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="a01262_1a4c75930c7ccea42b2ac91f23e2a35361" kindref="member">FERequirement</ref>&amp;,<sp/><ref refid="a00411_1af6f894084edd9109762b86222995ef2a" kindref="member">ScalarAffordance</ref>,<sp/><ref refid="a01262_1a814c920d1c56e4581e8abf753d9786cc" kindref="member">ScalarType</ref>&amp;)&gt;;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>F&gt;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">requires</highlight><highlight class="normal"><sp/><ref refid="a02095" kindref="compound">Concepts::IsFunctorWithArgs&lt;F, const Assembler&amp;, const FERequirement&amp;, ScalarAffordance, ScalarType&amp;&gt;</ref></highlight></codeline>
<codeline lineno="49" refid="a01262_1a4252146eeb5356107efe7bad29510d7c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="a01262_1a4252146eeb5356107efe7bad29510d7c" kindref="member">bind</ref>(F&amp;&amp;<sp/>f)<sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="a01262_1a287ad7034f7039a4c8710993381448da" kindref="member">sfs</ref>.emplace_back(std::forward&lt;F&gt;(f));</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="52" refid="a01262_1a287ad7034f7039a4c8710993381448da" refkind="member"><highlight class="normal"><sp/><sp/>std::vector&lt;FunctionType&gt;<sp/><ref refid="a01262_1a287ad7034f7039a4c8710993381448da" kindref="member">sfs</ref>;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="55" refid="a01262_1aba335c4956a927a322c511e523c7b6fe" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="a01262_1a814c920d1c56e4581e8abf753d9786cc" kindref="member">ScalarType</ref>&amp;<sp/><ref refid="a01262_1aba335c4956a927a322c511e523c7b6fe" kindref="member">getScalarImpl</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="a01262_1a4c75930c7ccea42b2ac91f23e2a35361" kindref="member">FERequirement</ref>&amp;<sp/>feRequirements,<sp/><ref refid="a00411_1af6f894084edd9109762b86222995ef2a" kindref="member">ScalarAffordance</ref><sp/>affordance)<sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="a01262_1a814c920d1c56e4581e8abf753d9786cc" kindref="member">ScalarType</ref>&amp;<sp/>sca<sp/>=<sp/>underlying().base_getScalarImpl(feRequirements,<sp/>affordance);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>sf<sp/>:<sp/><ref refid="a01262_1a287ad7034f7039a4c8710993381448da" kindref="member">sfs</ref>)</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sf(underlying().base(),<sp/>feRequirements,<sp/>affordance,<sp/>sca);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sca;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//&gt;<sp/>CRTP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>underlying()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal"><ref refid="a01262_1ae6d1ae2d4630e6aefcece21ae861969d" kindref="member">WrappedAssembler</ref>&amp;</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(*this);<sp/>}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>underlying()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="a01262_1ae6d1ae2d4630e6aefcece21ae861969d" kindref="member">WrappedAssembler</ref>&amp;</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(*this);<sp/>}</highlight></codeline>
<codeline lineno="66"><highlight class="normal">};</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Wrapper,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Assembler&gt;</highlight></codeline>
<codeline lineno="74" refid="a01266" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="a01266" kindref="compound">VectorManipulator</ref></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal">{</highlight></codeline>
<codeline lineno="77" refid="a01266_1a2d8c9a426f380fe70943af167d85c7b5" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="a01266_1a2d8c9a426f380fe70943af167d85c7b5" kindref="member">WrappedAssembler</ref><sp/>=<sp/>Wrapper;</highlight></codeline>
<codeline lineno="78" refid="a01266_1a55f751f7faf5cdecfa2a606b417062c2" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="a01266_1a55f751f7faf5cdecfa2a606b417062c2" kindref="member">FEC</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Assembler::FEContainer;</highlight></codeline>
<codeline lineno="79" refid="a01266_1a146ff182f11fe9d1cffd58ab85a47b3a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="a01266_1a146ff182f11fe9d1cffd58ab85a47b3a" kindref="member">DV</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Assembler::DirichletValuesType;</highlight></codeline>
<codeline lineno="80" refid="a01266_1aac10b03a2da5ccd19d9a4714c5fe07bb" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="a01266_1aac10b03a2da5ccd19d9a4714c5fe07bb" kindref="member">FERequirement</ref><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Assembler::FERequirement;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82" refid="a01266_1a665286449182c8ba5d881b5e4447ad40" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="a01266_1a665286449182c8ba5d881b5e4447ad40" kindref="member">VectorType</ref><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Assembler::VectorType;</highlight></codeline>
<codeline lineno="83" refid="a01266_1afffbf2045a9580107fdc07cd6bdb2035" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="a01302" kindref="compound">Interface</ref><sp/><sp/>=<sp/><ref refid="a01302" kindref="compound">VectorAssembler</ref>&lt;<ref refid="a01266_1a2d8c9a426f380fe70943af167d85c7b5" kindref="member">WrappedAssembler</ref>,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Assembler::FEContainer,</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Assembler::DirichletValuesType,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Assembler::VectorType&gt;;</highlight></codeline>
<codeline lineno="85" refid="a01266_1af662a37217e36619561eadb8ec9293c8" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/><ref refid="a01266_1af662a37217e36619561eadb8ec9293c8" kindref="member">Interface</ref>;</highlight></codeline>
<codeline lineno="86" refid="a01266_1a74d10a3b0be70aa688a8ca4190b4ce67" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="a01266_1a74d10a3b0be70aa688a8ca4190b4ce67" kindref="member">FunctionType</ref><sp/>=</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::function&lt;void(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Assembler&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="a01266_1aac10b03a2da5ccd19d9a4714c5fe07bb" kindref="member">FERequirement</ref>&amp;,<sp/><ref refid="a00411_1aab9e3e38507d1db7602bc750718c302a" kindref="member">VectorAffordance</ref>,<sp/><ref refid="a00411_1a9f83fad9f4c149f249165a13f2370eec" kindref="member">DBCOption</ref>,<sp/><ref refid="a01266_1a665286449182c8ba5d881b5e4447ad40" kindref="member">VectorType</ref>&amp;)&gt;;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>F&gt;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">requires</highlight><highlight class="normal"><sp/><ref refid="a02095" kindref="compound">Concepts::IsFunctorWithArgs</ref>&lt;F,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Assembler&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="a01266_1aac10b03a2da5ccd19d9a4714c5fe07bb" kindref="member">FERequirement</ref>&amp;,<sp/><ref refid="a00411_1aab9e3e38507d1db7602bc750718c302a" kindref="member">VectorAffordance</ref>,<sp/><ref refid="a00411_1a9f83fad9f4c149f249165a13f2370eec" kindref="member">DBCOption</ref>,</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="a01266_1a665286449182c8ba5d881b5e4447ad40" kindref="member">VectorType</ref>&amp;&gt;</highlight></codeline>
<codeline lineno="97" refid="a01266_1af05d967af052072fb2e8b52fc1ac73b6" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="a01266_1af05d967af052072fb2e8b52fc1ac73b6" kindref="member">bind</ref>(F&amp;&amp;<sp/>f)<sp/>{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="a01266_1aa72e5bc1ba5078c8d9537bdb6fd9d019" kindref="member">vfs</ref>.emplace_back(std::forward&lt;F&gt;(f));</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="100" refid="a01266_1aa72e5bc1ba5078c8d9537bdb6fd9d019" refkind="member"><highlight class="normal"><sp/><sp/>std::vector&lt;FunctionType&gt;<sp/><ref refid="a01266_1aa72e5bc1ba5078c8d9537bdb6fd9d019" kindref="member">vfs</ref>;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="103" refid="a01266_1ae7ad13e87a07efbafafe71d255c57eab" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="a01266_1a665286449182c8ba5d881b5e4447ad40" kindref="member">VectorType</ref>&amp;<sp/><ref refid="a01266_1ae7ad13e87a07efbafafe71d255c57eab" kindref="member">getRawVectorImpl</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="a01266_1aac10b03a2da5ccd19d9a4714c5fe07bb" kindref="member">FERequirement</ref>&amp;<sp/>feRequirements,<sp/><ref refid="a00411_1aab9e3e38507d1db7602bc750718c302a" kindref="member">VectorAffordance</ref><sp/>affordance)<sp/>{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="a01266_1a665286449182c8ba5d881b5e4447ad40" kindref="member">VectorType</ref>&amp;<sp/>vec<sp/>=<sp/>underlying().base_getRawVectorImpl(feRequirements,<sp/>affordance);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>vf<sp/>:<sp/><ref refid="a01266_1aa72e5bc1ba5078c8d9537bdb6fd9d019" kindref="member">vfs</ref>)</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vf(underlying().base(),<sp/>feRequirements,<sp/>affordance,<sp/><ref refid="a00411_1a9f83fad9f4c149f249165a13f2370eeca65e65c8ab0d8609ce12fc68a03cb8e00" kindref="member">DBCOption::Raw</ref>,<sp/>vec);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>vec;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110" refid="a01266_1aef64c6065be1268a73cefc38614c3901" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="a01266_1a665286449182c8ba5d881b5e4447ad40" kindref="member">VectorType</ref>&amp;<sp/><ref refid="a01266_1aef64c6065be1268a73cefc38614c3901" kindref="member">getVectorImpl</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="a01266_1aac10b03a2da5ccd19d9a4714c5fe07bb" kindref="member">FERequirement</ref>&amp;<sp/>feRequirements,<sp/><ref refid="a00411_1aab9e3e38507d1db7602bc750718c302a" kindref="member">VectorAffordance</ref><sp/>affordance)<sp/>{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="a01266_1a665286449182c8ba5d881b5e4447ad40" kindref="member">VectorType</ref>&amp;<sp/>vec<sp/>=<sp/>underlying().base_getVectorImpl(feRequirements,<sp/>affordance);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>vf<sp/>:<sp/><ref refid="a01266_1aa72e5bc1ba5078c8d9537bdb6fd9d019" kindref="member">vfs</ref>)</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vf(underlying().base(),<sp/>feRequirements,<sp/>affordance,<sp/><ref refid="a00411_1a9f83fad9f4c149f249165a13f2370eecabbd47109890259c0127154db1af26c75" kindref="member">DBCOption::Full</ref>,<sp/>vec);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>vec;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117" refid="a01266_1aeeb7199a1691ace31afccc9a01f8a597" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="a01266_1a665286449182c8ba5d881b5e4447ad40" kindref="member">VectorType</ref>&amp;<sp/><ref refid="a01266_1aeeb7199a1691ace31afccc9a01f8a597" kindref="member">getReducedVectorImpl</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="a01266_1aac10b03a2da5ccd19d9a4714c5fe07bb" kindref="member">FERequirement</ref>&amp;<sp/>feRequirements,<sp/><ref refid="a00411_1aab9e3e38507d1db7602bc750718c302a" kindref="member">VectorAffordance</ref><sp/>affordance)<sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="a01266_1a665286449182c8ba5d881b5e4447ad40" kindref="member">VectorType</ref>&amp;<sp/>vec<sp/>=<sp/>underlying().base_getReducedVectorImpl(feRequirements,<sp/>affordance);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>vf<sp/>:<sp/><ref refid="a01266_1aa72e5bc1ba5078c8d9537bdb6fd9d019" kindref="member">vfs</ref>)</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vf(underlying().base(),<sp/>feRequirements,<sp/>affordance,<sp/><ref refid="a00411_1a9f83fad9f4c149f249165a13f2370eeca4335949a935758ca1b570689c3c6750b" kindref="member">DBCOption::Reduced</ref>,<sp/>vec);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>vec;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//&gt;<sp/>CRTP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>underlying()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal"><ref refid="a01266_1a2d8c9a426f380fe70943af167d85c7b5" kindref="member">WrappedAssembler</ref>&amp;</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(*this);<sp/>}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>underlying()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="a01266_1a2d8c9a426f380fe70943af167d85c7b5" kindref="member">WrappedAssembler</ref>&amp;</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(*this);<sp/>}</highlight></codeline>
<codeline lineno="128"><highlight class="normal">};</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Wrapper,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Assembler&gt;</highlight></codeline>
<codeline lineno="136" refid="a01270" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="a01270" kindref="compound">MatrixManipulator</ref></highlight></codeline>
<codeline lineno="137"><highlight class="normal">{</highlight></codeline>
<codeline lineno="138" refid="a01270_1af19cf555db737547d9c5b7109a3a310e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="a01270_1af19cf555db737547d9c5b7109a3a310e" kindref="member">WrappedAssembler</ref><sp/>=<sp/>Wrapper;</highlight></codeline>
<codeline lineno="139" refid="a01270_1a3e9b53e7ba85dc4038add4c8bcca484b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="a01270_1a3e9b53e7ba85dc4038add4c8bcca484b" kindref="member">FEC</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Assembler::FEContainer;</highlight></codeline>
<codeline lineno="140" refid="a01270_1af51e0f694d08350f629586121bc6686c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="a01270_1af51e0f694d08350f629586121bc6686c" kindref="member">DV</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Assembler::DirichletValuesType;</highlight></codeline>
<codeline lineno="141" refid="a01270_1aec33ee46b0c589052d7339812e517f67" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="a01270_1aec33ee46b0c589052d7339812e517f67" kindref="member">FERequirement</ref><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Assembler::FERequirement;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143" refid="a01270_1ad1e4697bbb8e0d089a7382912f3fa9d9" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="a01270_1ad1e4697bbb8e0d089a7382912f3fa9d9" kindref="member">MatrixType</ref><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Assembler::MatrixType;</highlight></codeline>
<codeline lineno="144" refid="a01270_1aadcf548c3bb0cde12cd56a57a5c5f733" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="a01306" kindref="compound">Interface</ref><sp/><sp/>=<sp/><ref refid="a01306" kindref="compound">MatrixAssembler</ref>&lt;<ref refid="a01270_1af19cf555db737547d9c5b7109a3a310e" kindref="member">WrappedAssembler</ref>,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Assembler::FEContainer,</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Assembler::DirichletValuesType,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Assembler::MatrixType&gt;;</highlight></codeline>
<codeline lineno="146" refid="a01270_1a78f5646e7f35964e7422824b5fe0c0da" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/><ref refid="a01270_1a78f5646e7f35964e7422824b5fe0c0da" kindref="member">Interface</ref>;</highlight></codeline>
<codeline lineno="147" refid="a01270_1a384a0d84d5f932fc0c4a101497c684f6" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="a01270_1a384a0d84d5f932fc0c4a101497c684f6" kindref="member">FunctionType</ref><sp/>=</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::function&lt;void(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Assembler&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="a01270_1aec33ee46b0c589052d7339812e517f67" kindref="member">FERequirement</ref>&amp;,<sp/><ref refid="a00411_1a390d5311179ec61d163a29c943b3d1a0" kindref="member">MatrixAffordance</ref>,<sp/><ref refid="a00411_1a9f83fad9f4c149f249165a13f2370eec" kindref="member">DBCOption</ref>,<sp/><ref refid="a01270_1ad1e4697bbb8e0d089a7382912f3fa9d9" kindref="member">MatrixType</ref>&amp;)&gt;;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>F&gt;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">requires</highlight><highlight class="normal"><sp/><ref refid="a02095" kindref="compound">Concepts::IsFunctorWithArgs</ref>&lt;F,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Assembler&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="a01270_1aec33ee46b0c589052d7339812e517f67" kindref="member">FERequirement</ref>&amp;,<sp/><ref refid="a00411_1a390d5311179ec61d163a29c943b3d1a0" kindref="member">MatrixAffordance</ref>,<sp/><ref refid="a00411_1a9f83fad9f4c149f249165a13f2370eec" kindref="member">DBCOption</ref>,</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="a01270_1ad1e4697bbb8e0d089a7382912f3fa9d9" kindref="member">MatrixType</ref>&amp;&gt;</highlight></codeline>
<codeline lineno="158" refid="a01270_1aed9e3a220a16898c97ad60ea8fdff04f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="a01270_1aed9e3a220a16898c97ad60ea8fdff04f" kindref="member">bind</ref>(F&amp;&amp;<sp/>f)<sp/>{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="a01270_1a2a466b533b5e6a3d6f85b1d2fb5bc69d" kindref="member">mfs</ref>.emplace_back(std::forward&lt;F&gt;(f));</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="161" refid="a01270_1a2a466b533b5e6a3d6f85b1d2fb5bc69d" refkind="member"><highlight class="normal"><sp/><sp/>std::vector&lt;FunctionType&gt;<sp/><ref refid="a01270_1a2a466b533b5e6a3d6f85b1d2fb5bc69d" kindref="member">mfs</ref>;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="164" refid="a01270_1ae89cb40188e56cacfee05970493a73fb" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="a01270_1ad1e4697bbb8e0d089a7382912f3fa9d9" kindref="member">MatrixType</ref>&amp;<sp/><ref refid="a01270_1ae89cb40188e56cacfee05970493a73fb" kindref="member">getRawMatrixImpl</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="a01270_1aec33ee46b0c589052d7339812e517f67" kindref="member">FERequirement</ref>&amp;<sp/>feRequirements,<sp/><ref refid="a00411_1a390d5311179ec61d163a29c943b3d1a0" kindref="member">MatrixAffordance</ref><sp/>affordance)<sp/>{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="a01270_1ad1e4697bbb8e0d089a7382912f3fa9d9" kindref="member">MatrixType</ref>&amp;<sp/>mat<sp/>=<sp/>underlying().base_getRawMatrixImpl(feRequirements,<sp/>affordance);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>mf<sp/>:<sp/><ref refid="a01270_1a2a466b533b5e6a3d6f85b1d2fb5bc69d" kindref="member">mfs</ref>)</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mf(underlying().base(),<sp/>feRequirements,<sp/>affordance,<sp/><ref refid="a00411_1a9f83fad9f4c149f249165a13f2370eeca65e65c8ab0d8609ce12fc68a03cb8e00" kindref="member">DBCOption::Raw</ref>,<sp/>mat);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mat;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171" refid="a01270_1a4cf4b84bd66546c938e14d893178983e" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="a01270_1ad1e4697bbb8e0d089a7382912f3fa9d9" kindref="member">MatrixType</ref>&amp;<sp/><ref refid="a01270_1a4cf4b84bd66546c938e14d893178983e" kindref="member">getMatrixImpl</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="a01270_1aec33ee46b0c589052d7339812e517f67" kindref="member">FERequirement</ref>&amp;<sp/>feRequirements,<sp/><ref refid="a00411_1a390d5311179ec61d163a29c943b3d1a0" kindref="member">MatrixAffordance</ref><sp/>affordance)<sp/>{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="a01270_1ad1e4697bbb8e0d089a7382912f3fa9d9" kindref="member">MatrixType</ref>&amp;<sp/>mat<sp/>=<sp/>underlying().base_getMatrixImpl(feRequirements,<sp/>affordance);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>mf<sp/>:<sp/><ref refid="a01270_1a2a466b533b5e6a3d6f85b1d2fb5bc69d" kindref="member">mfs</ref>)</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mf(underlying().base(),<sp/>feRequirements,<sp/>affordance,<sp/><ref refid="a00411_1a9f83fad9f4c149f249165a13f2370eecabbd47109890259c0127154db1af26c75" kindref="member">DBCOption::Full</ref>,<sp/>mat);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mat;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178" refid="a01270_1a6bdeb28d985b88241c3f1011d07b53e1" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="a01270_1ad1e4697bbb8e0d089a7382912f3fa9d9" kindref="member">MatrixType</ref>&amp;<sp/><ref refid="a01270_1a6bdeb28d985b88241c3f1011d07b53e1" kindref="member">getReducedMatrixImpl</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="a01270_1aec33ee46b0c589052d7339812e517f67" kindref="member">FERequirement</ref>&amp;<sp/>feRequirements,<sp/><ref refid="a00411_1a390d5311179ec61d163a29c943b3d1a0" kindref="member">MatrixAffordance</ref><sp/>affordance)<sp/>{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="a01270_1ad1e4697bbb8e0d089a7382912f3fa9d9" kindref="member">MatrixType</ref>&amp;<sp/>mat<sp/>=<sp/>underlying().base_getReducedMatrixImpl(feRequirements,<sp/>affordance);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>mf<sp/>:<sp/><ref refid="a01270_1a2a466b533b5e6a3d6f85b1d2fb5bc69d" kindref="member">mfs</ref>)</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mf(underlying().base(),<sp/>feRequirements,<sp/>affordance,<sp/><ref refid="a00411_1a9f83fad9f4c149f249165a13f2370eeca4335949a935758ca1b570689c3c6750b" kindref="member">DBCOption::Reduced</ref>,<sp/>mat);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mat;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//&gt;<sp/>CRTP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>underlying()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal"><ref refid="a01270_1af19cf555db737547d9c5b7109a3a310e" kindref="member">WrappedAssembler</ref>&amp;</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(*this);<sp/>}</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>underlying()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="a01270_1af19cf555db737547d9c5b7109a3a310e" kindref="member">WrappedAssembler</ref>&amp;</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(*this);<sp/>}</highlight></codeline>
<codeline lineno="189"><highlight class="normal">};</highlight></codeline>
<codeline lineno="190"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>Ikarus</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/assemblermanipulatorbuildingblocks.hh"/>
  </compounddef>
</doxygen>
