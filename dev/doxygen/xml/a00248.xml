<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="a00248" kind="file" language="C++">
    <compoundname>arrudaboyce.hh</compoundname>
    <includes refid="a00260" local="no">ikarus/finiteelements/mechanics/materials/hyperelastic/deviatoric/deviatoricinvariants.hh</includes>
    <includes refid="a00275" local="no">ikarus/finiteelements/mechanics/materials/materialhelpers.hh</includes>
    <includes refid="a00233" local="no">ikarus/finiteelements/mechanics/materials/tags.hh</includes>
    <includes refid="a00032" local="no">ikarus/utils/tensorutils.hh</includes>
    <includedby refid="a00266" local="no">factory.hh</includedby>
    <incdepgraph>
      <node id="16">
        <label>ikarus/assembler/dirichletbcenforcement.hh</label>
        <link refid="a00347"/>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>arrudaboyce.hh</label>
        <link refid="a00248"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>ikarus/finiteelements/mechanics/materials/hyperelastic/deviatoric/deviatoricinvariants.hh</label>
        <link refid="a00260"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>ikarus/finiteelements/mechanics/materials/materialhelpers.hh</label>
        <link refid="a00275"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>ikarus/finiteelements/mechanics/materials/tags.hh</label>
        <link refid="a00233"/>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>ikarus/utils/concepts.hh</label>
        <link refid="a03101"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>ikarus/utils/makeenum.hh</label>
        <link refid="a00011"/>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>ikarus/utils/math.hh</label>
        <link refid="a00044"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>ikarus/utils/tensorutils.hh</label>
        <link refid="a00032"/>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>ikarus/utils/traits.hh</label>
        <link refid="a00068"/>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>Eigen/Dense</label>
      </node>
      <node id="14">
        <label>Eigen/Sparse</label>
      </node>
      <node id="15">
        <label>autodiff/forward/dual/dual.hpp</label>
      </node>
      <node id="8">
        <label>concepts</label>
      </node>
      <node id="18">
        <label>dune/common/exceptions.hh</label>
      </node>
      <node id="5">
        <label>dune/common/float_cmp.hh</label>
      </node>
      <node id="23">
        <label>dune/common/hybridutilities.hh</label>
      </node>
      <node id="27">
        <label>dune/common/promotiontraits.hh</label>
      </node>
      <node id="12">
        <label>dune/functions/functionspacebases/basistags.hh</label>
      </node>
      <node id="13">
        <label>dune/functions/functionspacebases/lagrangebasis.hh</label>
      </node>
      <node id="21">
        <label>functional</label>
      </node>
      <node id="25">
        <label>numeric</label>
      </node>
      <node id="4">
        <label>ranges</label>
      </node>
      <node id="22">
        <label>tuple</label>
      </node>
      <node id="9">
        <label>type_traits</label>
      </node>
      <node id="26">
        <label>unsupported/Eigen/CXX11/Tensor</label>
      </node>
      <node id="10">
        <label>utility</label>
      </node>
      <node id="11">
        <label>vector</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="4">
        <label>linearelastic.hh</label>
        <link refid="a00224"/>
      </node>
      <node id="3">
        <label>materials.hh</label>
        <link refid="a03059"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>arrudaboyce.hh</label>
        <link refid="a00248"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>factory.hh</label>
        <link refid="a00266"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>resultevaluators.hh</label>
        <link refid="a00353"/>
      </node>
      <node id="5">
        <label>material.hh</label>
        <link refid="a00158"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>_ikarus.cc</label>
        <link refid="a00365"/>
      </node>
      <node id="6">
        <label>materials.hh</label>
        <link refid="a03062"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="a01526" prot="public">Ikarus::ArrudaBoyceMatParameters</innerclass>
    <innerclass refid="a01530" prot="public">Ikarus::Materials::ArrudaBoyceT</innerclass>
    <innernamespace refid="a00411">Ikarus</innernamespace>
    <innernamespace refid="a00422">Ikarus::Materials</innernamespace>
    <briefdescription>
<para>Implementation of the ArrudaBoyce material model. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>SPDX-FileCopyrightText:<sp/>2021-2025<sp/>The<sp/>Ikarus<sp/>Developers<sp/>mueller@ibb.uni-stuttgart.de</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>SPDX-License-Identifier:<sp/>LGPL-3.0-or-later</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="a00260" kindref="compound">ikarus/finiteelements/mechanics/materials/hyperelastic/deviatoric/deviatoricinvariants.hh</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="a00275" kindref="compound">ikarus/finiteelements/mechanics/materials/materialhelpers.hh</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="a00233" kindref="compound">ikarus/finiteelements/mechanics/materials/tags.hh</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="a00032" kindref="compound">ikarus/utils/tensorutils.hh</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="a00411" kindref="compound">Ikarus</ref><sp/>{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="20" refid="a01526" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="a01526" kindref="compound">ArrudaBoyceMatParameters</ref></highlight></codeline>
<codeline lineno="21"><highlight class="normal">{</highlight></codeline>
<codeline lineno="22" refid="a01526_1a3efa65d2dfee3e53789fb16d7815372b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="a01526_1a3efa65d2dfee3e53789fb16d7815372b" kindref="member">mu</ref>;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="23" refid="a01526_1a78ad6bdab1c8f663a64abeec58d02f02" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="a01526_1a78ad6bdab1c8f663a64abeec58d02f02" kindref="member">lambdaM</ref>;<sp/></highlight></codeline>
<codeline lineno="24"><highlight class="normal">};</highlight></codeline>
<codeline lineno="25"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>Ikarus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27" refid="a00422" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="a00422" kindref="compound">Ikarus::Materials</ref><sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ST_&gt;</highlight></codeline>
<codeline lineno="54" refid="a01530" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="a01530" kindref="compound">ArrudaBoyceT</ref></highlight></codeline>
<codeline lineno="55"><highlight class="normal">{</highlight></codeline>
<codeline lineno="56" refid="a01530_1a4c7f052604e0466671aa6090e41d06e6" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="a01530_1a4c7f052604e0466671aa6090e41d06e6" kindref="member">dim</ref><sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="57" refid="a01530_1ae0ebdd5cb66576342876a323334edfa3" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="a01530_1ae0ebdd5cb66576342876a323334edfa3" kindref="member">ScalarType</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>ST_;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ST<sp/>=<sp/>ScalarType&gt;</highlight></codeline>
<codeline lineno="60" refid="a01530_1a1285d903578f2a42247ece4214977a53" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="a01530_1a1285d903578f2a42247ece4214977a53" kindref="member">PrincipalStretches</ref><sp/>=<sp/>Eigen::Vector&lt;ST,<sp/>3&gt;;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ST<sp/>=<sp/>ScalarType&gt;</highlight></codeline>
<codeline lineno="62" refid="a01530_1a6f6967cf124d7c86783cc01c8849f304" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="a01530_1a6f6967cf124d7c86783cc01c8849f304" kindref="member">Invariants</ref><sp/>=<sp/><ref refid="a01530_1a1285d903578f2a42247ece4214977a53" kindref="member">PrincipalStretches&lt;ST&gt;</ref>;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ST<sp/>=<sp/>ScalarType&gt;</highlight></codeline>
<codeline lineno="65" refid="a01530_1aa8e3988e1c8d0d611fb28354e20e5fc6" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="a01530_1aa8e3988e1c8d0d611fb28354e20e5fc6" kindref="member">FirstDerivative</ref><sp/>=<sp/>Eigen::Vector&lt;ST,<sp/>dim&gt;;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ST<sp/>=<sp/>ScalarType&gt;</highlight></codeline>
<codeline lineno="67" refid="a01530_1aae064ebc679ff3aae55770774d9f2f20" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="a01530_1aae064ebc679ff3aae55770774d9f2f20" kindref="member">SecondDerivative</ref><sp/>=<sp/>Eigen::Matrix&lt;ST,<sp/>dim,<sp/>dim&gt;;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69" refid="a01530_1aaed928459506869a17c7ed0abb6a3658" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="a01526" kindref="compound">MaterialParameters</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="a01526" kindref="compound">ArrudaBoyceMatParameters</ref>;</highlight></codeline>
<codeline lineno="70" refid="a01530_1a7054465b5882a8d6e9bfa52f1c3a49f7" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="a01530_1a7054465b5882a8d6e9bfa52f1c3a49f7" kindref="member">numTerms</ref><sp/>=<sp/>5;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72" refid="a01530_1a5d82709e65ee6228bbfa1e340c9c6152" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="a01530_1a5d82709e65ee6228bbfa1e340c9c6152" kindref="member">stretchTag</ref><sp/>=<sp/><ref refid="a00411_1aec3d3c4647af5c01e1bf18637b3c89feaae6dc167631992e1312a197d5c3c39f8" kindref="member">PrincipalStretchTags::deviatoric</ref>;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74" refid="a01530_1aa2e4a543775cd8f30dcb768834a8b66d" refkind="member"><highlight class="normal"><sp/><sp/>[[nodiscard]]<sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="a01530_1aa2e4a543775cd8f30dcb768834a8b66d" kindref="member">name</ref>()<sp/>noexcept<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;ArrudaBoyce&quot;</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="81" refid="a01530_1a12fffa74c2d66f88cb341ef2be15c2a2" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="a01530_1a12fffa74c2d66f88cb341ef2be15c2a2" kindref="member">ArrudaBoyceT</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="a01526" kindref="compound">MaterialParameters</ref>&amp;<sp/>matPar)</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>matPar_{matPar}<sp/>{}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="87" refid="a01530_1a9bf20249df24ad1909de26378c5d44c8" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="a01526" kindref="compound">MaterialParameters</ref><sp/><ref refid="a01530_1a9bf20249df24ad1909de26378c5d44c8" kindref="member">materialParametersImpl</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>matPar_;<sp/>}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ST&gt;</highlight></codeline>
<codeline lineno="98" refid="a01530_1abf2eefa6dd97cfc5f97d4e8adad71fb8" refkind="member"><highlight class="normal"><sp/><sp/>ST<sp/><ref refid="a01530_1abf2eefa6dd97cfc5f97d4e8adad71fb8" kindref="member">storedEnergyImpl</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="a01530_1a1285d903578f2a42247ece4214977a53" kindref="member">PrincipalStretches&lt;ST&gt;</ref>&amp;<sp/>lambda)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="a01530_1a6f6967cf124d7c86783cc01c8849f304" kindref="member">Invariants&lt;ST&gt;</ref>&amp;<sp/>invariants<sp/>=<sp/>Impl::invariants(lambda);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>ST<sp/>energy{0.0};</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>devInvariants<sp/>=<sp/><ref refid="a01538" kindref="compound">DeviatoricInvariants&lt;PrincipalStretches&lt;ST&gt;</ref>&gt;(lambda);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>W1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>devInvariants.<ref refid="a01538_1a9c016a61bba2d581b57c0f373a7f822c" kindref="member">value</ref>()[0];</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>mu<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>matPar_.<ref refid="a01526_1a3efa65d2dfee3e53789fb16d7815372b" kindref="member">mu</ref>;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>lambdaM<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>matPar_.<ref refid="a01526_1a78ad6bdab1c8f663a64abeec58d02f02" kindref="member">lambdaM</ref>;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>beta<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1<sp/>/<sp/>pow(lambdaM,<sp/>2.0);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>i<sp/>:<sp/>parameterRange())</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>energy<sp/>+=<sp/>alphas_[i]<sp/>*<sp/>pow(beta,<sp/>i)<sp/>*<sp/>(pow(W1,<sp/>i<sp/>+<sp/>1)<sp/>-<sp/>pow(3,<sp/>i<sp/>+<sp/>1));</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>energy<sp/>*=<sp/>mu;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>energy;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ST&gt;</highlight></codeline>
<codeline lineno="122" refid="a01530_1ac83bfb985c0823c57d2ba3577fa34a29" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="a01530_1aa8e3988e1c8d0d611fb28354e20e5fc6" kindref="member">FirstDerivative&lt;ST&gt;</ref><sp/><ref refid="a01530_1ac83bfb985c0823c57d2ba3577fa34a29" kindref="member">firstDerivativeImpl</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="a01530_1a1285d903578f2a42247ece4214977a53" kindref="member">PrincipalStretches&lt;ST&gt;</ref>&amp;<sp/>lambda)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="a01530_1a6f6967cf124d7c86783cc01c8849f304" kindref="member">Invariants&lt;ST&gt;</ref>&amp;<sp/>invariants<sp/>=<sp/>Impl::invariants(lambda);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>dWdLambda<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="a01530_1aa8e3988e1c8d0d611fb28354e20e5fc6" kindref="member">FirstDerivative&lt;ST&gt;::Zero</ref>().eval();</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>devInvariants<sp/>=<sp/><ref refid="a01538" kindref="compound">DeviatoricInvariants&lt;PrincipalStretches&lt;ST&gt;</ref>&gt;(lambda);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>W1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>devInvariants.<ref refid="a01538_1a9c016a61bba2d581b57c0f373a7f822c" kindref="member">value</ref>()[0];</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>dW1dLambda<sp/><sp/><sp/><sp/>=<sp/>devInvariants.firstDerivative().first;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>mu<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>matPar_.<ref refid="a01526_1a3efa65d2dfee3e53789fb16d7815372b" kindref="member">mu</ref>;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>lambdaM<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>matPar_.<ref refid="a01526_1a78ad6bdab1c8f663a64abeec58d02f02" kindref="member">lambdaM</ref>;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>beta<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1<sp/>/<sp/>pow(lambdaM,<sp/>2.0);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>j<sp/>:<sp/>parameterRange())</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>k<sp/>:<sp/>dimensionRange())</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dWdLambda[k]<sp/>+=<sp/>mu<sp/>*<sp/>alphas_[j]<sp/>*<sp/>pow(beta,<sp/>j)<sp/>*<sp/>pow(W1,<sp/>j)<sp/>*<sp/>dW1dLambda[k]<sp/>*<sp/>(j<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dWdLambda;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ST&gt;</highlight></codeline>
<codeline lineno="148" refid="a01530_1a10c05d2682acc0b38549705176fe421d" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="a01530_1aae064ebc679ff3aae55770774d9f2f20" kindref="member">SecondDerivative&lt;ST&gt;</ref><sp/><ref refid="a01530_1a10c05d2682acc0b38549705176fe421d" kindref="member">secondDerivativeImpl</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="a01530_1a1285d903578f2a42247ece4214977a53" kindref="member">PrincipalStretches&lt;ST&gt;</ref>&amp;<sp/>lambda)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="a01530_1a6f6967cf124d7c86783cc01c8849f304" kindref="member">Invariants&lt;ST&gt;</ref>&amp;<sp/>invariants<sp/>=<sp/>Impl::invariants(lambda);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>dS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="a01530_1aae064ebc679ff3aae55770774d9f2f20" kindref="member">SecondDerivative&lt;ST&gt;::Zero</ref>().eval();</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>devInvariants<sp/>=<sp/><ref refid="a01538" kindref="compound">DeviatoricInvariants&lt;PrincipalStretches&lt;ST&gt;</ref>&gt;(lambda);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>W1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>devInvariants.<ref refid="a01538_1a9c016a61bba2d581b57c0f373a7f822c" kindref="member">value</ref>()[0];</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>dW1dLambda<sp/><sp/><sp/><sp/>=<sp/>devInvariants.firstDerivative().first;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>ddW1dLambda<sp/><sp/><sp/>=<sp/>devInvariants.secondDerivative().first;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>mu<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>matPar_.<ref refid="a01526_1a3efa65d2dfee3e53789fb16d7815372b" kindref="member">mu</ref>;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>lambdaM<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>matPar_.<ref refid="a01526_1a78ad6bdab1c8f663a64abeec58d02f02" kindref="member">lambdaM</ref>;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>beta<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1<sp/>/<sp/>pow(lambdaM,<sp/>2.0);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>dW1dLambdaDyad<sp/>=<sp/><ref refid="a00407_1gab2cea9ac847cc3635812467c9d96ceb4" kindref="member">dyadic</ref>(dW1dLambda,<sp/>dW1dLambda);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>p<sp/>:<sp/>parameterRange())<sp/>{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>factor1<sp/>=<sp/>mu<sp/>*<sp/>alphas_[p]<sp/>*<sp/>pow(beta,<sp/>p);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>factor2<sp/>=<sp/>pow(W1,<sp/>p)<sp/>*<sp/>ddW1dLambda<sp/>*<sp/>(p<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>factor3<sp/>=<sp/>pow(W1,<sp/>p<sp/>-<sp/>1)<sp/>*<sp/>dW1dLambdaDyad<sp/>*<sp/>p<sp/>*<sp/>(p<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dS<sp/>+=<sp/>factor1<sp/>*<sp/>(factor2<sp/>+<sp/>factor3);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dS.diagonal()<sp/>-=<sp/>(dW1dLambda.array()<sp/>/<sp/>lambda.array()<sp/>*<sp/>factor1<sp/>*<sp/>pow(W1,<sp/>p)<sp/>*<sp/>(p<sp/>+<sp/>1)).matrix();</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dS;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>STO&gt;</highlight></codeline>
<codeline lineno="178" refid="a01530_1a9f7d11a71c02c6009e2665d78a90dfba" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="a01530_1a9f7d11a71c02c6009e2665d78a90dfba" kindref="member">rebind</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="a01530" kindref="compound">ArrudaBoyceT&lt;STO&gt;</ref>(matPar_);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><ref refid="a01530_1aaed928459506869a17c7ed0abb6a3658" kindref="member">MaterialParameters</ref><sp/>matPar_;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>std::array&lt;double,<sp/>numTerms&gt;<sp/>alphas_<sp/>=<sp/>{0.5,<sp/>1.0<sp/>/<sp/>20.0,<sp/>11.0<sp/>/<sp/>1050.0,<sp/>19.0<sp/>/<sp/>7000.0,</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>519.0<sp/>/<sp/>673750.0};</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parameterRange()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Dune::range(<ref refid="a01530_1a7054465b5882a8d6e9bfa52f1c3a49f7" kindref="member">numTerms</ref>);<sp/>}</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>dimensionRange()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Dune::range(<ref refid="a01530_1a4c7f052604e0466671aa6090e41d06e6" kindref="member">dim</ref>);<sp/>}</highlight></codeline>
<codeline lineno="189"><highlight class="normal">};</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="194" refid="a00422_1a70cada02f1f5f294f44c438fb1270982" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="a01530" kindref="compound">ArrudaBoyce</ref><sp/>=<sp/><ref refid="a01530" kindref="compound">ArrudaBoyceT&lt;double&gt;</ref>;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>Ikarus::Materials</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/hyperelastic/deviatoric/arrudaboyce.hh"/>
  </compounddef>
</doxygen>
