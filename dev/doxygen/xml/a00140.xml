<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="a00140" kind="file" language="C++">
    <compoundname>autodiffmat.hh</compoundname>
    <includes local="no">autodiff/forward/dual.hpp</includes>
    <includes local="no">autodiff/forward/dual/dual.hpp</includes>
    <includes local="no">autodiff/forward/dual/eigen.hpp</includes>
    <includes local="no">autodiff/forward/utils/derivative.hpp</includes>
    <includes refid="a03068" local="no">ikarus/finiteelements/mechanics/materials/interface.hh</includes>
    <includes refid="a00275" local="no">ikarus/finiteelements/mechanics/materials/materialhelpers.hh</includes>
    <includes refid="a00032" local="no">ikarus/utils/tensorutils.hh</includes>
    <incdepgraph>
      <node id="27">
        <label>ikarus/assembler/dirichletbcenforcement.hh</label>
        <link refid="a00347"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>autodiffmat.hh</label>
        <link refid="a00140"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>ikarus/finiteelements/mechanics/materials/interface.hh</label>
        <link refid="a03068"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="40">
        <label>ikarus/finiteelements/mechanics/materials/materialhelpers.hh</label>
        <link refid="a00275"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>ikarus/finiteelements/mechanics/materials/strainconversions.hh</label>
        <link refid="a00230"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>tags.hh</label>
        <link refid="a00233"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>ikarus/finiteelements/physicshelper.hh</label>
        <link refid="a00194"/>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>ikarus/utils/concepts.hh</label>
        <link refid="a03101"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>ikarus/utils/linearalgebrahelper.hh</label>
        <link refid="a00017"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>ikarus/utils/makeenum.hh</label>
        <link refid="a00011"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>ikarus/utils/math.hh</label>
        <link refid="a00044"/>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>ikarus/utils/tensorutils.hh</label>
        <link refid="a00032"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>ikarus/utils/traits.hh</label>
        <link refid="a00068"/>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>Eigen/Core</label>
      </node>
      <node id="25">
        <label>Eigen/Dense</label>
      </node>
      <node id="26">
        <label>Eigen/Sparse</label>
      </node>
      <node id="2">
        <label>autodiff/forward/dual.hpp</label>
      </node>
      <node id="3">
        <label>autodiff/forward/dual/dual.hpp</label>
      </node>
      <node id="4">
        <label>autodiff/forward/dual/eigen.hpp</label>
      </node>
      <node id="5">
        <label>autodiff/forward/utils/derivative.hpp</label>
      </node>
      <node id="19">
        <label>concepts</label>
      </node>
      <node id="10">
        <label>dune/common/exceptions.hh</label>
      </node>
      <node id="34">
        <label>dune/common/float_cmp.hh</label>
      </node>
      <node id="31">
        <label>dune/common/hybridutilities.hh</label>
      </node>
      <node id="17">
        <label>dune/common/promotiontraits.hh</label>
      </node>
      <node id="38">
        <label>dune/common/tuplevector.hh</label>
      </node>
      <node id="23">
        <label>dune/functions/functionspacebases/basistags.hh</label>
      </node>
      <node id="24">
        <label>dune/functions/functionspacebases/lagrangebasis.hh</label>
      </node>
      <node id="39">
        <label>dune/istl/bvector.hh</label>
      </node>
      <node id="29">
        <label>functional</label>
      </node>
      <node id="36">
        <label>iosfwd</label>
      </node>
      <node id="14">
        <label>numeric</label>
      </node>
      <node id="37">
        <label>random</label>
      </node>
      <node id="15">
        <label>ranges</label>
      </node>
      <node id="30">
        <label>tuple</label>
      </node>
      <node id="20">
        <label>type_traits</label>
      </node>
      <node id="16">
        <label>unsupported/Eigen/CXX11/Tensor</label>
      </node>
      <node id="11">
        <label>unsupported/Eigen/MatrixFunctions</label>
      </node>
      <node id="21">
        <label>utility</label>
      </node>
      <node id="22">
        <label>vector</label>
      </node>
    </incdepgraph>
    <innerclass refid="a01362" prot="public">Ikarus::Experimental::AutoDiffMAT</innerclass>
    <innernamespace refid="a00411">Ikarus</innernamespace>
    <innernamespace refid="a00414">Ikarus::Experimental</innernamespace>
    <briefdescription>
<para>Implementation of the AutoDiff-based material model. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>SPDX-FileCopyrightText:<sp/>2021-2025<sp/>The<sp/>Ikarus<sp/>Developers<sp/>mueller@ibb.uni-stuttgart.de</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>SPDX-License-Identifier:<sp/>LGPL-3.0-or-later</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;autodiff/forward/dual.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;autodiff/forward/dual/dual.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;autodiff/forward/dual/eigen.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;autodiff/forward/utils/derivative.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="a03068" kindref="compound">ikarus/finiteelements/mechanics/materials/interface.hh</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="a00275" kindref="compound">ikarus/finiteelements/mechanics/materials/materialhelpers.hh</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="a00032" kindref="compound">ikarus/utils/tensorutils.hh</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21" refid="a00414" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="a00414" kindref="compound">Ikarus::Experimental</ref><sp/>{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>RealMAT,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>forceAutoDiffV<sp/>=<sp/>false,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>forceAutoDiffS<sp/>=<sp/>false&gt;</highlight></codeline>
<codeline lineno="34" refid="a01362" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="a01362" kindref="compound">AutoDiffMAT</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>RealMAT</highlight></codeline>
<codeline lineno="35"><highlight class="normal">{</highlight></codeline>
<codeline lineno="36" refid="a01362_1ab6fcce305186ba816ca0af2f641b7dc3" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="a01362_1ab6fcce305186ba816ca0af2f641b7dc3" kindref="member">ScalarType</ref><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>RealMAT::ScalarType;</highlight></codeline>
<codeline lineno="37" refid="a01362_1a00f904cac37ab84fc456159865a6513e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="a01362_1a00f904cac37ab84fc456159865a6513e" kindref="member">StrainMatrix</ref><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>RealMAT::StrainMatrix;</highlight></codeline>
<codeline lineno="38" refid="a01362_1a3861221b2b1fcc0f40d8d063f5193be7" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="a01362_1a3861221b2b1fcc0f40d8d063f5193be7" kindref="member">StressMatrix</ref><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>RealMAT::StressMatrix;</highlight></codeline>
<codeline lineno="39" refid="a01362_1a40f5bf44cc55fedf7c97014011ea13b0" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="a01362_1a40f5bf44cc55fedf7c97014011ea13b0" kindref="member">MaterialTensor</ref><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>RealMAT::MaterialTensor;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="a01362_1a926857f779e6f02ba22e37ec3d4310a0" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="a01362_1a926857f779e6f02ba22e37ec3d4310a0" kindref="member">MaterialParameters</ref><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>RealMAT::MaterialParameters;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="a01362_1a4f4176c5b13b653fd6d84e1dee5d9eaa" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="a01362_1a4f4176c5b13b653fd6d84e1dee5d9eaa" kindref="member">dim</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>RealMAT::dim;</highlight></codeline>
<codeline lineno="44" refid="a01362_1a810b5bd64df43f542e0f9a5b9cce5a12" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="a01362_1a810b5bd64df43f542e0f9a5b9cce5a12" kindref="member">nVoigtIndices</ref><sp/>=<sp/><ref refid="a01362_1a4f4176c5b13b653fd6d84e1dee5d9eaa" kindref="member">dim</ref><sp/>*<sp/>(<ref refid="a01362_1a4f4176c5b13b653fd6d84e1dee5d9eaa" kindref="member">dim</ref><sp/>+<sp/>1)<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46" refid="a01362_1a105d06949f7512446a83c4b9ba4fd64c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="a01362_1a105d06949f7512446a83c4b9ba4fd64c" kindref="member">strainTag</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>RealMAT::strainTag;</highlight></codeline>
<codeline lineno="47" refid="a01362_1a77c8c9c1f9d4fa390a4a23c96358c1e8" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="a01362_1a77c8c9c1f9d4fa390a4a23c96358c1e8" kindref="member">stressTag</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>RealMAT::stressTag;</highlight></codeline>
<codeline lineno="48" refid="a01362_1aaf637a332a467408d19abc818f3da0dc" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="a01362_1aaf637a332a467408d19abc818f3da0dc" kindref="member">tangentModuliTag</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>RealMAT::tangentModuliTag;</highlight></codeline>
<codeline lineno="49" refid="a01362_1a66ac92cb8493e30a97101aee0636ad03" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="a01362_1a66ac92cb8493e30a97101aee0636ad03" kindref="member">energyAcceptsVoigt</ref><sp/><sp/><sp/><sp/><sp/>=<sp/>RealMAT::energyAcceptsVoigt;</highlight></codeline>
<codeline lineno="50" refid="a01362_1a96af9efb70873fd7691173e4e882ba76" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="a01362_1a96af9efb70873fd7691173e4e882ba76" kindref="member">stressToVoigt</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>RealMAT::stressToVoigt;</highlight></codeline>
<codeline lineno="51" refid="a01362_1ae1a917d6d6480813893beaa5125b8f6e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="a01362_1ae1a917d6d6480813893beaa5125b8f6e" kindref="member">stressAcceptsVoigt</ref><sp/><sp/><sp/><sp/><sp/>=<sp/>RealMAT::stressAcceptsVoigt;</highlight></codeline>
<codeline lineno="52" refid="a01362_1a00077996812cf9cc4e0d142b4a77e268" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="a01362_1a00077996812cf9cc4e0d142b4a77e268" kindref="member">moduliToVoigt</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>RealMAT::moduliToVoigt;</highlight></codeline>
<codeline lineno="53" refid="a01362_1a7eaa006b1e668b10dddf90211419b48f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="a01362_1a7eaa006b1e668b10dddf90211419b48f" kindref="member">moduliAcceptsVoigt</ref><sp/><sp/><sp/><sp/><sp/>=<sp/>RealMAT::moduliAcceptsVoigt;</highlight></codeline>
<codeline lineno="54" refid="a01362_1a1da0f005f8a1597fa880288cd61a5c3a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="a01362_1a1da0f005f8a1597fa880288cd61a5c3a" kindref="member">derivativeFactorImpl</ref><sp/>=<sp/>RealMAT::derivativeFactorImpl;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Args&gt;</highlight></codeline>
<codeline lineno="64" refid="a01362_1ac17660b052b5c6b22e0c28ee46cc2865" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="a01362_1ac17660b052b5c6b22e0c28ee46cc2865" kindref="member">AutoDiffMAT</ref>(Args&amp;&amp;...<sp/>args)</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>RealMAT{<ref refid="a00410" kindref="compound">std</ref>::forward&lt;Args&gt;(args)...}<sp/>{}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67" refid="a01362_1a3d39ad61dd952d287ba1ef00d9fc6c28" refkind="member"><highlight class="normal"><sp/><sp/>[[nodiscard]]<sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="a01362_1a3d39ad61dd952d287ba1ef00d9fc6c28" kindref="member">nameImpl</ref>()<sp/>noexcept<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;AutoDiff:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>RealMAT::name();<sp/>}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="72" refid="a01362_1a2e8eefa09ee71009214007008991c7b7" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="a01362_1a926857f779e6f02ba22e37ec3d4310a0" kindref="member">MaterialParameters</ref><sp/><ref refid="a01362_1a2e8eefa09ee71009214007008991c7b7" kindref="member">materialParametersImpl</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="a01362_1a6be4a5da8d5c803622ab210d70493c1c" kindref="member">realMAT</ref>().materialParametersImpl();<sp/>}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;StrainTags<sp/>tag,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Derived&gt;</highlight></codeline>
<codeline lineno="81" refid="a01362_1a54d99b342a6c12ddd2ee3b748ca3d99f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="a01362_1a54d99b342a6c12ddd2ee3b748ca3d99f" kindref="member">storedEnergy</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::MatrixBase&lt;Derived&gt;&amp;<sp/>E)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">requires</highlight><highlight class="normal"><sp/>{<sp/><ref refid="a01362_1a6be4a5da8d5c803622ab210d70493c1c" kindref="member">realMAT</ref>().template<sp/>storedEnergy&lt;tag&gt;(E);<sp/>})<sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>mat_ad<sp/>=<sp/><ref refid="a01362_1a6be4a5da8d5c803622ab210d70493c1c" kindref="member">realMAT</ref>().template<sp/>rebind&lt;autodiff::dual&gt;();</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mat_ad.template<sp/>storedEnergy&lt;tag&gt;(E);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_assert</highlight><highlight class="normal">(Dune::AlwaysFalse&lt;AutoDiffMAT&gt;::value,</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Appropriate<sp/>storedEnergy<sp/>function<sp/>not<sp/>is<sp/>implemented<sp/>for<sp/>the<sp/>chosen<sp/>material<sp/>model.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;StrainTags<sp/>tag,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>voigt<sp/>=<sp/>true,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Derived&gt;</highlight></codeline>
<codeline lineno="99" refid="a01362_1aa58ea268a050d8f2735e5098a0d519df" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="a01362_1aa58ea268a050d8f2735e5098a0d519df" kindref="member">stresses</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::MatrixBase&lt;Derived&gt;&amp;<sp/>E)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">requires</highlight><highlight class="normal"><sp/>{<sp/><ref refid="a01362_1a6be4a5da8d5c803622ab210d70493c1c" kindref="member">realMAT</ref>().template<sp/>stresses&lt;tag&gt;(E);<sp/>}<sp/>and<sp/>not(forceAutoDiffV<sp/>or<sp/>forceAutoDiffS))<sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="a01362_1a6be4a5da8d5c803622ab210d70493c1c" kindref="member">realMAT</ref>().template<sp/>stresses&lt;tag&gt;(E);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">requires</highlight><highlight class="normal"><sp/>{<sp/><ref refid="a01362_1a6be4a5da8d5c803622ab210d70493c1c" kindref="member">realMAT</ref>().template<sp/>storedEnergy&lt;tag&gt;(E);<sp/>})<sp/>{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_assert</highlight><highlight class="normal">(!<ref refid="a02096" kindref="compound">Concepts::EigenVector&lt;Derived&gt;</ref>,</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;The<sp/>strain<sp/>measure<sp/>used<sp/>for<sp/>autodiff<sp/>has<sp/>to<sp/>be<sp/>in<sp/>matrix<sp/>notation.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>mat_ad<sp/>=<sp/><ref refid="a01362_1a6be4a5da8d5c803622ab210d70493c1c" kindref="member">realMAT</ref>().template<sp/>rebind&lt;autodiff::dual&gt;();</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>f<sp/>=<sp/>[&amp;](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>x)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mat_ad.template<sp/>storedEnergy&lt;tag&gt;(x);<sp/>};</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Eigen::Vector&lt;autodiff::dual,<sp/>nVoigtIndices&gt;<sp/>dx<sp/>=<sp/><ref refid="a00407_1ga4304655095296ce9283e012587817a51" kindref="member">toVoigt</ref>(E.derived());</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>autodiff::dual<sp/>e;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Eigen::Vector&lt;double,<sp/>nVoigtIndices&gt;<sp/>g;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>gradient(f,<sp/>autodiff::wrt(dx),<sp/>autodiff::at(dx),<sp/>e,<sp/>g);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="a01362_1a1da0f005f8a1597fa880288cd61a5c3a" kindref="member">derivativeFactorImpl</ref><sp/>*<sp/>g).eval();</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_assert</highlight><highlight class="normal">(Dune::AlwaysFalse&lt;AutoDiffMAT&gt;::value,</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Appropriate<sp/>storedEnergy<sp/>function<sp/>not<sp/>is<sp/>implemented<sp/>for<sp/>the<sp/>chosen<sp/>material<sp/>model.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;StrainTags<sp/>tag,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>voigt<sp/>=<sp/>true,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Derived&gt;</highlight></codeline>
<codeline lineno="130" refid="a01362_1abd22c052743105a646c9cb16d531c57a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="a01362_1abd22c052743105a646c9cb16d531c57a" kindref="member">tangentModuli</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::MatrixBase&lt;Derived&gt;&amp;<sp/>E)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">requires</highlight><highlight class="normal"><sp/>{<sp/><ref refid="a01362_1a6be4a5da8d5c803622ab210d70493c1c" kindref="member">realMAT</ref>().template<sp/>tangentModuli&lt;tag&gt;(E);<sp/>}<sp/>and<sp/>not(forceAutoDiffV<sp/>or<sp/>forceAutoDiffS))<sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="a01362_1a6be4a5da8d5c803622ab210d70493c1c" kindref="member">realMAT</ref>().template<sp/>tangentModuli&lt;tag&gt;(E);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">requires</highlight><highlight class="normal"><sp/>{<sp/><ref refid="a01362_1a6be4a5da8d5c803622ab210d70493c1c" kindref="member">realMAT</ref>().template<sp/>stresses&lt;tag&gt;(E);<sp/>}<sp/>and<sp/>forceAutoDiffV<sp/>and<sp/>not<sp/>forceAutoDiffS)<sp/>{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_assert</highlight><highlight class="normal">(!<ref refid="a02096" kindref="compound">Concepts::EigenVector&lt;Derived&gt;</ref>,</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;The<sp/>strain<sp/>measure<sp/>used<sp/>for<sp/>autodiff<sp/>has<sp/>to<sp/>be<sp/>in<sp/>matrix<sp/>notation.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>mat_ad<sp/>=<sp/><ref refid="a01362_1a6be4a5da8d5c803622ab210d70493c1c" kindref="member">realMAT</ref>().template<sp/>rebind&lt;autodiff::dual&gt;();</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>f<sp/>=<sp/>[&amp;](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>x)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mat_ad.template<sp/>stresses&lt;tag&gt;(x);<sp/>};</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>dx<sp/>=<sp/>Eigen::Vector&lt;autodiff::dual,<sp/>nVoigtIndices&gt;{};</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dx<sp/>=<sp/><ref refid="a00407_1ga4304655095296ce9283e012587817a51" kindref="member">toVoigt</ref>(E.derived());</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Eigen::VectorXdual<sp/>g(<ref refid="a01362_1a810b5bd64df43f542e0f9a5b9cce5a12" kindref="member">nVoigtIndices</ref>);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>h<sp/>=<sp/>Eigen::Matrix&lt;double,<sp/>nVoigtIndices,<sp/>nVoigtIndices&gt;{};</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>jacobian(f,<sp/>autodiff::wrt(dx),<sp/>autodiff::at(dx),<sp/>g,<sp/>h);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="a01362_1a1da0f005f8a1597fa880288cd61a5c3a" kindref="member">derivativeFactorImpl</ref><sp/>*<sp/>h).eval();</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">requires</highlight><highlight class="normal"><sp/>{<sp/><ref refid="a01362_1a6be4a5da8d5c803622ab210d70493c1c" kindref="member">realMAT</ref>().template<sp/>storedEnergy&lt;tag&gt;(E);<sp/>})<sp/>{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_assert</highlight><highlight class="normal">(!<ref refid="a02096" kindref="compound">Concepts::EigenVector&lt;Derived&gt;</ref>,</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;The<sp/>strain<sp/>measure<sp/>used<sp/>for<sp/>autodiff<sp/>has<sp/>to<sp/>be<sp/>in<sp/>matrix<sp/>notation.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>mat_ad<sp/>=<sp/><ref refid="a01362_1a6be4a5da8d5c803622ab210d70493c1c" kindref="member">realMAT</ref>().template<sp/>rebind&lt;autodiff::dual2nd&gt;();</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>f<sp/>=<sp/>[&amp;](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>x)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mat_ad.template<sp/>storedEnergy&lt;tag&gt;(x);<sp/>};</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Eigen::Matrix&lt;autodiff::dual2nd,<sp/>nVoigtIndices,<sp/>1&gt;<sp/>dx<sp/>=<sp/><ref refid="a00407_1ga4304655095296ce9283e012587817a51" kindref="member">toVoigt</ref>(E.derived());</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>autodiff::dual2nd<sp/>e;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Eigen::Matrix&lt;double,<sp/>nVoigtIndices,<sp/>1&gt;<sp/>g;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Eigen::Matrix&lt;double,<sp/>nVoigtIndices,<sp/>nVoigtIndices&gt;<sp/>h;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>h<sp/>=<sp/>autodiff::hessian(f,<sp/>autodiff::wrt(dx),<sp/>autodiff::at(dx),<sp/>e,<sp/>g);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="a01362_1a1da0f005f8a1597fa880288cd61a5c3a" kindref="member">derivativeFactorImpl</ref><sp/>*<sp/><ref refid="a01362_1a1da0f005f8a1597fa880288cd61a5c3a" kindref="member">derivativeFactorImpl</ref><sp/>*<sp/>h).eval();</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_assert</highlight><highlight class="normal">(</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Dune::AlwaysFalse&lt;AutoDiffMAT&gt;::value,</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Appropriate<sp/>storedEnergy<sp/>and<sp/>stresses<sp/>functions<sp/>are<sp/>not<sp/>implemented<sp/>for<sp/>the<sp/>chosen<sp/>material<sp/>model.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="177" refid="a01362_1a6be4a5da8d5c803622ab210d70493c1c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>RealMAT&amp;<sp/><ref refid="a01362_1a6be4a5da8d5c803622ab210d70493c1c" kindref="member">realMAT</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><ref refid="a01362_1a926857f779e6f02ba22e37ec3d4310a0" kindref="member">MaterialParameters</ref><sp/>materialParameter_;</highlight></codeline>
<codeline lineno="181"><highlight class="normal">};</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>Ikarus::Experimental</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/__w/ikarus/ikarus/repo/ikarus/experimental/autodiffmat.hh"/>
  </compounddef>
</doxygen>
