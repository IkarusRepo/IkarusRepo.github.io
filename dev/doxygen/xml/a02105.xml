<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="a02105" kind="concept">
    <compoundname>Ikarus::Concepts::MatrixFlatAssembler</compoundname>
    <includes refid="a03101" local="no">ikarus/utils/concepts.hh</includes>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
    </templateparamlist>
    <initializer>template&lt;typename T&gt;
concept <ref refid="a02105" kindref="compound">Ikarus::Concepts::MatrixFlatAssembler</ref> =  Concepts::VectorFlatAssembler&lt;T&gt; and
                                requires(T t, const typename T::FERequirement&amp; req,
                                         typename T::AffordanceCollectionType affordance, DBCOption dbcOption) {
                                  { t.matrix(req, affordance.matrixAffordance(), dbcOption) };
                                  { t.matrix(dbcOption) };
                                  { t.matrix() };
                                }    </initializer>
    <briefdescription>
<para>Concept representing the requirements for a MatrixFlatAssembler.</para>
<para>A type T satisfies MatrixFlatAssembler if it is a VectorFlatAssembler and if it provides the necessary matrix() member functions. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/__w/ikarus/ikarus/repo/ikarus/utils/concepts.hh" line="560" column="3"/>
  </compounddef>
</doxygen>
