<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="a01718" kind="struct" language="C++" prot="public">
    <compoundname>Ikarus::ResultEvaluators::VonMises</compoundname>
    <includes refid="a00353" local="no">ikarus/io/resultevaluators.hh</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="a01718_1a4a16334a6d486018a77727fb2acca63c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename R</type>
          </param>
        </templateparamlist>
        <type>double</type>
        <definition>double Ikarus::ResultEvaluators::VonMises::operator()</definition>
        <argsstring>(const R &amp;resultArray, const auto &amp;pos, const auto &amp;fe, const int comp) const</argsstring>
        <name>operator()</name>
        <qualifiedname>Ikarus::ResultEvaluators::VonMises::operator()</qualifiedname>
        <param>
          <type>const R &amp;</type>
          <declname>resultArray</declname>
        </param>
        <param>
          <type>const auto &amp;</type>
          <declname>pos</declname>
        </param>
        <param>
          <type>const auto &amp;</type>
          <declname>fe</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>comp</declname>
        </param>
        <briefdescription>
<para>Calculate the result quantity (von Mises stress) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>resultArray</parametername>
</parameternamelist>
<parameterdescription>
<para>EigenVector containing the stress state in Voigt notation </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>comp</parametername>
</parameternamelist>
<parameterdescription>
<para>component of result (not used here) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>R</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of the matrix </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>von Mises stress </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/io/resultevaluators.hh" line="38" column="10" bodyfile="/__w/ikarus/ikarus/repo/ikarus/io/resultevaluators.hh" bodystart="38" bodyend="44"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="a01718_1adc5bbea30401fd0a203237199f400872" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr std::string</type>
        <definition>static constexpr std::string Ikarus::ResultEvaluators::VonMises::name</definition>
        <argsstring>()</argsstring>
        <name>name</name>
        <qualifiedname>Ikarus::ResultEvaluators::VonMises::name</qualifiedname>
        <briefdescription>
<para>Get the name of the result type. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>String representing the name </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/io/resultevaluators.hh" line="50" column="32" bodyfile="/__w/ikarus/ikarus/repo/ikarus/io/resultevaluators.hh" bodystart="50" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="a01718_1a4fec0e03332fac9610d1f42a9e412f7f" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr int</type>
        <definition>static constexpr int Ikarus::ResultEvaluators::VonMises::ncomps</definition>
        <argsstring>()</argsstring>
        <name>ncomps</name>
        <qualifiedname>Ikarus::ResultEvaluators::VonMises::ncomps</qualifiedname>
        <briefdescription>
<para>Get the number of components in the result (always 1 for <ref refid="a01718" kindref="compound">VonMises</ref>) </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Number of components </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/io/resultevaluators.hh" line="56" column="24" bodyfile="/__w/ikarus/ikarus/repo/ikarus/io/resultevaluators.hh" bodystart="56" bodyend="56"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Struct for calculating von Mises stress. </para>
    </briefdescription>
    <detaileddescription>
<para>The <ref refid="a01718" kindref="compound">VonMises</ref> struct provides a function call operator to calculate von Mises stress. In 2D, this assumes a plane stress state </para>
    </detaileddescription>
    <location file="/__w/ikarus/ikarus/repo/ikarus/io/resultevaluators.hh" line="28" column="1" bodyfile="/__w/ikarus/ikarus/repo/ikarus/io/resultevaluators.hh" bodystart="29" bodyend="57"/>
    <listofallmembers>
      <member refid="a01718_1adc5bbea30401fd0a203237199f400872" prot="public" virt="non-virtual"><scope>Ikarus::ResultEvaluators::VonMises</scope><name>name</name></member>
      <member refid="a01718_1a4fec0e03332fac9610d1f42a9e412f7f" prot="public" virt="non-virtual"><scope>Ikarus::ResultEvaluators::VonMises</scope><name>ncomps</name></member>
      <member refid="a01718_1a4a16334a6d486018a77727fb2acca63c" prot="public" virt="non-virtual"><scope>Ikarus::ResultEvaluators::VonMises</scope><name>operator()</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
