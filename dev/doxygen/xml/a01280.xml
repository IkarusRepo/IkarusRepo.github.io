<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="a01280" kind="class" language="C++" prot="public">
    <compoundname>Ikarus::ScalarFlatAssembler</compoundname>
    <basecompoundref refid="a01268" prot="public" virt="non-virtual">Ikarus::ScalarAssembler&lt; ScalarFlatAssembler&lt; FEC, DV &gt;, FEC, DV, double &gt;</basecompoundref>
    <basecompoundref refid="a01264" prot="public" virt="non-virtual">Ikarus::FlatAssemblerBase&lt; FEC, DV &gt;</basecompoundref>
    <derivedcompoundref refid="a01284" prot="public" virt="non-virtual">Ikarus::VectorFlatAssembler&lt; FEC, DV &gt;</derivedcompoundref>
    <includes refid="a00170" local="no">ikarus/assembler/simpleassemblers.hh</includes>
    <templateparamlist>
      <param>
        <type>typename FEC</type>
      </param>
      <param>
        <type>typename DV</type>
      </param>
    </templateparamlist>
      <sectiondef kind="protected-type">
      <memberdef kind="typedef" id="a01280_1afa6c25d056fab916cd7c96dfd9e0b000" prot="protected" static="no">
        <type><ref refid="a01264" kindref="compound">FlatAssemblerBase</ref>&lt; FEC, DV &gt;</type>
        <definition>using Ikarus::ScalarFlatAssembler&lt; FEC, DV &gt;::Base =  FlatAssemblerBase&lt;FEC, DV&gt;</definition>
        <argsstring></argsstring>
        <name>Base</name>
        <qualifiedname>Ikarus::ScalarFlatAssembler::Base</qualifiedname>
        <briefdescription>
<para>Type alias for the base class. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="32" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="32" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="a01280_1a70d1c4f02e8cd3b5d78257aa1f46ffdf" prot="protected" static="no" mutable="no">
        <type>friend</type>
        <definition>friend Ikarus::ScalarFlatAssembler&lt; FEC, DV &gt;::ScalarAssembler&lt; ScalarFlatAssembler, FEC, DV, double &gt;</definition>
        <argsstring></argsstring>
        <name>ScalarAssembler&lt; ScalarFlatAssembler, FEC, DV, double &gt;</name>
        <qualifiedname>Ikarus::ScalarFlatAssembler::ScalarAssembler&lt; ScalarFlatAssembler, FEC, DV, double &gt;</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="33" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="a01280_1a97ae0fb0021223b4b7f485fde58206f0" prot="protected" static="no" mutable="no">
        <type><ref refid="a01268_1a16ca73d65a203ae40cc5fde52a842d55" kindref="member">ScalarType</ref></type>
        <definition>ScalarType Ikarus::ScalarFlatAssembler&lt; FEC, DV &gt;::scal_</definition>
        <argsstring></argsstring>
        <name>scal_</name>
        <qualifiedname>Ikarus::ScalarFlatAssembler::scal_</qualifiedname>
        <initializer>{0.0}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="48" column="14" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="48" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="a01280_1a8edb919038d3239ca7bcc00df81bfa60" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="a01268_1a16ca73d65a203ae40cc5fde52a842d55" kindref="member">ScalarType</ref> &amp;</type>
        <definition>ScalarFlatAssembler&lt; B, FEC &gt;::ScalarType &amp; Ikarus::ScalarFlatAssembler&lt; B, FEC &gt;::getScalarImpl</definition>
        <argsstring>(const FERequirement &amp;feRequirements, ScalarAffordance affordance)</argsstring>
        <name>getScalarImpl</name>
        <qualifiedname>Ikarus::ScalarFlatAssembler::getScalarImpl</qualifiedname>
        <param>
          <type>const <ref refid="a01264_1a333c76dd0740ef9d6f4e8424021f0315" kindref="member">FERequirement</ref> &amp;</type>
          <declname>feRequirements</declname>
        </param>
        <param>
          <type><ref refid="a00384_1af6f894084edd9109762b86222995ef2a" kindref="member">ScalarAffordance</ref></type>
          <declname>affordance</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="46" column="14" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.inl" bodystart="15" bodyend="22"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="a01280_1affbdfc67b017b9304f2dfd519509a8fb" prot="public" static="no">
        <type>typename DV::Basis</type>
        <definition>using Ikarus::FlatAssemblerBase&lt; FEC, DV &gt;::Basis =  typename DV::Basis</definition>
        <argsstring></argsstring>
        <name>Basis</name>
        <qualifiedname>Ikarus::ScalarFlatAssembler::Basis</qualifiedname>
        <briefdescription>
<para>Type of the basis. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="38" column="1" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/interface.hh" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="a01280_1abf6599ec65ab1574a3282a553584f9e9" prot="public" static="no">
        <type>DV</type>
        <definition>using Ikarus::FlatAssemblerBase&lt; FEC, DV &gt;::DirichletValuesType =  DV</definition>
        <argsstring></argsstring>
        <name>DirichletValuesType</name>
        <qualifiedname>Ikarus::ScalarFlatAssembler::DirichletValuesType</qualifiedname>
        <briefdescription>
<para>Type of the Dirichlet values. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="39" column="1" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/interface.hh" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="a01280_1a4bb11a213bcf6c6f18e731bf4281edcb" prot="public" static="no">
        <type>FEC</type>
        <definition>using Ikarus::FlatAssemblerBase&lt; FEC, DV &gt;::FEContainer =  FEC</definition>
        <argsstring></argsstring>
        <name>FEContainer</name>
        <qualifiedname>Ikarus::ScalarFlatAssembler::FEContainer</qualifiedname>
        <briefdescription>
<para>Type of the finite element container (reference or by value). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="40" column="1" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/interface.hh" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="a01280_1a333c76dd0740ef9d6f4e8424021f0315" prot="public" static="no">
        <type>typename FEContainerRaw::value_type::Requirement</type>
        <definition>using Ikarus::FlatAssemblerBase&lt; FEC, DV &gt;::FERequirement =  typename FEContainerRaw::value_type::Requirement</definition>
        <argsstring></argsstring>
        <name>FERequirement</name>
        <qualifiedname>Ikarus::ScalarFlatAssembler::FERequirement</qualifiedname>
        <briefdescription>
<para>Type of the finite element requirement. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="41" column="1" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/interface.hh" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="a01280_1a9cd6c79d6625adb9767a14ba5c1ff283" prot="public" static="no">
        <type>typename FEContainerRaw::value_type::GlobalIndex</type>
        <definition>using Ikarus::FlatAssemblerBase&lt; FEC, DV &gt;::GlobalIndex =  typename FEContainerRaw::value_type::GlobalIndex</definition>
        <argsstring></argsstring>
        <name>GlobalIndex</name>
        <qualifiedname>Ikarus::ScalarFlatAssembler::GlobalIndex</qualifiedname>
        <briefdescription>
<para>Type of the global index. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="42" column="1" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/interface.hh" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="a01268_1a495146eca3941b7f3fce4e4cfad0db5b" prot="public" static="no">
        <type><ref refid="a01280" kindref="compound">ScalarFlatAssembler</ref>&lt; FEC, DV &gt;</type>
        <definition>using Ikarus::ScalarAssembler&lt; ScalarFlatAssembler&lt; FEC, DV &gt; , FEC, DV, double  &gt;::ScalarAssemblerType =  ScalarFlatAssembler&lt; FEC, DV &gt;</definition>
        <argsstring></argsstring>
        <name>ScalarAssemblerType</name>
        <qualifiedname>Ikarus::ScalarAssembler&lt; ScalarFlatAssembler&lt; FEC, DV &gt;, FEC, DV, double &gt;::ScalarAssemblerType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/interface.hh" line="269" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/interface.hh" bodystart="269" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="a01268_1a16ca73d65a203ae40cc5fde52a842d55" prot="public" static="no">
        <type>double</type>
        <definition>using Ikarus::ScalarAssembler&lt; ScalarFlatAssembler&lt; FEC, DV &gt; , FEC, DV, double  &gt;::ScalarType =  double</definition>
        <argsstring></argsstring>
        <name>ScalarType</name>
        <qualifiedname>Ikarus::ScalarAssembler&lt; ScalarFlatAssembler&lt; FEC, DV &gt;, FEC, DV, double &gt;::ScalarType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/interface.hh" line="270" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/interface.hh" bodystart="270" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="a01268_1a19e5808c52606d12f9bd37d3c719d1a4" prot="public" static="no">
        <type>std::remove_cvref_t&lt; FEC &gt;</type>
        <definition>using Ikarus::ScalarAssembler&lt; ScalarFlatAssembler&lt; FEC, DV &gt; , FEC, DV, double  &gt;::FEContainerRaw =  std::remove_cvref_t&lt;FEC&gt;</definition>
        <argsstring></argsstring>
        <name>FEContainerRaw</name>
        <qualifiedname>Ikarus::ScalarAssembler&lt; ScalarFlatAssembler&lt; FEC, DV &gt;, FEC, DV, double &gt;::FEContainerRaw</qualifiedname>
        <briefdescription>
<para>Type of the raw finite element container. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/interface.hh" line="273" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/interface.hh" bodystart="273" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="a01264_1a05cbe5a00c2847e75eb7beb544f136ec" prot="public" static="no">
        <type>std::remove_cvref_t&lt; FEC &gt;</type>
        <definition>using Ikarus::FlatAssemblerBase&lt; FEC, DV &gt;::FEContainerRaw =  std::remove_cvref_t&lt;FEC&gt;</definition>
        <argsstring></argsstring>
        <name>FEContainerRaw</name>
        <qualifiedname>Ikarus::FlatAssemblerBase::FEContainerRaw</qualifiedname>
        <briefdescription>
<para>Type of the raw finite element container. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/interface.hh" line="32" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/interface.hh" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="a01264_1acee7beef45351811911847086414709e" prot="public" static="no">
        <type>typename Basis::GridView</type>
        <definition>using Ikarus::FlatAssemblerBase&lt; FEC, DV &gt;::GridView =  typename Basis::GridView</definition>
        <argsstring></argsstring>
        <name>GridView</name>
        <qualifiedname>Ikarus::FlatAssemblerBase::GridView</qualifiedname>
        <briefdescription>
<para>Type of the grid view. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/interface.hh" line="37" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/interface.hh" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="a01264_1a36364ae9cda497b90ea2c952b9eaaa53" prot="public" static="no">
        <type>typename DirichletValuesType::SizeType</type>
        <definition>using Ikarus::FlatAssemblerBase&lt; FEC, DV &gt;::SizeType =  typename DirichletValuesType::SizeType</definition>
        <argsstring></argsstring>
        <name>SizeType</name>
        <qualifiedname>Ikarus::FlatAssemblerBase::SizeType</qualifiedname>
        <briefdescription>
<para>size_type of the container storing Dirichlet flags </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/interface.hh" line="41" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/interface.hh" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="a01264_1ab329b44ba5ca22e6bdb3f7d65953caa7" prot="public" static="no">
        <type><ref refid="a01352" kindref="compound">AffordanceCollection</ref>&lt; <ref refid="a00384_1af6f894084edd9109762b86222995ef2a" kindref="member">ScalarAffordance</ref>, <ref refid="a00384_1aab9e3e38507d1db7602bc750718c302a" kindref="member">VectorAffordance</ref>, <ref refid="a00384_1a390d5311179ec61d163a29c943b3d1a0" kindref="member">MatrixAffordance</ref> &gt;</type>
        <definition>using Ikarus::FlatAssemblerBase&lt; FEC, DV &gt;::AffordanceCollectionType =  AffordanceCollection&lt;ScalarAffordance, VectorAffordance, MatrixAffordance&gt;</definition>
        <argsstring></argsstring>
        <name>AffordanceCollectionType</name>
        <qualifiedname>Ikarus::FlatAssemblerBase::AffordanceCollectionType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/interface.hh" line="42" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/interface.hh" bodystart="42" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="a01268_1afbc9302eebba262e7510ed5f4c37eaa2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="a01268_1a16ca73d65a203ae40cc5fde52a842d55" kindref="member">ScalarType</ref> &amp;</type>
        <definition>const ScalarType &amp; Ikarus::ScalarAssembler&lt; ScalarFlatAssembler&lt; FEC, DV &gt; , FEC, DV, double  &gt;::scalar</definition>
        <argsstring>(const FERequirement &amp;feRequirements, ScalarAffordance affordance)</argsstring>
        <name>scalar</name>
        <qualifiedname>Ikarus::ScalarAssembler&lt; ScalarFlatAssembler&lt; FEC, DV &gt;, FEC, DV, double &gt;::scalar</qualifiedname>
        <param>
          <type>const <ref refid="a01264_1a333c76dd0740ef9d6f4e8424021f0315" kindref="member">FERequirement</ref> &amp;</type>
          <declname>feRequirements</declname>
        </param>
        <param>
          <type><ref refid="a00384_1af6f894084edd9109762b86222995ef2a" kindref="member">ScalarAffordance</ref></type>
          <declname>affordance</declname>
        </param>
        <briefdescription>
<para>Calculates the scalar quantity requested by feRequirements and affordance. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>feRequirements</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference to the finite element requirements. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>affordance</parametername>
</parameternamelist>
<parameterdescription>
<para>The scalar affordance </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Const reference to the calculated scalar quantity. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/interface.hh" line="283" column="20" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/interface.hh" bodystart="283" bodyend="285"/>
      </memberdef>
      <memberdef kind="function" id="a01268_1a0049c0dddc7ffb131777fff41da83f5d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="a01268_1a16ca73d65a203ae40cc5fde52a842d55" kindref="member">ScalarType</ref> &amp;</type>
        <definition>const ScalarType &amp; Ikarus::ScalarAssembler&lt; ScalarFlatAssembler&lt; FEC, DV &gt; , FEC, DV, double  &gt;::scalar</definition>
        <argsstring>()</argsstring>
        <name>scalar</name>
        <qualifiedname>Ikarus::ScalarAssembler&lt; ScalarFlatAssembler&lt; FEC, DV &gt;, FEC, DV, double &gt;::scalar</qualifiedname>
        <briefdescription>
<para>Calculates the scalar quantity requested by the bound feRequirements and returns a reference. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Const reference to the calculated scalar quantity. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/interface.hh" line="292" column="20" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/interface.hh" bodystart="292" bodyend="295"/>
      </memberdef>
      <memberdef kind="function" id="a01264_1a8b47f036b83e4e712b791d9cfe910f2b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t Ikarus::FlatAssemblerBase&lt; FEC, DV &gt;::reducedSize</definition>
        <argsstring>()</argsstring>
        <name>reducedSize</name>
        <qualifiedname>Ikarus::FlatAssemblerBase::reducedSize</qualifiedname>
        <briefdescription>
<para>Returns the size of the free degrees of freedom, which are not fixed by a Dirichlet boundary condition. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Size of the reduced degrees of freedom. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/interface.hh" line="68" column="10" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/interface.hh" bodystart="68" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="a01264_1ae3fed93b367a8d5eb4e369132a7cc355" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t Ikarus::FlatAssemblerBase&lt; FEC, DV &gt;::size</definition>
        <argsstring>()</argsstring>
        <name>size</name>
        <qualifiedname>Ikarus::FlatAssemblerBase::size</qualifiedname>
        <briefdescription>
<para>Returns the size of nodes, i.e., the number of degrees of freedom. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Size of the degrees of freedom. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/interface.hh" line="74" column="10" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/interface.hh" bodystart="74" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="a01264_1a5ca172ae99902193abf31ab542ff4aaf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Eigen::VectorXd</type>
        <definition>Eigen::VectorXd Ikarus::FlatAssemblerBase&lt; B, FEC &gt;::createFullVector</definition>
        <argsstring>(Eigen::Ref&lt; const Eigen::VectorXd &gt; reducedVector)</argsstring>
        <name>createFullVector</name>
        <qualifiedname>Ikarus::FlatAssemblerBase::createFullVector</qualifiedname>
        <param>
          <type>Eigen::Ref&lt; const Eigen::VectorXd &gt;</type>
          <declname>reducedVector</declname>
        </param>
        <briefdescription>
<para>Creates the full-sized vector of size Dof and inserts the values of a reduced vector at the &quot;free&quot; degrees of freedom and writes a zero for the fixed doffs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>reducedVector</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference to the reduced vector. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Eigen::VectorXd The full-sized vector. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/interface.hh" line="83" column="19" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.inl" bodystart="25" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="a01264_1aa8da4086d468797668b6d551129e96dd" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto &amp;</type>
        <definition>auto &amp; Ikarus::FlatAssemblerBase&lt; FEC, DV &gt;::finiteElements</definition>
        <argsstring>() const</argsstring>
        <name>finiteElements</name>
        <qualifiedname>Ikarus::FlatAssemblerBase::finiteElements</qualifiedname>
        <briefdescription>
<para>Returns the container of finite elements. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Reference to the finite element container. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/interface.hh" line="89" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/interface.hh" bodystart="89" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="a01264_1a55ec19180c55953ee40dcf2bf3735341" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const auto &amp;</type>
        <definition>const auto &amp; Ikarus::FlatAssemblerBase&lt; FEC, DV &gt;::dirichletValues</definition>
        <argsstring>() const</argsstring>
        <name>dirichletValues</name>
        <qualifiedname>Ikarus::FlatAssemblerBase::dirichletValues</qualifiedname>
        <briefdescription>
<para>Returns the dirichlet value object. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Reference to the dirichlet value object. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/interface.hh" line="95" column="14" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/interface.hh" bodystart="95" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="a01264_1af7c5c0e591d6b228efab5c9c66f61d46" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const auto &amp;</type>
        <definition>const auto &amp; Ikarus::FlatAssemblerBase&lt; FEC, DV &gt;::gridView</definition>
        <argsstring>() const</argsstring>
        <name>gridView</name>
        <qualifiedname>Ikarus::FlatAssemblerBase::gridView</qualifiedname>
        <briefdescription>
<para>Returns the gridView object. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Reference to the gridView object. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/interface.hh" line="101" column="14" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/interface.hh" bodystart="101" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="a01264_1a72f083acd813f210d6d9f7a482021495" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t Ikarus::FlatAssemblerBase&lt; FEC, DV &gt;::constraintsBelow</definition>
        <argsstring>(SizeType i) const</argsstring>
        <name>constraintsBelow</name>
        <qualifiedname>Ikarus::FlatAssemblerBase::constraintsBelow</qualifiedname>
        <param>
          <type><ref refid="a01264_1a36364ae9cda497b90ea2c952b9eaaa53" kindref="member">SizeType</ref></type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Returns the number of constraints below a given degrees of freedom index. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>i</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the degree of freedom. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Number of constraints below the given index. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/interface.hh" line="109" column="11" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/interface.hh" bodystart="109" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="a01264_1a8678490defc92df8bdb8f5269afeba44" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ikarus::FlatAssemblerBase&lt; FEC, DV &gt;::isConstrained</definition>
        <argsstring>(SizeType i) const</argsstring>
        <name>isConstrained</name>
        <qualifiedname>Ikarus::FlatAssemblerBase::isConstrained</qualifiedname>
        <param>
          <type><ref refid="a01264_1a36364ae9cda497b90ea2c952b9eaaa53" kindref="member">SizeType</ref></type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Returns true if a given degree of freedom is fixed by a Dirichlet boundary condition. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>i</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the degree of freedom. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if the degree of freedom is fixed; false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/interface.hh" line="117" column="9" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/interface.hh" bodystart="117" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="a01264_1adf77b0e3c1dab4782a2da06fc712b9c5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t Ikarus::FlatAssemblerBase&lt; FEC, DV &gt;::estimateOfConnectivity</definition>
        <argsstring>() const</argsstring>
        <name>estimateOfConnectivity</name>
        <qualifiedname>Ikarus::FlatAssemblerBase::estimateOfConnectivity</qualifiedname>
        <briefdescription>
<para>Coarse estimate of node connectivity, i.e., this relates to the bandwidth of a sparse matrix. This estimate overestimates the real connectivity and should only be used for allocating vectors. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Size_t Coarse estimate of node connectivity. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/interface.hh" line="125" column="11" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/interface.hh" bodystart="125" bodyend="127"/>
      </memberdef>
      <memberdef kind="function" id="a01264_1a31f0e6f22fd268a6b1ca813db7cbc132" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ikarus::FlatAssemblerBase&lt; FEC, DV &gt;::bind</definition>
        <argsstring>(const FERequirement &amp;req, AffordanceCollectionType affordanceCollection, DBCOption dbcOption=DBCOption::Full)</argsstring>
        <name>bind</name>
        <qualifiedname>Ikarus::FlatAssemblerBase::bind</qualifiedname>
        <param>
          <type>const <ref refid="a01264_1a333c76dd0740ef9d6f4e8424021f0315" kindref="member">FERequirement</ref> &amp;</type>
          <declname>req</declname>
        </param>
        <param>
          <type><ref refid="a01264_1ab329b44ba5ca22e6bdb3f7d65953caa7" kindref="member">AffordanceCollectionType</ref></type>
          <declname>affordanceCollection</declname>
        </param>
        <param>
          <type><ref refid="a00384_1a9f83fad9f4c149f249165a13f2370eec" kindref="member">DBCOption</ref></type>
          <declname>dbcOption</declname>
          <defval><ref refid="a00384_1a9f83fad9f4c149f249165a13f2370eecabbd47109890259c0127154db1af26c75" kindref="member">DBCOption::Full</ref></defval>
        </param>
        <briefdescription>
<para>Binds the assembler to a set of finite element requirement and affordance. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>req</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference to the finite element requirement. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>affordanceCollection</parametername>
</parameternamelist>
<parameterdescription>
<para>The affordance collection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/interface.hh" line="135" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/interface.hh" bodystart="135" bodyend="140"/>
      </memberdef>
      <memberdef kind="function" id="a01264_1a3d33fb50019b516b6c9a2f32b3add005" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ikarus::FlatAssemblerBase&lt; FEC, DV &gt;::bind</definition>
        <argsstring>(const FERequirement &amp;req)</argsstring>
        <name>bind</name>
        <qualifiedname>Ikarus::FlatAssemblerBase::bind</qualifiedname>
        <param>
          <type>const <ref refid="a01264_1a333c76dd0740ef9d6f4e8424021f0315" kindref="member">FERequirement</ref> &amp;</type>
          <declname>req</declname>
        </param>
        <briefdescription>
<para>Binds the assembler to a finite element requirement. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>req</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference to the finite element requirement. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/interface.hh" line="147" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/interface.hh" bodystart="147" bodyend="147"/>
      </memberdef>
      <memberdef kind="function" id="a01264_1a00f5e3e4ca579dea6acecf9625910658" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ikarus::FlatAssemblerBase&lt; FEC, DV &gt;::bind</definition>
        <argsstring>(AffordanceCollectionType affordanceCollection)</argsstring>
        <name>bind</name>
        <qualifiedname>Ikarus::FlatAssemblerBase::bind</qualifiedname>
        <param>
          <type><ref refid="a01264_1ab329b44ba5ca22e6bdb3f7d65953caa7" kindref="member">AffordanceCollectionType</ref></type>
          <declname>affordanceCollection</declname>
        </param>
        <briefdescription>
<para>Binds the assembler to an affordance collection. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>affordanceCollection</parametername>
</parameternamelist>
<parameterdescription>
<para>The affordance collection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/interface.hh" line="154" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/interface.hh" bodystart="154" bodyend="156"/>
      </memberdef>
      <memberdef kind="function" id="a01264_1a363ca54e8c3ae9838ab7621cecf24930" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ikarus::FlatAssemblerBase&lt; FEC, DV &gt;::bind</definition>
        <argsstring>(DBCOption dbcOption)</argsstring>
        <name>bind</name>
        <qualifiedname>Ikarus::FlatAssemblerBase::bind</qualifiedname>
        <param>
          <type><ref refid="a00384_1a9f83fad9f4c149f249165a13f2370eec" kindref="member">DBCOption</ref></type>
          <declname>dbcOption</declname>
        </param>
        <briefdescription>
<para>Binds the assembler to an affordance collection. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dbcOption</parametername>
</parameternamelist>
<parameterdescription>
<para>The EnforcingDBC option </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/interface.hh" line="163" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/interface.hh" bodystart="163" bodyend="163"/>
      </memberdef>
      <memberdef kind="function" id="a01264_1add087b8554f56a2c014de606fd253301" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ikarus::FlatAssemblerBase&lt; FEC, DV &gt;::bound</definition>
        <argsstring>() const</argsstring>
        <name>bound</name>
        <qualifiedname>Ikarus::FlatAssemblerBase::bound</qualifiedname>
        <briefdescription>
<para>Returns true if the assembler is bound to a finite element requirement and affordance. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>True if the assembler is bound; false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/interface.hh" line="171" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/interface.hh" bodystart="171" bodyend="176"/>
      </memberdef>
      <memberdef kind="function" id="a01264_1a6741ecbc2783722b5a049ce0939f94b7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ikarus::FlatAssemblerBase&lt; FEC, DV &gt;::boundToRequirement</definition>
        <argsstring>() const</argsstring>
        <name>boundToRequirement</name>
        <qualifiedname>Ikarus::FlatAssemblerBase::boundToRequirement</qualifiedname>
        <briefdescription>
<para>Returns true if the assembler is bound to a finite element requirement. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>True if the assembler is bound; false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/interface.hh" line="184" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/interface.hh" bodystart="184" bodyend="186"/>
        <referencedby refid="a01264_1add087b8554f56a2c014de606fd253301" compoundref="a02855" startline="171" endline="176">Ikarus::FlatAssemblerBase&lt; FEC, DV &gt;::bound</referencedby>
      </memberdef>
      <memberdef kind="function" id="a01264_1a4a3a1767c8d26f75fe217de7d099844d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ikarus::FlatAssemblerBase&lt; FEC, DV &gt;::boundToAffordanceCollection</definition>
        <argsstring>() const</argsstring>
        <name>boundToAffordanceCollection</name>
        <qualifiedname>Ikarus::FlatAssemblerBase::boundToAffordanceCollection</qualifiedname>
        <briefdescription>
<para>Returns true if the assembler is bound to an affordance collection. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>True if the assembler is bound; false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/interface.hh" line="194" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/interface.hh" bodystart="194" bodyend="196"/>
        <referencedby refid="a01264_1add087b8554f56a2c014de606fd253301" compoundref="a02855" startline="171" endline="176">Ikarus::FlatAssemblerBase&lt; FEC, DV &gt;::bound</referencedby>
      </memberdef>
      <memberdef kind="function" id="a01264_1a68d6a71fc6866363e9b8519c8f4334b1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ikarus::FlatAssemblerBase&lt; FEC, DV &gt;::boundToDBCOption</definition>
        <argsstring>() const</argsstring>
        <name>boundToDBCOption</name>
        <qualifiedname>Ikarus::FlatAssemblerBase::boundToDBCOption</qualifiedname>
        <briefdescription>
<para>Returns true if the assembler is bound to an affordance collection. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>True if the assembler is bound; false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/interface.hh" line="204" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/interface.hh" bodystart="204" bodyend="206"/>
        <referencedby refid="a01264_1add087b8554f56a2c014de606fd253301" compoundref="a02855" startline="171" endline="176">Ikarus::FlatAssemblerBase&lt; FEC, DV &gt;::bound</referencedby>
      </memberdef>
      <memberdef kind="function" id="a01264_1a6424b3d5449da29188bb931abb8ba551" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="a01264_1a333c76dd0740ef9d6f4e8424021f0315" kindref="member">FERequirement</ref> &amp;</type>
        <definition>FERequirement &amp; Ikarus::FlatAssemblerBase&lt; FEC, DV &gt;::requirement</definition>
        <argsstring>()</argsstring>
        <name>requirement</name>
        <qualifiedname>Ikarus::FlatAssemblerBase::requirement</qualifiedname>
        <briefdescription>
<para>Returns the requirement. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/interface.hh" line="212" column="17" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/interface.hh" bodystart="212" bodyend="217"/>
      </memberdef>
      <memberdef kind="function" id="a01264_1ae194120d201120bc7a4a6a929d576f94" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="a01264_1ab329b44ba5ca22e6bdb3f7d65953caa7" kindref="member">AffordanceCollectionType</ref></type>
        <definition>AffordanceCollectionType Ikarus::FlatAssemblerBase&lt; FEC, DV &gt;::affordanceCollection</definition>
        <argsstring>() const</argsstring>
        <name>affordanceCollection</name>
        <qualifiedname>Ikarus::FlatAssemblerBase::affordanceCollection</qualifiedname>
        <briefdescription>
<para>Returns the affordance. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/interface.hh" line="223" column="28" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/interface.hh" bodystart="223" bodyend="228"/>
        <referencedby refid="a01264_1a31f0e6f22fd268a6b1ca813db7cbc132" compoundref="a02855" startline="135" endline="140">Ikarus::FlatAssemblerBase&lt; FEC, DV &gt;::bind</referencedby>
      </memberdef>
      <memberdef kind="function" id="a01264_1a74f21be5d0b287d3dee421301051e4b3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="a00384_1a9f83fad9f4c149f249165a13f2370eec" kindref="member">DBCOption</ref></type>
        <definition>DBCOption Ikarus::FlatAssemblerBase&lt; FEC, DV &gt;::dBCOption</definition>
        <argsstring>() const</argsstring>
        <name>dBCOption</name>
        <qualifiedname>Ikarus::FlatAssemblerBase::dBCOption</qualifiedname>
        <briefdescription>
<para>Returns the dirichlet boundary condition enforcement option. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/interface.hh" line="234" column="13" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/interface.hh" bodystart="234" bodyend="239"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="a01280" kindref="compound">ScalarFlatAssembler</ref> assembles scalar quantities. </para>
    </briefdescription>
    <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>FEC</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of the finite element container. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>DV</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of the Dirichlet values. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="6">
        <label>Ikarus::DenseFlatAssembler&lt; FEC, DV &gt;</label>
        <link refid="a01292"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>Ikarus::FlatAssemblerBase&lt; FEC, DV &gt;</label>
        <link refid="a01264"/>
      </node>
      <node id="3">
        <label>Ikarus::ScalarAssembler&lt; SA, FEC, DV, ST &gt;</label>
        <link refid="a01268"/>
      </node>
      <node id="1">
        <label>Ikarus::ScalarFlatAssembler&lt; FEC, DV &gt;</label>
        <link refid="a01280"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>Ikarus::SparseFlatAssembler&lt; FEC, DV &gt;</label>
        <link refid="a01288"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>Ikarus::VectorFlatAssembler&lt; FEC, DV &gt;</label>
        <link refid="a01284"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>Ikarus::ScalarAssembler&lt; ScalarFlatAssembler&lt; FEC, DV &gt;, FEC, DV, double &gt;</label>
        <link refid="a01268"/>
        <childnode refid="3" relation="template-instance">
          <edgelabel>&lt; ScalarFlatAssembler&lt; FEC, DV &gt;, FEC, DV, double &gt;</edgelabel>
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="4">
        <label>Ikarus::FlatAssemblerBase&lt; FEC, DV &gt;</label>
        <link refid="a01264"/>
      </node>
      <node id="3">
        <label>Ikarus::ScalarAssembler&lt; SA, FEC, DV, ST &gt;</label>
        <link refid="a01268"/>
      </node>
      <node id="1">
        <label>Ikarus::ScalarFlatAssembler&lt; FEC, DV &gt;</label>
        <link refid="a01280"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>Ikarus::ScalarAssembler&lt; ScalarFlatAssembler&lt; FEC, DV &gt;, FEC, DV, double &gt;</label>
        <link refid="a01268"/>
        <childnode refid="3" relation="template-instance">
          <edgelabel>&lt; ScalarFlatAssembler&lt; FEC, DV &gt;, FEC, DV, double &gt;</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" line="28" column="1" bodyfile="/__w/ikarus/ikarus/repo/ikarus/assembler/simpleassemblers.hh" bodystart="30" bodyend="49"/>
    <listofallmembers>
      <member refid="a01264_1ae194120d201120bc7a4a6a929d576f94" prot="public" virt="non-virtual"><scope>Ikarus::ScalarFlatAssembler</scope><name>affordanceCollection</name></member>
      <member refid="a01264_1ab329b44ba5ca22e6bdb3f7d65953caa7" prot="public" virt="non-virtual"><scope>Ikarus::ScalarFlatAssembler</scope><name>AffordanceCollectionType</name></member>
      <member refid="a01280_1afa6c25d056fab916cd7c96dfd9e0b000" prot="protected" virt="non-virtual"><scope>Ikarus::ScalarFlatAssembler</scope><name>Base</name></member>
      <member refid="a01280_1affbdfc67b017b9304f2dfd519509a8fb" prot="public" virt="non-virtual"><scope>Ikarus::ScalarFlatAssembler</scope><name>Basis</name></member>
      <member refid="a01264_1a31f0e6f22fd268a6b1ca813db7cbc132" prot="public" virt="non-virtual"><scope>Ikarus::ScalarFlatAssembler</scope><name>bind</name></member>
      <member refid="a01264_1a3d33fb50019b516b6c9a2f32b3add005" prot="public" virt="non-virtual"><scope>Ikarus::ScalarFlatAssembler</scope><name>bind</name></member>
      <member refid="a01264_1a00f5e3e4ca579dea6acecf9625910658" prot="public" virt="non-virtual"><scope>Ikarus::ScalarFlatAssembler</scope><name>bind</name></member>
      <member refid="a01264_1a363ca54e8c3ae9838ab7621cecf24930" prot="public" virt="non-virtual"><scope>Ikarus::ScalarFlatAssembler</scope><name>bind</name></member>
      <member refid="a01264_1add087b8554f56a2c014de606fd253301" prot="public" virt="non-virtual"><scope>Ikarus::ScalarFlatAssembler</scope><name>bound</name></member>
      <member refid="a01264_1a4a3a1767c8d26f75fe217de7d099844d" prot="public" virt="non-virtual"><scope>Ikarus::ScalarFlatAssembler</scope><name>boundToAffordanceCollection</name></member>
      <member refid="a01264_1a68d6a71fc6866363e9b8519c8f4334b1" prot="public" virt="non-virtual"><scope>Ikarus::ScalarFlatAssembler</scope><name>boundToDBCOption</name></member>
      <member refid="a01264_1a6741ecbc2783722b5a049ce0939f94b7" prot="public" virt="non-virtual"><scope>Ikarus::ScalarFlatAssembler</scope><name>boundToRequirement</name></member>
      <member refid="a01264_1a72f083acd813f210d6d9f7a482021495" prot="public" virt="non-virtual"><scope>Ikarus::ScalarFlatAssembler</scope><name>constraintsBelow</name></member>
      <member refid="a01264_1a5ca172ae99902193abf31ab542ff4aaf" prot="public" virt="non-virtual"><scope>Ikarus::ScalarFlatAssembler</scope><name>createFullVector</name></member>
      <member refid="a01264_1a74f21be5d0b287d3dee421301051e4b3" prot="public" virt="non-virtual"><scope>Ikarus::ScalarFlatAssembler</scope><name>dBCOption</name></member>
      <member refid="a01264_1a55ec19180c55953ee40dcf2bf3735341" prot="public" virt="non-virtual"><scope>Ikarus::ScalarFlatAssembler</scope><name>dirichletValues</name></member>
      <member refid="a01280_1abf6599ec65ab1574a3282a553584f9e9" prot="public" virt="non-virtual"><scope>Ikarus::ScalarFlatAssembler</scope><name>DirichletValuesType</name></member>
      <member refid="a01264_1adf77b0e3c1dab4782a2da06fc712b9c5" prot="public" virt="non-virtual"><scope>Ikarus::ScalarFlatAssembler</scope><name>estimateOfConnectivity</name></member>
      <member refid="a01280_1a4bb11a213bcf6c6f18e731bf4281edcb" prot="public" virt="non-virtual"><scope>Ikarus::ScalarFlatAssembler</scope><name>FEContainer</name></member>
      <member refid="a01268_1a19e5808c52606d12f9bd37d3c719d1a4" prot="public" virt="non-virtual" ambiguityscope="ScalarAssembler&lt; ScalarFlatAssembler&lt; FEC, DV &gt;, FEC, DV, double &gt;::"><scope>Ikarus::ScalarFlatAssembler</scope><name>FEContainerRaw</name></member>
      <member refid="a01264_1a05cbe5a00c2847e75eb7beb544f136ec" prot="public" virt="non-virtual" ambiguityscope="Ikarus::FlatAssemblerBase::"><scope>Ikarus::ScalarFlatAssembler</scope><name>FEContainerRaw</name></member>
      <member refid="a01280_1a333c76dd0740ef9d6f4e8424021f0315" prot="public" virt="non-virtual"><scope>Ikarus::ScalarFlatAssembler</scope><name>FERequirement</name></member>
      <member refid="a01264_1aa8da4086d468797668b6d551129e96dd" prot="public" virt="non-virtual"><scope>Ikarus::ScalarFlatAssembler</scope><name>finiteElements</name></member>
      <member refid="a01264_1a5dcfae0f9b6e53f27b902be8dc5353eb" prot="public" virt="non-virtual"><scope>Ikarus::ScalarFlatAssembler</scope><name>FlatAssemblerBase</name></member>
      <member refid="a01280_1a8edb919038d3239ca7bcc00df81bfa60" prot="protected" virt="non-virtual"><scope>Ikarus::ScalarFlatAssembler</scope><name>getScalarImpl</name></member>
      <member refid="a01280_1a9cd6c79d6625adb9767a14ba5c1ff283" prot="public" virt="non-virtual"><scope>Ikarus::ScalarFlatAssembler</scope><name>GlobalIndex</name></member>
      <member refid="a01264_1acee7beef45351811911847086414709e" prot="public" virt="non-virtual"><scope>Ikarus::ScalarFlatAssembler</scope><name>GridView</name></member>
      <member refid="a01264_1af7c5c0e591d6b228efab5c9c66f61d46" prot="public" virt="non-virtual"><scope>Ikarus::ScalarFlatAssembler</scope><name>gridView</name></member>
      <member refid="a01264_1a8678490defc92df8bdb8f5269afeba44" prot="public" virt="non-virtual"><scope>Ikarus::ScalarFlatAssembler</scope><name>isConstrained</name></member>
      <member refid="a01264_1a8b47f036b83e4e712b791d9cfe910f2b" prot="public" virt="non-virtual"><scope>Ikarus::ScalarFlatAssembler</scope><name>reducedSize</name></member>
      <member refid="a01264_1a6424b3d5449da29188bb931abb8ba551" prot="public" virt="non-virtual"><scope>Ikarus::ScalarFlatAssembler</scope><name>requirement</name></member>
      <member refid="a01280_1a97ae0fb0021223b4b7f485fde58206f0" prot="protected" virt="non-virtual"><scope>Ikarus::ScalarFlatAssembler</scope><name>scal_</name></member>
      <member refid="a01268_1afbc9302eebba262e7510ed5f4c37eaa2" prot="public" virt="non-virtual"><scope>Ikarus::ScalarFlatAssembler</scope><name>scalar</name></member>
      <member refid="a01268_1a0049c0dddc7ffb131777fff41da83f5d" prot="public" virt="non-virtual"><scope>Ikarus::ScalarFlatAssembler</scope><name>scalar</name></member>
      <member refid="a01280_1a70d1c4f02e8cd3b5d78257aa1f46ffdf" prot="protected" virt="non-virtual"><scope>Ikarus::ScalarFlatAssembler</scope><name>ScalarAssembler&lt; ScalarFlatAssembler, FEC, DV, double &gt;</name></member>
      <member refid="a01268_1a495146eca3941b7f3fce4e4cfad0db5b" prot="public" virt="non-virtual"><scope>Ikarus::ScalarFlatAssembler</scope><name>ScalarAssemblerType</name></member>
      <member refid="a01268_1a16ca73d65a203ae40cc5fde52a842d55" prot="public" virt="non-virtual"><scope>Ikarus::ScalarFlatAssembler</scope><name>ScalarType</name></member>
      <member refid="a01264_1ae3fed93b367a8d5eb4e369132a7cc355" prot="public" virt="non-virtual"><scope>Ikarus::ScalarFlatAssembler</scope><name>size</name></member>
      <member refid="a01264_1a36364ae9cda497b90ea2c952b9eaaa53" prot="public" virt="non-virtual"><scope>Ikarus::ScalarFlatAssembler</scope><name>SizeType</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
