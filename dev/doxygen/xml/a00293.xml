<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="a00293" kind="file" language="C++">
    <compoundname>physicshelper.hh</compoundname>
    <includes local="no">dune/common/float_cmp.hh</includes>
    <includes local="no">Eigen/Core</includes>
    <includedby refid="a02858" local="no">interface.hh</includedby>
    <includedby refid="a00290" local="no">kirchhoffloveshell.hh</includedby>
    <includedby refid="a00284" local="no">linearelastic.hh</includedby>
    <includedby refid="a00239" local="no">nonlinearelastic.hh</includedby>
    <incdepgraph>
      <node id="1">
        <label>physicshelper.hh</label>
        <link refid="a00293"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>Eigen/Core</label>
      </node>
      <node id="2">
        <label>dune/common/float_cmp.hh</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="14">
        <label>kirchhoffloveshell.hh</label>
        <link refid="a00290"/>
      </node>
      <node id="5">
        <label>linearelastic.hh</label>
        <link refid="a00284"/>
      </node>
      <node id="4">
        <label>materials.hh</label>
        <link refid="a02861"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>interface.hh</label>
        <link refid="a02858"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>linearelasticity.hh</label>
        <link refid="a00257"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>neohooke.hh</label>
        <link refid="a00251"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>svk.hh</label>
        <link refid="a00260"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>vanishingstrain.hh</label>
        <link refid="a00254"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>vanishingstress.hh</label>
        <link refid="a00245"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>nonlinearelastic.hh</label>
        <link refid="a00239"/>
      </node>
      <node id="1">
        <label>physicshelper.hh</label>
        <link refid="a00293"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>resultevaluators.hh</label>
        <link refid="a00326"/>
      </node>
      <node id="6">
        <label>material.hh</label>
        <link refid="a00218"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>_ikarus.cc</label>
        <link refid="a00347"/>
      </node>
      <node id="7">
        <label>materials.hh</label>
        <link refid="a02864"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="a01564" prot="public">Ikarus::YoungsModulusAndPoissonsRatio</innerclass>
    <innerclass refid="a01568" prot="public">Ikarus::YoungsModulusAndShearModulus</innerclass>
    <innerclass refid="a01572" prot="public">Ikarus::YoungsModulusAndBulkModulus</innerclass>
    <innerclass refid="a01576" prot="public">Ikarus::YoungsModulusAndLamesFirstParameter</innerclass>
    <innerclass refid="a01580" prot="public">Ikarus::BulkModulusAndLamesFirstParameter</innerclass>
    <innerclass refid="a01584" prot="public">Ikarus::LamesFirstParameterAndShearModulus</innerclass>
    <innerclass refid="a01588" prot="public">Ikarus::ConvertLameConstants</innerclass>
    <innernamespace refid="a00384">Ikarus</innernamespace>
    <briefdescription>
<para>Material property functions and conversion utilities. </para>
    </briefdescription>
    <detaileddescription>
<para>This file contains material property functions and conversion utilities related to linear elasticity. </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>SPDX-FileCopyrightText:<sp/>2021-2025<sp/>The<sp/>Ikarus<sp/>Developers<sp/>mueller@ibb.uni-stuttgart.de</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>SPDX-License-Identifier:<sp/>LGPL-3.0-or-later</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;dune/common/float_cmp.hh&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;Eigen/Core&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="a00384" kindref="compound">Ikarus</ref><sp/>{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="18" refid="a01564" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="a01564" kindref="compound">YoungsModulusAndPoissonsRatio</ref></highlight></codeline>
<codeline lineno="19"><highlight class="normal">{</highlight></codeline>
<codeline lineno="20" refid="a01564_1a6c00be8aacc18c845b00748b1e56c83c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="a01564_1a6c00be8aacc18c845b00748b1e56c83c" kindref="member">emodul</ref>;</highlight></codeline>
<codeline lineno="21" refid="a01564_1acb99903e7b1b13967a0757d284e014ed" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="a01564_1acb99903e7b1b13967a0757d284e014ed" kindref="member">nu</ref>;</highlight></codeline>
<codeline lineno="22"><highlight class="normal">};</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="a01568" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="a01568" kindref="compound">YoungsModulusAndShearModulus</ref></highlight></codeline>
<codeline lineno="26"><highlight class="normal">{</highlight></codeline>
<codeline lineno="27" refid="a01568_1ab9d965c2a2c0409682aaea9ca45be83b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="a01568_1ab9d965c2a2c0409682aaea9ca45be83b" kindref="member">emodul</ref>;</highlight></codeline>
<codeline lineno="28" refid="a01568_1a12468705489862b9e7470f197b499d0f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="a01568_1a12468705489862b9e7470f197b499d0f" kindref="member">mu</ref>;</highlight></codeline>
<codeline lineno="29"><highlight class="normal">};</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="32" refid="a01572" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="a01572" kindref="compound">YoungsModulusAndBulkModulus</ref></highlight></codeline>
<codeline lineno="33"><highlight class="normal">{</highlight></codeline>
<codeline lineno="34" refid="a01572_1a218a7076cb5434dd30811ffe50b39964" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="a01572_1a218a7076cb5434dd30811ffe50b39964" kindref="member">emodul</ref>;</highlight></codeline>
<codeline lineno="35" refid="a01572_1a996ac473697809e0e44551037cf6d4f0" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="a01572_1a996ac473697809e0e44551037cf6d4f0" kindref="member">K</ref>;</highlight></codeline>
<codeline lineno="36"><highlight class="normal">};</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="39" refid="a01576" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="a01576" kindref="compound">YoungsModulusAndLamesFirstParameter</ref></highlight></codeline>
<codeline lineno="40"><highlight class="normal">{</highlight></codeline>
<codeline lineno="41" refid="a01576_1ac0163a851cf3f135906c79a95cca835f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="a01576_1ac0163a851cf3f135906c79a95cca835f" kindref="member">emodul</ref>;</highlight></codeline>
<codeline lineno="42" refid="a01576_1ab38e15b12e0e703652627c73b8639ee8" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="a01576_1ab38e15b12e0e703652627c73b8639ee8" kindref="member">lambda</ref>;</highlight></codeline>
<codeline lineno="43"><highlight class="normal">};</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="46" refid="a01580" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="a01580" kindref="compound">BulkModulusAndLamesFirstParameter</ref></highlight></codeline>
<codeline lineno="47"><highlight class="normal">{</highlight></codeline>
<codeline lineno="48" refid="a01580_1a4f5868738c5673adf557e914123d0c8e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="a01580_1a4f5868738c5673adf557e914123d0c8e" kindref="member">K</ref>;</highlight></codeline>
<codeline lineno="49" refid="a01580_1a82f624b8171315c48c0bb5d39ef2f5d8" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="a01580_1a82f624b8171315c48c0bb5d39ef2f5d8" kindref="member">lambda</ref>;</highlight></codeline>
<codeline lineno="50"><highlight class="normal">};</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="53" refid="a01584" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="a01584" kindref="compound">LamesFirstParameterAndShearModulus</ref></highlight></codeline>
<codeline lineno="54"><highlight class="normal">{</highlight></codeline>
<codeline lineno="55" refid="a01584_1a0157695e9fc8b735e86f828cc35b64fc" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="a01584_1a0157695e9fc8b735e86f828cc35b64fc" kindref="member">lambda</ref>;</highlight></codeline>
<codeline lineno="56" refid="a01584_1a3558ad06d2a831f0d412d76956d516f8" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="a01584_1a3558ad06d2a831f0d412d76956d516f8" kindref="member">mu</ref>;</highlight></codeline>
<codeline lineno="57"><highlight class="normal">};</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MP&gt;</highlight></codeline>
<codeline lineno="65" refid="a01943" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">concept<sp/></highlight><highlight class="normal"><ref refid="a01943" kindref="compound">MPTuple</ref><sp/>=</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>std::is_same_v&lt;MP,<sp/>YoungsModulusAndPoissonsRatio&gt;<sp/>or<sp/>std::is_same_v&lt;MP,<sp/>YoungsModulusAndBulkModulus&gt;<sp/>or</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>std::is_same_v&lt;MP,<sp/>YoungsModulusAndLamesFirstParameter&gt;<sp/>or<sp/>std::is_same_v&lt;MP,<sp/>BulkModulusAndLamesFirstParameter&gt;<sp/>or</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>std::is_same_v&lt;MP,<sp/>LamesFirstParameterAndShearModulus&gt;<sp/>or<sp/>std::is_same_v&lt;MP,<sp/>YoungsModulusAndShearModulus&gt;;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ValuePair&gt;</highlight></codeline>
<codeline lineno="76" refid="a01588" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="a01588" kindref="compound">ConvertLameConstants</ref></highlight></codeline>
<codeline lineno="77"><highlight class="normal">{</highlight></codeline>
<codeline lineno="78" refid="a01588_1aa7f98433b434cc9b4a4491448304bbb9" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="a01588_1aa7f98433b434cc9b4a4491448304bbb9" kindref="member">toLamesFirstParameter</ref>()</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">requires</highlight><highlight class="normal">(!std::is_same_v&lt;ValuePair,<sp/>YoungsModulusAndLamesFirstParameter&gt;<sp/>and</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!std::is_same_v&lt;ValuePair,<sp/>BulkModulusAndLamesFirstParameter&gt;<sp/>and</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!std::is_same_v&lt;ValuePair,<sp/>LamesFirstParameterAndShearModulus&gt;)</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>(std::is_same_v&lt;ValuePair,<sp/>YoungsModulusAndPoissonsRatio&gt;)<sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>E<sp/><sp/>=<sp/>vp_.emodul;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>nu<sp/>=<sp/>vp_.nu;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Dune::FloatCmp::eq(nu,<sp/>0.5)<sp/>?<sp/>std::numeric_limits&lt;double&gt;::infinity()</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>E<sp/>*<sp/>nu<sp/>/<sp/>((1.0<sp/>+<sp/>nu)<sp/>*<sp/>(1.0<sp/>-<sp/>2.0<sp/>*<sp/>nu));</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>(std::is_same_v&lt;ValuePair,<sp/>YoungsModulusAndShearModulus&gt;)<sp/>{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>E<sp/><sp/>=<sp/>vp_.emodul;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>mu<sp/>=<sp/>vp_.mu;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mu<sp/>*<sp/>(E<sp/>-<sp/>2.0<sp/>*<sp/>mu)<sp/>/<sp/>(3.0<sp/>*<sp/>mu<sp/>-<sp/>E);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>(std::is_same_v&lt;ValuePair,<sp/>YoungsModulusAndBulkModulus&gt;)<sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>E<sp/>=<sp/>vp_.emodul;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>K<sp/>=<sp/>vp_.K;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>3.0<sp/>*<sp/>K<sp/>*<sp/>(3.0<sp/>*<sp/>K<sp/>-<sp/>E)<sp/>/<sp/>(9.0<sp/>*<sp/>K<sp/>-<sp/>E);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>assert(</highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/></highlight><highlight class="stringliteral">&quot;Your<sp/>LameParameter<sp/>request<sp/>is<sp/>not<sp/>implemented&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100" refid="a01588_1a4ec6722470a792039687e29c3d3cf4f4" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="a01588_1a4ec6722470a792039687e29c3d3cf4f4" kindref="member">toBulkModulus</ref>()</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">requires</highlight><highlight class="normal">(!std::is_same_v&lt;ValuePair,<sp/>YoungsModulusAndBulkModulus&gt;<sp/>and</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!std::is_same_v&lt;ValuePair,<sp/>BulkModulusAndLamesFirstParameter&gt;)</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>(std::is_same_v&lt;ValuePair,<sp/>YoungsModulusAndPoissonsRatio&gt;)<sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>E<sp/><sp/>=<sp/>vp_.emodul;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>nu<sp/>=<sp/>vp_.nu;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>E<sp/>/<sp/>(3.0<sp/>*<sp/>(1.0<sp/>-<sp/>2.0<sp/>*<sp/>nu));</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>(std::is_same_v&lt;ValuePair,<sp/>YoungsModulusAndShearModulus&gt;)<sp/>{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>E<sp/><sp/>=<sp/>vp_.emodul;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>mu<sp/>=<sp/>vp_.mu;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>E<sp/>*<sp/>mu<sp/>/<sp/>(3.0<sp/>*<sp/>(3.0<sp/>*<sp/>mu<sp/>-<sp/>E));</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>(std::is_same_v&lt;ValuePair,<sp/>YoungsModulusAndLamesFirstParameter&gt;)<sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>E<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>vp_.emodul;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>lambda<sp/>=<sp/>vp_.lambda;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(E<sp/>+<sp/>3.0<sp/>*<sp/>lambda<sp/>+<sp/>calcR(vp_))<sp/>/<sp/>6.0;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>(std::is_same_v&lt;ValuePair,<sp/>LamesFirstParameterAndShearModulus&gt;)<sp/>{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>lambda<sp/>=<sp/>vp_.lambda;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>mu<sp/><sp/><sp/><sp/><sp/>=<sp/>vp_.mu;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>lambda<sp/>+<sp/>2.0<sp/>*<sp/>mu<sp/>/<sp/>3.0;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>assert(</highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/></highlight><highlight class="stringliteral">&quot;Your<sp/>LameParameter<sp/>request<sp/>is<sp/>not<sp/>implemented&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124" refid="a01588_1ae3b5ba75758a910d01a576dfeabdbe6e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="a01588_1ae3b5ba75758a910d01a576dfeabdbe6e" kindref="member">toShearModulus</ref>()</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">requires</highlight><highlight class="normal">(!std::is_same_v&lt;ValuePair,<sp/>YoungsModulusAndShearModulus&gt;<sp/>and</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!std::is_same_v&lt;ValuePair,<sp/>LamesFirstParameterAndShearModulus&gt;)</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>(std::is_same_v&lt;ValuePair,<sp/>YoungsModulusAndPoissonsRatio&gt;)<sp/>{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>E<sp/><sp/>=<sp/>vp_.emodul;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>nu<sp/>=<sp/>vp_.nu;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>E<sp/>/<sp/>(2.0<sp/>*<sp/>(1.0<sp/>+<sp/>nu));</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>(std::is_same_v&lt;ValuePair,<sp/>YoungsModulusAndBulkModulus&gt;)<sp/>{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>E<sp/>=<sp/>vp_.emodul;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>K<sp/>=<sp/>vp_.K;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>3.0<sp/>*<sp/>K<sp/>*<sp/>E<sp/>/<sp/>(9.0<sp/>*<sp/>K<sp/>-<sp/>E);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>(std::is_same_v&lt;ValuePair,<sp/>YoungsModulusAndLamesFirstParameter&gt;)<sp/>{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>E<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>vp_.emodul;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>lambda<sp/>=<sp/>vp_.lambda;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(E<sp/>-<sp/>3.0<sp/>*<sp/>lambda<sp/>+<sp/>calcR(vp_))<sp/>/<sp/>4.0;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>(std::is_same_v&lt;ValuePair,<sp/>BulkModulusAndLamesFirstParameter&gt;)<sp/>{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>K<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>vp_.K;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>lambda<sp/>=<sp/>vp_.lambda;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>3.0<sp/>*<sp/>(K<sp/>-<sp/>lambda)<sp/>/<sp/>2.0;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>assert(</highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/></highlight><highlight class="stringliteral">&quot;Your<sp/>LameParameter<sp/>request<sp/>is<sp/>not<sp/>implemented&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148" refid="a01588_1abf0e01900bfaeacf08cc9af500f42c05" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="a01588_1abf0e01900bfaeacf08cc9af500f42c05" kindref="member">toPWaveModulus</ref>()<sp/>{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>(std::is_same_v&lt;ValuePair,<sp/>YoungsModulusAndPoissonsRatio&gt;)<sp/>{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>E<sp/><sp/>=<sp/>vp_.emodul;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>nu<sp/>=<sp/>vp_.nu;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>E<sp/>*<sp/>(1.0<sp/>-<sp/>nu)<sp/>/<sp/>((1.0<sp/>+<sp/>nu)<sp/>*<sp/>(1.0<sp/>-<sp/>2.0<sp/>*<sp/>nu));</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>(std::is_same_v&lt;ValuePair,<sp/>YoungsModulusAndShearModulus&gt;)<sp/>{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>E<sp/><sp/>=<sp/>vp_.emodul;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>mu<sp/>=<sp/>vp_.mu;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mu<sp/>*<sp/>(4.0<sp/>*<sp/>mu<sp/>-<sp/>E)<sp/>/<sp/>(3.0<sp/>*<sp/>mu<sp/>-<sp/>E);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>(std::is_same_v&lt;ValuePair,<sp/>YoungsModulusAndBulkModulus&gt;)<sp/>{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>E<sp/>=<sp/>vp_.emodul;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>K<sp/>=<sp/>vp_.K;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>3.0<sp/>*<sp/>K<sp/>*<sp/>(3.0<sp/>*<sp/>K<sp/>+<sp/>E)<sp/>/<sp/>(9.0<sp/>*<sp/>K<sp/>-<sp/>E);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>(std::is_same_v&lt;ValuePair,<sp/>YoungsModulusAndLamesFirstParameter&gt;)<sp/>{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>E<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>vp_.emodul;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>lambda<sp/>=<sp/>vp_.lambda;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(E<sp/>-<sp/>lambda<sp/>+<sp/>calcR(vp_))<sp/>/<sp/>2.0;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>(std::is_same_v&lt;ValuePair,<sp/>BulkModulusAndLamesFirstParameter&gt;)<sp/>{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>K<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>vp_.K;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>lambda<sp/>=<sp/>vp_.lambda;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>3.0<sp/>*<sp/>K<sp/>-<sp/>2.0<sp/>*<sp/>lambda;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>(std::is_same_v&lt;ValuePair,<sp/>LamesFirstParameterAndShearModulus&gt;)<sp/>{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>lambda<sp/>=<sp/>vp_.lambda;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>mu<sp/><sp/><sp/><sp/><sp/>=<sp/>vp_.mu;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>lambda<sp/>+<sp/>2.0<sp/>*<sp/>mu;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>assert(</highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/></highlight><highlight class="stringliteral">&quot;Your<sp/>LameParameter<sp/>request<sp/>is<sp/>not<sp/>implemented&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177" refid="a01588_1a7193fdef2358be914614114c45345112" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="a01588_1a7193fdef2358be914614114c45345112" kindref="member">toPoissonsRatio</ref>()</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">requires</highlight><highlight class="normal">(!std::is_same_v&lt;ValuePair,<sp/>YoungsModulusAndPoissonsRatio&gt;)</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>(std::is_same_v&lt;ValuePair,<sp/>YoungsModulusAndShearModulus&gt;)<sp/>{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>E<sp/><sp/>=<sp/>vp_.emodul;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>mu<sp/>=<sp/>vp_.mu;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>E<sp/>/<sp/>(2.0<sp/>*<sp/>mu)<sp/>-<sp/>1.0;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>(std::is_same_v&lt;ValuePair,<sp/>YoungsModulusAndBulkModulus&gt;)<sp/>{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>E<sp/>=<sp/>vp_.emodul;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>K<sp/>=<sp/>vp_.K;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(3.0<sp/>*<sp/>K<sp/>-<sp/>E)<sp/>/<sp/>(6.0<sp/>*<sp/>K);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>(std::is_same_v&lt;ValuePair,<sp/>YoungsModulusAndLamesFirstParameter&gt;)<sp/>{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>E<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>vp_.emodul;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>lambda<sp/>=<sp/>vp_.lambda;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>2.0<sp/>*<sp/>lambda<sp/>/<sp/>(E<sp/>+<sp/>lambda<sp/>+<sp/>calcR(vp_));</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>(std::is_same_v&lt;ValuePair,<sp/>BulkModulusAndLamesFirstParameter&gt;)<sp/>{</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>K<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>vp_.K;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>lambda<sp/>=<sp/>vp_.lambda;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>lambda<sp/>/<sp/>(3<sp/>*<sp/>K<sp/>-<sp/>lambda);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>(std::is_same_v&lt;ValuePair,<sp/>LamesFirstParameterAndShearModulus&gt;)<sp/>{</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>lambda<sp/>=<sp/>vp_.lambda;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>mu<sp/><sp/><sp/><sp/><sp/>=<sp/>vp_.mu;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>lambda<sp/>/<sp/>(2.0<sp/>*<sp/>(lambda<sp/>+<sp/>mu));</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>assert(</highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/></highlight><highlight class="stringliteral">&quot;Your<sp/>LameParameter<sp/>request<sp/>is<sp/>not<sp/>implemented&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204" refid="a01588_1a28839b750c79d1c905e8606c4ba8330b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="a01588_1a28839b750c79d1c905e8606c4ba8330b" kindref="member">toYoungsModulus</ref>()</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">requires</highlight><highlight class="normal">(!std::is_same_v&lt;ValuePair,<sp/>YoungsModulusAndPoissonsRatio&gt;<sp/>and</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!std::is_same_v&lt;ValuePair,<sp/>YoungsModulusAndShearModulus&gt;<sp/>and</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!std::is_same_v&lt;ValuePair,<sp/>YoungsModulusAndBulkModulus&gt;<sp/>and</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!std::is_same_v&lt;ValuePair,<sp/>YoungsModulusAndLamesFirstParameter&gt;)</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>(std::is_same_v&lt;ValuePair,<sp/>BulkModulusAndLamesFirstParameter&gt;)<sp/>{</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>9.0<sp/>*<sp/>vp_.K<sp/>*<sp/>(vp_.K<sp/>-<sp/>vp_.lambda)<sp/>/<sp/>(3.0<sp/>*<sp/>vp_.K<sp/>-<sp/>vp_.lambda);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>(std::is_same_v&lt;ValuePair,<sp/>LamesFirstParameterAndShearModulus&gt;)<sp/>{</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>lambda<sp/>=<sp/>vp_.lambda;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>mu<sp/><sp/><sp/><sp/><sp/>=<sp/>vp_.mu;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mu<sp/>*<sp/>(3.0<sp/>*<sp/>lambda<sp/>+<sp/>2.0<sp/>*<sp/>mu)<sp/>/<sp/>(lambda<sp/>+<sp/>mu);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>assert(</highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/></highlight><highlight class="stringliteral">&quot;Your<sp/>LameParameter<sp/>request<sp/>is<sp/>not<sp/>implemented&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/><ref refid="a01588" kindref="compound">ConvertLameConstants&lt;YoungsModulusAndPoissonsRatio&gt;</ref><sp/><ref refid="a01588_1a9bba84cf58912269ed839cb4d6dd7996" kindref="member">convertLameConstants</ref>(</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="a01564" kindref="compound">YoungsModulusAndPoissonsRatio</ref>&amp;<sp/>valuePair);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/><ref refid="a01588" kindref="compound">ConvertLameConstants&lt;YoungsModulusAndShearModulus&gt;</ref><sp/><ref refid="a01588_1a9bba84cf58912269ed839cb4d6dd7996" kindref="member">convertLameConstants</ref>(</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="a01568" kindref="compound">YoungsModulusAndShearModulus</ref>&amp;<sp/>valuePair);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/><ref refid="a01588" kindref="compound">ConvertLameConstants&lt;YoungsModulusAndBulkModulus&gt;</ref><sp/><ref refid="a01588_1a9bba84cf58912269ed839cb4d6dd7996" kindref="member">convertLameConstants</ref>(</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="a01572" kindref="compound">YoungsModulusAndBulkModulus</ref>&amp;<sp/>valuePair);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/><ref refid="a01588" kindref="compound">ConvertLameConstants&lt;LamesFirstParameterAndShearModulus&gt;</ref><sp/><ref refid="a01588_1a9bba84cf58912269ed839cb4d6dd7996" kindref="member">convertLameConstants</ref>(</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="a01584" kindref="compound">LamesFirstParameterAndShearModulus</ref>&amp;<sp/>valuePair);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/><ref refid="a01588" kindref="compound">ConvertLameConstants&lt;BulkModulusAndLamesFirstParameter&gt;</ref><sp/><ref refid="a01588_1a9bba84cf58912269ed839cb4d6dd7996" kindref="member">convertLameConstants</ref>(</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="a01580" kindref="compound">BulkModulusAndLamesFirstParameter</ref>&amp;<sp/>valuePair);</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/><ref refid="a01588" kindref="compound">ConvertLameConstants&lt;YoungsModulusAndLamesFirstParameter&gt;</ref><sp/><ref refid="a01588_1a9bba84cf58912269ed839cb4d6dd7996" kindref="member">convertLameConstants</ref>(</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="a01576" kindref="compound">YoungsModulusAndLamesFirstParameter</ref>&amp;<sp/>valuePair);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><ref refid="a01588" kindref="compound">ConvertLameConstants</ref>(ValuePair&amp;&amp;<sp/>valuePair)</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>vp_(valuePair)<sp/>{}</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/>ConvertLameConstants(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ValuePair&amp;<sp/>valuePair)</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>vp_(valuePair)<sp/>{}</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>calcR(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>YoungsModulusAndLamesFirstParameter&amp;<sp/>valuePair)<sp/>{</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>E<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>valuePair.emodul;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>lambda<sp/>=<sp/>valuePair.lambda;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::sqrt(E<sp/>*<sp/>E<sp/>+<sp/>9<sp/>*<sp/>lambda<sp/>*<sp/>lambda<sp/>+<sp/>2<sp/>*<sp/>E<sp/>*<sp/>lambda);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/>ValuePair<sp/>vp_;</highlight></codeline>
<codeline lineno="249"><highlight class="normal">};</highlight></codeline>
<codeline lineno="250" refid="a01588_1a9bba84cf58912269ed839cb4d6dd7996" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="a01588" kindref="compound">ConvertLameConstants&lt;YoungsModulusAndPoissonsRatio&gt;</ref><sp/><ref refid="a00384_1a5e27551f9edaebc557108aa164899b54" kindref="member">convertLameConstants</ref>(</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="a01564" kindref="compound">YoungsModulusAndPoissonsRatio</ref>&amp;<sp/>valuePair)<sp/>{</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{valuePair};</highlight></codeline>
<codeline lineno="253"><highlight class="normal">}</highlight></codeline>
<codeline lineno="254" refid="a01588_1a910b0eb5805503f2629a58ac565d5493" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="a01588" kindref="compound">ConvertLameConstants&lt;YoungsModulusAndShearModulus&gt;</ref><sp/><ref refid="a00384_1a5e27551f9edaebc557108aa164899b54" kindref="member">convertLameConstants</ref>(</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="a01568" kindref="compound">YoungsModulusAndShearModulus</ref>&amp;<sp/>valuePair)<sp/>{</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{valuePair};</highlight></codeline>
<codeline lineno="257"><highlight class="normal">}</highlight></codeline>
<codeline lineno="258" refid="a01588_1a97a57e9e0e18185b0f0c4237649e00a7" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="a01588" kindref="compound">ConvertLameConstants&lt;YoungsModulusAndBulkModulus&gt;</ref><sp/><ref refid="a00384_1a5e27551f9edaebc557108aa164899b54" kindref="member">convertLameConstants</ref>(</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="a01572" kindref="compound">YoungsModulusAndBulkModulus</ref>&amp;<sp/>valuePair)<sp/>{</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{valuePair};</highlight></codeline>
<codeline lineno="261"><highlight class="normal">}</highlight></codeline>
<codeline lineno="262" refid="a01588_1ab07833cf0c324d05f0b984cba3ccd946" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="a01588" kindref="compound">ConvertLameConstants&lt;LamesFirstParameterAndShearModulus&gt;</ref><sp/><ref refid="a00384_1a5e27551f9edaebc557108aa164899b54" kindref="member">convertLameConstants</ref>(</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="a01584" kindref="compound">LamesFirstParameterAndShearModulus</ref>&amp;<sp/>valuePair)<sp/>{</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{valuePair};</highlight></codeline>
<codeline lineno="265"><highlight class="normal">}</highlight></codeline>
<codeline lineno="266" refid="a01588_1ac2255a654c3a7d80c01113b68dc712a6" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="a01588" kindref="compound">ConvertLameConstants&lt;BulkModulusAndLamesFirstParameter&gt;</ref><sp/><ref refid="a00384_1a5e27551f9edaebc557108aa164899b54" kindref="member">convertLameConstants</ref>(</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="a01580" kindref="compound">BulkModulusAndLamesFirstParameter</ref>&amp;<sp/>valuePair)<sp/>{</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{valuePair};</highlight></codeline>
<codeline lineno="269"><highlight class="normal">}</highlight></codeline>
<codeline lineno="270" refid="a01588_1a9b8e52ebabd81a7dab41ac4ac7b63005" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="a01588" kindref="compound">ConvertLameConstants&lt;YoungsModulusAndLamesFirstParameter&gt;</ref><sp/><ref refid="a00384_1a5e27551f9edaebc557108aa164899b54" kindref="member">convertLameConstants</ref>(</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="a01576" kindref="compound">YoungsModulusAndLamesFirstParameter</ref>&amp;<sp/>valuePair)<sp/>{</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{valuePair};</highlight></codeline>
<codeline lineno="273"><highlight class="normal">}</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="281" refid="a00384_1a32940ef922d090491ffcaa9bf2a44aef" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="a00384_1a32940ef922d090491ffcaa9bf2a44aef" kindref="member">toLamesFirstParameterAndShearModulus</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="a01564" kindref="compound">YoungsModulusAndPoissonsRatio</ref>&amp;<sp/>matParameter)<sp/>{</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>lambda<sp/>=<sp/><ref refid="a00384_1a5e27551f9edaebc557108aa164899b54" kindref="member">convertLameConstants</ref>(matParameter).toLamesFirstParameter();</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>mu<sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="a00384_1a5e27551f9edaebc557108aa164899b54" kindref="member">convertLameConstants</ref>(matParameter).toShearModulus();</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="a01584" kindref="compound">LamesFirstParameterAndShearModulus</ref>{.<ref refid="a01584_1a0157695e9fc8b735e86f828cc35b64fc" kindref="member">lambda</ref><sp/>=<sp/>lambda,<sp/>.mu<sp/>=<sp/>mu};</highlight></codeline>
<codeline lineno="286"><highlight class="normal">}</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="294" refid="a00384_1a4161393d679e5ec44806e6e911e26dee" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="a00384_1a4161393d679e5ec44806e6e911e26dee" kindref="member">toYoungsModulusAndPoissonsRatio</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="a01584" kindref="compound">LamesFirstParameterAndShearModulus</ref>&amp;<sp/>matParameter)<sp/>{</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>emod<sp/>=<sp/><ref refid="a00384_1a5e27551f9edaebc557108aa164899b54" kindref="member">convertLameConstants</ref>(matParameter).toYoungsModulus();</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>nu<sp/><sp/><sp/>=<sp/><ref refid="a00384_1a5e27551f9edaebc557108aa164899b54" kindref="member">convertLameConstants</ref>(matParameter).toPoissonsRatio();</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="a01564" kindref="compound">YoungsModulusAndPoissonsRatio</ref>{.<ref refid="a01564_1a6c00be8aacc18c845b00748b1e56c83c" kindref="member">emodul</ref><sp/>=<sp/>emod,<sp/>.nu<sp/>=<sp/>nu};</highlight></codeline>
<codeline lineno="299"><highlight class="normal">}</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>Ikarus</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/physicshelper.hh"/>
  </compounddef>
</doxygen>
