<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="a01391" kind="struct" language="C++" prot="public">
    <compoundname>Ikarus::FERequirementsFactory</compoundname>
    <includes refid="a00323" local="no">ikarus/finiteelements/ferequirements.hh</includes>
    <templateparamlist>
      <param>
        <type><ref refid="a00383_1gaea763c94a1cecbeefc4f8661debcc5a3" kindref="member">FESolutions</ref></type>
        <declname>sol</declname>
        <defname>sol</defname>
      </param>
      <param>
        <type><ref refid="a00383_1ga0c1577fd05efee8475b0f7fef795bbbe" kindref="member">FEParameter</ref></type>
        <declname>para</declname>
        <defname>para</defname>
      </param>
      <param>
        <type>bool</type>
        <declname>wrapWithRef</declname>
        <defname>wrapWithRef</defname>
        <defval>false</defval>
      </param>
      <param>
        <type>typename SV</type>
        <defval>Eigen::VectorXd</defval>
      </param>
      <param>
        <type>typename PM</type>
        <defval>double</defval>
      </param>
    </templateparamlist>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="a01391_1a8987e7270f316098b5686143c4c59a6e" prot="private" static="no">
        <type>std::conditional_t&lt; wrapWithRef and <ref refid="a02054" kindref="compound">Ikarus::Concepts::EigenMatrix</ref>&lt; SV &gt;, Eigen::Ref&lt; SV &gt;, SV &gt;</type>
        <definition>using Ikarus::FERequirementsFactory&lt; sol, para, wrapWithRef, SV, PM &gt;::typeEigen =  std::conditional_t&lt;wrapWithRef and Ikarus::Concepts::EigenMatrix&lt;SV&gt;, Eigen::Ref&lt;SV&gt;, SV&gt;</definition>
        <argsstring></argsstring>
        <name>typeEigen</name>
        <qualifiedname>Ikarus::FERequirementsFactory::typeEigen</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/ferequirements.hh" line="356" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/ferequirements.hh" bodystart="356" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="a01391_1aaa1726433d7a8f409b5d8b54ce5f7e45" prot="public" static="no">
        <type><ref refid="a01387" kindref="compound">FERequirements</ref>&lt; sol, para, typeEigen, PM &gt;</type>
        <definition>using Ikarus::FERequirementsFactory&lt; sol, para, wrapWithRef, SV, PM &gt;::type =  FERequirements&lt;sol, para, typeEigen, PM&gt;</definition>
        <argsstring></argsstring>
        <name>type</name>
        <qualifiedname>Ikarus::FERequirementsFactory::type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/ferequirements.hh" line="359" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/ferequirements.hh" bodystart="359" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/ferequirements.hh" line="353" column="1" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/ferequirements.hh" bodystart="354" bodyend="360"/>
    <listofallmembers>
      <member refid="a01391_1aaa1726433d7a8f409b5d8b54ce5f7e45" prot="public" virt="non-virtual"><scope>Ikarus::FERequirementsFactory</scope><name>type</name></member>
      <member refid="a01391_1a8987e7270f316098b5686143c4c59a6e" prot="private" virt="non-virtual"><scope>Ikarus::FERequirementsFactory</scope><name>typeEigen</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
