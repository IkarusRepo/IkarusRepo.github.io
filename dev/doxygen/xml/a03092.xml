<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="a03092" kind="file" language="C++">
    <compoundname>io/vtkwriter.hh</compoundname>
    <includes refid="a00356" local="yes">vtkdatatag.hh</includes>
    <includes local="no">array</includes>
    <includes local="no">tuple</includes>
    <includes local="yes">dune/functions/functionspacebases/powerbasis.hh</includes>
    <includes local="yes">dune/functions/functionspacebases/subspacebasis.hh</includes>
    <includes local="no">dune/common/fvector.hh</includes>
    <includes local="no">dune/functions/gridfunctions/discreteglobalbasisfunction.hh</includes>
    <includes local="no">dune/grid/yaspgrid.hh</includes>
    <includes local="no">dune/vtk/vtkwriter.hh</includes>
    <includes local="no">dune/vtk/writers/unstructuredgridwriter.hh</includes>
    <includes refid="a00350" local="no">ikarus/io/resultfunction.hh</includes>
    <includes refid="a03101" local="no">ikarus/utils/concepts.hh</includes>
    <includedby refid="a03095" local="no">vtkwriter.hh</includedby>
    <incdepgraph>
      <node id="37">
        <label>ikarus/assembler/dirichletbcenforcement.hh</label>
        <link refid="a00347"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>ikarus/finiteelements/ferequirements.hh</label>
        <link refid="a00197"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>ikarus/finiteelements/feresulttypes.hh</label>
        <link refid="a00302"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>ikarus/finiteelements/mechanics/materials/tags.hh</label>
        <link refid="a00233"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>ikarus/io/resultfunction.hh</label>
        <link refid="a00350"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>vtkdatatag.hh</label>
        <link refid="a00356"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>vtkwriter.hh</label>
        <link refid="a03092"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>ikarus/utils/concepts.hh</label>
        <link refid="a03101"/>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>ikarus/utils/makeenum.hh</label>
        <link refid="a00011"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="42">
        <label>ikarus/utils/math.hh</label>
        <link refid="a00044"/>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>ikarus/utils/tensorutils.hh</label>
        <link refid="a00032"/>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>ikarus/utils/traits.hh</label>
        <link refid="a00068"/>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>Eigen/Core</label>
      </node>
      <node id="34">
        <label>Eigen/Dense</label>
      </node>
      <node id="35">
        <label>Eigen/Sparse</label>
      </node>
      <node id="5">
        <label>array</label>
      </node>
      <node id="36">
        <label>autodiff/forward/dual/dual.hpp</label>
      </node>
      <node id="30">
        <label>concepts</label>
      </node>
      <node id="4">
        <label>dune/common/exceptions.hh</label>
      </node>
      <node id="9">
        <label>dune/common/fvector.hh</label>
      </node>
      <node id="41">
        <label>dune/common/hybridutilities.hh</label>
      </node>
      <node id="28">
        <label>dune/common/promotiontraits.hh</label>
      </node>
      <node id="32">
        <label>dune/functions/functionspacebases/basistags.hh</label>
      </node>
      <node id="33">
        <label>dune/functions/functionspacebases/lagrangebasis.hh</label>
      </node>
      <node id="7">
        <label>dune/functions/functionspacebases/powerbasis.hh</label>
      </node>
      <node id="8">
        <label>dune/functions/functionspacebases/subspacebasis.hh</label>
      </node>
      <node id="10">
        <label>dune/functions/gridfunctions/discreteglobalbasisfunction.hh</label>
      </node>
      <node id="11">
        <label>dune/grid/yaspgrid.hh</label>
      </node>
      <node id="16">
        <label>dune/vtk/function.hh</label>
      </node>
      <node id="12">
        <label>dune/vtk/vtkwriter.hh</label>
      </node>
      <node id="13">
        <label>dune/vtk/writers/unstructuredgridwriter.hh</label>
      </node>
      <node id="40">
        <label>functional</label>
      </node>
      <node id="18">
        <label>iosfwd</label>
      </node>
      <node id="19">
        <label>map</label>
      </node>
      <node id="25">
        <label>numeric</label>
      </node>
      <node id="26">
        <label>ranges</label>
      </node>
      <node id="20">
        <label>set</label>
      </node>
      <node id="6">
        <label>tuple</label>
      </node>
      <node id="15">
        <label>type_traits</label>
      </node>
      <node id="27">
        <label>unsupported/Eigen/CXX11/Tensor</label>
      </node>
      <node id="31">
        <label>utility</label>
      </node>
      <node id="21">
        <label>vector</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1">
        <label>vtkwriter.hh</label>
        <link refid="a03092"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>vtkwriter.hh</label>
        <link refid="a03095"/>
      </node>
    </invincdepgraph>
    <innerclass refid="a01762" prot="public">Ikarus::Vtk::Writer</innerclass>
    <innerclass refid="a01766" prot="public">Ikarus::Vtk::IsStructured</innerclass>
    <innerclass refid="a01770" prot="public">Ikarus::Vtk::IsStructured&lt; Dune::YaspGrid&lt; dim, Coordinates &gt; &gt;</innerclass>
    <innerclass refid="a01774" prot="public">Ikarus::Vtk::DefaultVTKWriterManager</innerclass>
    <innernamespace refid="a00411">Ikarus</innernamespace>
    <innernamespace refid="a00425">Ikarus::Vtk</innernamespace>
    <briefdescription>
<para><ref refid="a00411" kindref="compound">Ikarus</ref> VTK Writer for finite element results. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>SPDX-FileCopyrightText:<sp/>2021-2025<sp/>The<sp/>Ikarus<sp/>Developers<sp/>mueller@ibb.uni-stuttgart.de</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>SPDX-License-Identifier:<sp/>LGPL-3.0-or-later</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="a00356" kindref="compound">vtkdatatag.hh</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;array&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;tuple&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;dune/functions/functionspacebases/powerbasis.hh&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;dune/functions/functionspacebases/subspacebasis.hh&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;dune/common/fvector.hh&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;dune/functions/gridfunctions/discreteglobalbasisfunction.hh&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;dune/grid/yaspgrid.hh&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;dune/vtk/vtkwriter.hh&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;dune/vtk/writers/unstructuredgridwriter.hh&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="a00350" kindref="compound">ikarus/io/resultfunction.hh</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="a03101" kindref="compound">ikarus/utils/concepts.hh</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="a00425" kindref="compound">Ikarus::Vtk</ref><sp/>{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">Impl<sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Container&gt;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>sizeOfContainer<sp/>=<sp/>[]()<sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">requires</highlight><highlight class="normal"><sp/>{<sp/>std::tuple_size&lt;Container&gt;::value;<sp/>})</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::tuple_size&lt;Container&gt;::value;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1ul;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/>}();</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>PreBasis&gt;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">ResultContainerPre</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">type<sp/>=<sp/>double;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Basis&gt;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">ResultContainer</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">type<sp/>=<sp/>ResultContainerPre&lt;typename<sp/>Basis::PreBasis&gt;::type;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>RB,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>PP&gt;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">ResultContainer&lt;<ref refid="a00434" kindref="compound">Dune</ref>::Functions::SubspaceBasis&lt;RB,<sp/>PP&gt;&gt;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">type<sp/>=<sp/>double;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Basis&gt;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">ResultContainer_t<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ResultContainer&lt;Basis&gt;::type;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>specialization<sp/>for<sp/>power<sp/>basis</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>IMS,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>SPB,<sp/>std::</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size&gt;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">ResultContainerPre&lt;<ref refid="a00434" kindref="compound">Dune</ref>::Functions::PowerPreBasis&lt;IMS,<sp/>SPB,<sp/>size&gt;&gt;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">type<sp/>=<sp/>std::array&lt;typename<sp/>ResultContainerPre&lt;SPB&gt;::type,<sp/>size&gt;;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>Impl</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>AS,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>DC,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Base&gt;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="keyword">requires</highlight><highlight class="normal">(Concepts::FlatAssembler&lt;AS&gt;<sp/>&amp;&amp;<sp/>Concepts::DataCollector&lt;DC&gt;)</highlight></codeline>
<codeline lineno="80" refid="a01762" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="a01762" kindref="compound">Writer</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>Base</highlight></codeline>
<codeline lineno="81"><highlight class="normal">{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="83" refid="a01762_1a48666f99819393e871c84b4f4bd4b816" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="a01762_1a48666f99819393e871c84b4f4bd4b816" kindref="member">Assembler</ref><sp/><sp/><sp/><sp/><sp/>=<sp/>AS;</highlight></codeline>
<codeline lineno="84" refid="a01762_1aadd66859407a6b1a5d7604e693348c00" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="a01762_1aadd66859407a6b1a5d7604e693348c00" kindref="member">GridView</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Assembler::GridView;</highlight></codeline>
<codeline lineno="85" refid="a01762_1af943a6fe7f917d909b06aaace360c129" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="a01762_1af943a6fe7f917d909b06aaace360c129" kindref="member">FERequirement</ref><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Assembler::FERequirement;</highlight></codeline>
<codeline lineno="86" refid="a01762_1aaac8aafaef3b80c862dd57fbf7b97279" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="a01762_1aaac8aafaef3b80c862dd57fbf7b97279" kindref="member">FEContainer</ref><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Assembler::FEContainer;</highlight></codeline>
<codeline lineno="87" refid="a01762_1a3a3fcd008921213a40a189cf5c947a08" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="a01762_1a3a3fcd008921213a40a189cf5c947a08" kindref="member">FEType</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::remove_cvref_t&lt;FEContainer&gt;::value_type;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89" refid="a01762_1a700ee4a5f71f8985ee7e4364372c6895" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="a01762_1a700ee4a5f71f8985ee7e4364372c6895" kindref="member">DataCollector</ref><sp/>=<sp/>DC;</highlight></codeline>
<codeline lineno="90" refid="a01762_1a7e43687c38b914c1c3805c0ebefff9bd" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="a01762_1a7e43687c38b914c1c3805c0ebefff9bd" kindref="member">VTKWriter</ref><sp/><sp/><sp/><sp/><sp/>=<sp/>Base;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal">...<sp/>Args&gt;</highlight></codeline>
<codeline lineno="99" refid="a01762_1a7f632eb9736d0518bfccc57782911611" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="a01762_1a7f632eb9736d0518bfccc57782911611" kindref="member">Writer</ref>(std::shared_ptr&lt;AS&gt;<sp/>assembler,<sp/>Args...<sp/>args)</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>Base(assembler-&gt;gridView(),<sp/><ref refid="a00410" kindref="compound">std</ref>::forward&lt;Args&gt;(args)...),</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assembler_(assembler)<sp/>{}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>DC_,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">...<sp/>Args&gt;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">requires</highlight><highlight class="normal"><sp/><ref refid="a02106" kindref="compound">Concepts::DataCollector&lt;std::decay_t&lt;DC_&gt;</ref>&gt;</highlight></codeline>
<codeline lineno="112" refid="a01762_1a2bd5df12f7819102911d2ec09ce8a977" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="a01762_1a2bd5df12f7819102911d2ec09ce8a977" kindref="member">Writer</ref>(std::shared_ptr&lt;AS&gt;<sp/>assembler,<sp/>DC_&amp;&amp;<sp/>dc,<sp/>Args...<sp/>args)</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>Base(<ref refid="a00410" kindref="compound">std</ref>::forward&lt;<ref refid="a00410" kindref="compound">std</ref>::decay_t&lt;DC_&gt;&gt;(dc),<sp/><ref refid="a00410" kindref="compound">std</ref>::forward&lt;Args&gt;(args)...),</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assembler_(assembler)<sp/>{}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>RF&gt;</highlight></codeline>
<codeline lineno="124" refid="a01762_1a658290b81fbe3d75d228ea393f5a6d47" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="a01762_1a658290b81fbe3d75d228ea393f5a6d47" kindref="member">addResultFunction</ref>(RF&amp;&amp;<sp/>resultFunction,<sp/><ref refid="a00425_1af59748ac04116ae85cd64ea8675d273b" kindref="member">DataTag</ref><sp/>dataTag<sp/>=<sp/><ref refid="a00425_1af59748ac04116ae85cd64ea8675d273ba68cd52d11d0547e9fa755ed70680591b" kindref="member">DataTag::asPointData</ref>)<sp/>{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dataTag<sp/>==<sp/><ref refid="a00425_1af59748ac04116ae85cd64ea8675d273ba358ac8d081a81d2a224773e362f76546" kindref="member">DataTag::asCellData</ref><sp/>or<sp/>dataTag<sp/>==<sp/><ref refid="a00425_1af59748ac04116ae85cd64ea8675d273baaebbd52cccfb094252aee95b0cffe926" kindref="member">DataTag::asCellAndPointData</ref>)</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Base::addCellData(std::forward&lt;RF&gt;(resultFunction));</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dataTag<sp/>==<sp/><ref refid="a00425_1af59748ac04116ae85cd64ea8675d273ba68cd52d11d0547e9fa755ed70680591b" kindref="member">DataTag::asPointData</ref><sp/>or<sp/>dataTag<sp/>==<sp/><ref refid="a00425_1af59748ac04116ae85cd64ea8675d273baaebbd52cccfb094252aee95b0cffe926" kindref="member">DataTag::asCellAndPointData</ref>)</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Base::addPointData(std::forward&lt;RF&gt;(resultFunction));</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">RT,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>UserFunction<sp/>=<sp/>Ikarus::Impl::DefaultUserFunction&gt;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">requires</highlight><highlight class="normal">(<ref refid="a02101" kindref="compound">Concepts::ResultType&lt;RT&gt;</ref>)</highlight></codeline>
<codeline lineno="139" refid="a01762_1a80776ad077f50b77de658392cb8736fe" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="a01762_1a80776ad077f50b77de658392cb8736fe" kindref="member">addResult</ref>(<ref refid="a00425_1af59748ac04116ae85cd64ea8675d273b" kindref="member">DataTag</ref><sp/>dataTag<sp/>=<sp/><ref refid="a00425_1af59748ac04116ae85cd64ea8675d273ba68cd52d11d0547e9fa755ed70680591b" kindref="member">DataTag::asPointData</ref>,<sp/>UserFunction&amp;&amp;<sp/>userFunction<sp/>=<sp/>{})<sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>resFunction<sp/>=<sp/>makeResultVtkFunction&lt;RT&gt;(assembler_,<sp/>std::forward&lt;UserFunction&gt;(userFunction));</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>addResultFunction(std::move(resFunction),<sp/>dataTag);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="149" refid="a01762_1a1e3b740ff000dacda0ade44cc0646d9d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="a01762_1a1e3b740ff000dacda0ade44cc0646d9d" kindref="member">addAllResults</ref>(<ref refid="a00425_1af59748ac04116ae85cd64ea8675d273b" kindref="member">DataTag</ref><sp/>dataTag<sp/>=<sp/><ref refid="a00425_1af59748ac04116ae85cd64ea8675d273ba68cd52d11d0547e9fa755ed70680591b" kindref="member">DataTag::asPointData</ref>)<sp/>{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">ResultTuple<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FEType::SupportedResultTypes;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>Dune::Hybrid::forEach(ResultTuple(),<sp/>[&amp;]&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>RT&gt;(RT<sp/>i)<sp/>{<sp/>addResult&lt;RT::template<sp/>Rebind&gt;(dataTag);<sp/>});</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Basis,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R&gt;</highlight></codeline>
<codeline lineno="169" refid="a01762_1a40effe127a60fe7ae01bb7511a581d08" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="a01762_1a40effe127a60fe7ae01bb7511a581d08" kindref="member">addInterpolation</ref>(R&amp;&amp;<sp/>vals,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Basis&amp;<sp/><ref refid="a00440_1a0f9f04fa9d98e890cb6d4fe62ff889a4" kindref="member">basis</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>name,<sp/><ref refid="a00425_1af59748ac04116ae85cd64ea8675d273b" kindref="member">DataTag</ref><sp/>dataTag<sp/>=<sp/><ref refid="a00425_1af59748ac04116ae85cd64ea8675d273ba68cd52d11d0547e9fa755ed70680591b" kindref="member">DataTag::asPointData</ref>)<sp/>{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">Container<sp/>=<sp/>Impl::ResultContainer_t&lt;Basis&gt;;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>gridFunction<sp/>=<sp/>Dune::Functions::makeDiscreteGlobalBasisFunction&lt;Container&gt;(<ref refid="a00440_1a0f9f04fa9d98e890cb6d4fe62ff889a4" kindref="member">basis</ref>,<sp/>std::forward&lt;R&gt;(vals));</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>fieldInfo<sp/><sp/><sp/><sp/>=<sp/>Dune::Vtk::FieldInfo(name,<sp/>Impl::sizeOfContainer&lt;Container&gt;);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dataTag<sp/>==<sp/><ref refid="a00425_1af59748ac04116ae85cd64ea8675d273ba358ac8d081a81d2a224773e362f76546" kindref="member">DataTag::asCellData</ref><sp/>or<sp/>dataTag<sp/>==<sp/><ref refid="a00425_1af59748ac04116ae85cd64ea8675d273baaebbd52cccfb094252aee95b0cffe926" kindref="member">DataTag::asCellAndPointData</ref>)</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Base::addCellData(std::move(gridFunction),<sp/>fieldInfo);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dataTag<sp/>==<sp/><ref refid="a00425_1af59748ac04116ae85cd64ea8675d273ba68cd52d11d0547e9fa755ed70680591b" kindref="member">DataTag::asPointData</ref><sp/>or<sp/>dataTag<sp/>==<sp/><ref refid="a00425_1af59748ac04116ae85cd64ea8675d273baaebbd52cccfb094252aee95b0cffe926" kindref="member">DataTag::asCellAndPointData</ref>)</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Base::addPointData(std::move(gridFunction),<sp/>fieldInfo);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/>std::shared_ptr&lt;Assembler&gt;<sp/>assembler_;</highlight></codeline>
<codeline lineno="183"><highlight class="normal">};</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>G&gt;</highlight></codeline>
<codeline lineno="191" refid="a01766" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="a01766" kindref="compound">IsStructured</ref><sp/>:<sp/>std::false_type</highlight></codeline>
<codeline lineno="192"><highlight class="normal">{</highlight></codeline>
<codeline lineno="193"><highlight class="normal">};</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dim,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Coordinates&gt;</highlight></codeline>
<codeline lineno="199" refid="a01770" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="a01766" kindref="compound">IsStructured</ref>&lt;<ref refid="a00434" kindref="compound">Dune</ref>::YaspGrid&lt;dim,<sp/>Coordinates&gt;&gt;<sp/>:<sp/>std::true_type</highlight></codeline>
<codeline lineno="200"><highlight class="normal">{</highlight></codeline>
<codeline lineno="201"><highlight class="normal">};</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>GV&gt;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight><highlight class="keyword">requires</highlight><highlight class="normal"><sp/><ref refid="a02107" kindref="compound">Concepts::GridView&lt;GV&gt;</ref></highlight></codeline>
<codeline lineno="210" refid="a01774" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="a01774" kindref="compound">DefaultVTKWriterManager</ref></highlight></codeline>
<codeline lineno="211"><highlight class="normal">{</highlight></codeline>
<codeline lineno="212" refid="a01774_1aab70186996e55b41bd657d71789541c1" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="a01774_1aab70186996e55b41bd657d71789541c1" kindref="member">isStructured</ref><sp/>=<sp/><ref refid="a01766" kindref="compound">IsStructured&lt;typename GV::Grid&gt;::value</ref>;</highlight></codeline>
<codeline lineno="213" refid="a01774_1ab9e11e450e83e9c543ede585890c55d0" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="a01774_1ab9e11e450e83e9c543ede585890c55d0" kindref="member">DefaultDataCollector</ref><sp/>=</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::conditional_t&lt;isStructured,<sp/>Dune::Vtk::YaspDataCollector&lt;GV&gt;,<sp/>Dune::Vtk::ContinuousDataCollector&lt;GV&gt;&gt;;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>DC<sp/>=<sp/>DefaultDataCollector&gt;</highlight></codeline>
<codeline lineno="217" refid="a01774_1ab81f859a7f02f174a9493d28b1be52a4" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="a01774_1ab81f859a7f02f174a9493d28b1be52a4" kindref="member">DefaultVTKWriter</ref><sp/>=<sp/>std::conditional_t&lt;isStructured,<sp/>Dune::Vtk::RectilinearGridWriter&lt;typename<sp/>DC::GridView,<sp/>DC&gt;,</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Dune::Vtk::UnstructuredGridWriter&lt;typename<sp/>DC::GridView,<sp/>DC&gt;&gt;;</highlight></codeline>
<codeline lineno="219"><highlight class="normal">};</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Class<sp/>template<sp/>argument<sp/>deduction<sp/>guides<sp/>for<sp/>VTK::Writer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>AS,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">...<sp/>Args&gt;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight><highlight class="keyword">requires</highlight><highlight class="normal">(<ref refid="a02102" kindref="compound">Ikarus::Concepts::FlatAssembler&lt;AS&gt;</ref>)</highlight></codeline>
<codeline lineno="225" refid="a00425_1a6b54a4966e54b45e51358c7b7877a5b5" refkind="member"><highlight class="normal"><ref refid="a00425_1a6b54a4966e54b45e51358c7b7877a5b5" kindref="member">Writer</ref>(std::shared_ptr&lt;AS&gt;,</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Args...)<sp/>-&gt;<sp/><ref refid="a01762" kindref="compound">Writer&lt;AS, typename DefaultVTKWriterManager&lt;typename AS::GridView&gt;::DefaultDataCollector</ref>,</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="a01774" kindref="compound">DefaultVTKWriterManager&lt;typename AS::GridView&gt;::template</ref><sp/>DefaultVTKWriter&lt;&gt;&gt;;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>AS,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>DC,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">...<sp/>Args,<sp/>Dune::Vtk::IsDataCollector&lt;std::decay_t&lt;DC&gt;&gt;<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight><highlight class="keyword">requires</highlight><highlight class="normal">(<ref refid="a02102" kindref="compound">Ikarus::Concepts::FlatAssembler&lt;AS&gt;</ref>)</highlight></codeline>
<codeline lineno="231" refid="a00425_1a619faa9f2da801ac98217d31ddfa88a3" refkind="member"><highlight class="normal"><ref refid="a00425_1a6b54a4966e54b45e51358c7b7877a5b5" kindref="member">Writer</ref>(std::shared_ptr&lt;AS&gt;,<sp/>DC&amp;&amp;,<sp/>Args...)</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/>-&gt;<sp/><ref refid="a01762" kindref="compound">Writer&lt;AS, std::decay_t&lt;DC&gt;</ref>,</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="a01774" kindref="compound">DefaultVTKWriterManager&lt;typename AS::GridView&gt;::template</ref><sp/>DefaultVTKWriter&lt;std::decay_t&lt;DC&gt;&gt;&gt;;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>Ikarus::Vtk</highlight></codeline>
    </programlisting>
    <location file="/__w/ikarus/ikarus/repo/ikarus/io/vtkwriter.hh"/>
  </compounddef>
</doxygen>
