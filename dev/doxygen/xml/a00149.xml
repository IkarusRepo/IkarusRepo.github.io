<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="a00149" kind="file" language="C++">
    <compoundname>trustregion.hh</compoundname>
    <includes local="no">iosfwd</includes>
    <includes local="no">dune/common/float_cmp.hh</includes>
    <includes local="no">spdlog/spdlog.h</includes>
    <includes local="no">Eigen/Sparse</includes>
    <includes refid="a00329" local="no">ikarus/linearalgebra/truncatedconjugategradient.hh</includes>
    <includes refid="a00152" local="no">ikarus/solver/nonlinearsolver/solverinfos.hh</includes>
    <includes refid="a00065" local="no">ikarus/utils/defaultfunctions.hh</includes>
    <includes refid="a00023" local="no">ikarus/utils/linearalgebrahelper.hh</includes>
    <includes refid="a00122" local="no">ikarus/utils/observer/observer.hh</includes>
    <includes refid="a00131" local="no">ikarus/utils/observer/observermessages.hh</includes>
    <includes refid="a00011" local="no">ikarus/utils/traits.hh</includes>
    <incdepgraph>
      <node id="20">
        <label>ikarus/assembler/dirichletbcenforcement.hh</label>
        <link refid="a00176"/>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>ikarus/finiteelements/mechanics/materials/tags.hh</label>
        <link refid="a00242"/>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>ikarus/linearalgebra/truncatedconjugategradient.hh</label>
        <link refid="a00329"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>ikarus/solver/nonlinearsolver/solverinfos.hh</label>
        <link refid="a00152"/>
      </node>
      <node id="1">
        <label>trustregion.hh</label>
        <link refid="a00149"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>concepts.hh</label>
        <link refid="a00047"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>ikarus/utils/defaultfunctions.hh</label>
        <link refid="a00065"/>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>linearalgebrahelper.hh</label>
        <link refid="a00023"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>ikarus/utils/makeenum.hh</label>
        <link refid="a00005"/>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>ikarus/utils/observer/observer.hh</label>
        <link refid="a00122"/>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>ikarus/utils/observer/observermessages.hh</label>
        <link refid="a00131"/>
      </node>
      <node id="24">
        <label>ikarus/utils/traits.hh</label>
        <link refid="a00011"/>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>Eigen/Core</label>
      </node>
      <node id="8">
        <label>Eigen/Dense</label>
      </node>
      <node id="5">
        <label>Eigen/Sparse</label>
      </node>
      <node id="19">
        <label>autodiff/forward/dual/dual.hpp</label>
      </node>
      <node id="13">
        <label>concepts</label>
      </node>
      <node id="22">
        <label>dune/common/exceptions.hh</label>
      </node>
      <node id="3">
        <label>dune/common/float_cmp.hh</label>
      </node>
      <node id="27">
        <label>dune/common/hybridutilities.hh</label>
      </node>
      <node id="30">
        <label>dune/common/tuplevector.hh</label>
      </node>
      <node id="17">
        <label>dune/functions/functionspacebases/basistags.hh</label>
      </node>
      <node id="18">
        <label>dune/functions/functionspacebases/lagrangebasis.hh</label>
      </node>
      <node id="31">
        <label>dune/istl/bvector.hh</label>
      </node>
      <node id="25">
        <label>functional</label>
      </node>
      <node id="2">
        <label>iosfwd</label>
      </node>
      <node id="33">
        <label>map</label>
      </node>
      <node id="34">
        <label>memory</label>
      </node>
      <node id="28">
        <label>random</label>
      </node>
      <node id="29">
        <label>ranges</label>
      </node>
      <node id="4">
        <label>spdlog/spdlog.h</label>
      </node>
      <node id="26">
        <label>tuple</label>
      </node>
      <node id="14">
        <label>type_traits</label>
      </node>
      <node id="15">
        <label>utility</label>
      </node>
      <node id="16">
        <label>vector</label>
      </node>
    </incdepgraph>
    <innerclass refid="a01716" prot="public">Ikarus::TRSettings</innerclass>
    <innerclass refid="a01720" prot="public">Ikarus::TrustRegionConfig</innerclass>
    <innerclass refid="a01728" prot="public">Ikarus::AlgoInfo</innerclass>
    <innerclass refid="a01732" prot="public">Ikarus::Stats</innerclass>
    <innerclass refid="a01724" prot="public">Ikarus::TrustRegion</innerclass>
    <innernamespace refid="a00384">Ikarus</innernamespace>
    <briefdescription>
<para>Implementation of the Trust-region method for solving nonlinear equations. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>SPDX-FileCopyrightText:<sp/>2021-2025<sp/>The<sp/>Ikarus<sp/>Developers<sp/>mueller@ibb.uni-stuttgart.de</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>SPDX-License-Identifier:<sp/>LGPL-3.0-or-later</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iosfwd&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;dune/common/float_cmp.hh&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;spdlog/spdlog.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;Eigen/Sparse&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="a00329" kindref="compound">ikarus/linearalgebra/truncatedconjugategradient.hh</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="a00152" kindref="compound">ikarus/solver/nonlinearsolver/solverinfos.hh</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="a00065" kindref="compound">ikarus/utils/defaultfunctions.hh</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="a00023" kindref="compound">ikarus/utils/linearalgebrahelper.hh</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="a00122" kindref="compound">ikarus/utils/observer/observer.hh</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="a00131" kindref="compound">ikarus/utils/observer/observermessages.hh</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="a00011" kindref="compound">ikarus/utils/traits.hh</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="a00384" kindref="compound">Ikarus</ref><sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="33" refid="a00384_1ace28d4868cfc647491f7938f04ef6c66" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum<sp/>class</highlight><highlight class="normal"><sp/><ref refid="a00384_1ace28d4868cfc647491f7938f04ef6c66" kindref="member">PreConditioner</ref></highlight></codeline>
<codeline lineno="34"><highlight class="normal">{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><ref refid="a00384_1ace28d4868cfc647491f7938f04ef6c66a7a24b184ba388b8e327feb98dbe168ff" kindref="member">IncompleteCholesky</ref>,</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><ref refid="a00384_1ace28d4868cfc647491f7938f04ef6c66a7a93111b975ec3c3824eab230f3ec608" kindref="member">IdentityPreconditioner</ref>,</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><ref refid="a00384_1ace28d4868cfc647491f7938f04ef6c66a3c6b5404db3b7bf45a0302f376a53afc" kindref="member">DiagonalPreconditioner</ref></highlight></codeline>
<codeline lineno="38"><highlight class="normal">};</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40" refid="a01716" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="a01716" kindref="compound">TRSettings</ref></highlight></codeline>
<codeline lineno="41"><highlight class="normal">{</highlight></codeline>
<codeline lineno="42" refid="a01716_1a3b6b5fd328830b37cf47a8c3b485eb3e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="a01716_1a3b6b5fd328830b37cf47a8c3b485eb3e" kindref="member">verbosity</ref><sp/><sp/><sp/><sp/>=<sp/>5;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="43" refid="a01716_1a65731eb979e7677f54722743edebc4c7" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="a01716_1a65731eb979e7677f54722743edebc4c7" kindref="member">maxtime</ref><sp/><sp/><sp/>=<sp/>std::numeric_limits&lt;double&gt;::infinity();<sp/></highlight></codeline>
<codeline lineno="44" refid="a01716_1a58ec4234ba537f77ccf56ef6ec5db526" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="a01716_1a58ec4234ba537f77ccf56ef6ec5db526" kindref="member">minIter</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>3;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="45" refid="a01716_1ac496e08f6fc420b641d2e838d4adbb53" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="a01716_1ac496e08f6fc420b641d2e838d4adbb53" kindref="member">maxIter</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1000;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="46" refid="a01716_1a509efb6f34d183fdff88f95fe21a97ea" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="a01716_1a509efb6f34d183fdff88f95fe21a97ea" kindref="member">debug</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="47" refid="a01716_1a1cc69f38c3569c63cb4bf86a39a16050" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="a01716_1a1cc69f38c3569c63cb4bf86a39a16050" kindref="member">grad_tol</ref><sp/><sp/>=<sp/>1e-6;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="48" refid="a01716_1ab598fd07116bda4ec7ff4ec10ad771bb" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="a01716_1ab598fd07116bda4ec7ff4ec10ad771bb" kindref="member">corr_tol</ref><sp/><sp/>=<sp/>1e-6;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="49" refid="a01716_1acf36d2743732832643df20a287a9ca91" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="a01716_1acf36d2743732832643df20a287a9ca91" kindref="member">rho_prime</ref><sp/>=<sp/>0.01;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="50" refid="a01716_1a3943cb103ad51f2c407c867672dd3b1f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="a01716_1a3943cb103ad51f2c407c867672dd3b1f" kindref="member">useRand</ref><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="51" refid="a01716_1a29358b818a3eabe94a0d75218225de0d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="a01716_1a29358b818a3eabe94a0d75218225de0d" kindref="member">rho_reg</ref><sp/><sp/><sp/>=<sp/>1e6;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="52" refid="a01716_1a275deb9273559ec6b6bae0e1a0650bd8" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="a01716_1a275deb9273559ec6b6bae0e1a0650bd8" kindref="member">Delta_bar</ref><sp/>=<sp/>std::numeric_limits&lt;double&gt;::infinity();<sp/></highlight></codeline>
<codeline lineno="53" refid="a01716_1a2c36a30b640ce11ec533bd259d439bd5" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="a01716_1a2c36a30b640ce11ec533bd259d439bd5" kindref="member">Delta0</ref><sp/><sp/><sp/><sp/>=<sp/>10;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="54"><highlight class="normal">};</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;PreConditioner<sp/>preConditioner<sp/>=<sp/>PreConditioner::IncompleteCholesky,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>UF<sp/>=<sp/>utils::UpdateDefault&gt;</highlight></codeline>
<codeline lineno="62" refid="a01720" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="a01720" kindref="compound">TrustRegionConfig</ref></highlight></codeline>
<codeline lineno="63"><highlight class="normal">{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static_assert</highlight><highlight class="normal">(std::copy_constructible&lt;UF&gt;,</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>The<sp/>update<sp/>function<sp/>should<sp/>be<sp/>copy<sp/>constructable.<sp/>If<sp/>it<sp/>is<sp/>a<sp/>lambda<sp/>wrap<sp/>it<sp/>in<sp/>a<sp/>std::function&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67" refid="a01720_1a9719e786287c8d5aca05169048800ec3" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="a01720_1a9719e786287c8d5aca05169048800ec3" kindref="member">UpdateFunction</ref><sp/>=<sp/>UF;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69" refid="a01720_1a96af86c9e501d6f3c679f6e97cbec00f" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="a01716" kindref="compound">TRSettings</ref><sp/><ref refid="a01720_1a96af86c9e501d6f3c679f6e97cbec00f" kindref="member">parameters</ref>;</highlight></codeline>
<codeline lineno="70" refid="a01720_1a1dec794b41865bc77a8971d7648acee9" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/><ref refid="a00384_1ace28d4868cfc647491f7938f04ef6c66" kindref="member">PreConditioner</ref><sp/><ref refid="a01720_1a1dec794b41865bc77a8971d7648acee9" kindref="member">preConditionerType</ref><sp/>=<sp/>preConditioner;</highlight></codeline>
<codeline lineno="71" refid="a01720_1ab139b15888c191733475c91bebe0226c" refkind="member"><highlight class="normal"><sp/><sp/>UF<sp/><ref refid="a01720_1ab139b15888c191733475c91bebe0226c" kindref="member">updateFunction</ref>;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>UF2&gt;</highlight></codeline>
<codeline lineno="73" refid="a01720_1adedaf2b065be442272056616d31c74d4" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="a01720_1adedaf2b065be442272056616d31c74d4" kindref="member">rebindUpdateFunction</ref>(UF2&amp;&amp;<sp/><ref refid="a01720_1ab139b15888c191733475c91bebe0226c" kindref="member">updateFunction</ref>)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="a01720" kindref="compound">TrustRegionConfig&lt;preConditioner, UF2&gt;</ref><sp/>settings{.<ref refid="a01720_1a96af86c9e501d6f3c679f6e97cbec00f" kindref="member">parameters</ref><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="a01720_1a96af86c9e501d6f3c679f6e97cbec00f" kindref="member">parameters</ref>,</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.updateFunction<sp/>=<sp/>std::forward&lt;UF2&gt;(<ref refid="a01720_1ab139b15888c191733475c91bebe0226c" kindref="member">updateFunction</ref>)};</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>settings;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="78"><highlight class="normal">};</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>NLO,<sp/><ref refid="a00384_1ace28d4868cfc647491f7938f04ef6c66" kindref="member">PreConditioner</ref><sp/>preConditioner<sp/>=<sp/><ref refid="a00384_1ace28d4868cfc647491f7938f04ef6c66a7a24b184ba388b8e327feb98dbe168ff" kindref="member">PreConditioner::IncompleteCholesky</ref>,</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>UF<sp/>=<sp/>utils::UpdateDefault&gt;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="a00384_1a8d76e20d6a74e339f85d98c9854ee89c" kindref="member">TrustRegion</ref>;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>NLO,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TRConfig&gt;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="keyword">requires</highlight><highlight class="normal"><sp/>traits::isSpecializationNonTypeAndTypes&lt;TrustRegionConfig,<sp/>std::remove_cvref_t&lt;TRConfig&gt;&gt;::value</highlight></codeline>
<codeline lineno="94" refid="a00384_1a8785899121b52f1b6ffe3a43b1a5df61" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="a00384_1a66b45c139b5d57965ada53d92d8f93ce" kindref="member">createNonlinearSolver</ref>(TRConfig&amp;&amp;<sp/>config,<sp/>NLO&amp;&amp;<sp/>nonLinearOperator)<sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/><ref refid="a00384_1ace28d4868cfc647491f7938f04ef6c66" kindref="member">PreConditioner</ref><sp/>preConditioner<sp/>=<sp/>std::remove_cvref_t&lt;TRConfig&gt;::preConditionerType;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">UF<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>std::remove_cvref_t&lt;TRConfig&gt;::UpdateFunction;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static_assert</highlight><highlight class="normal">(std::remove_cvref_t&lt;NLO&gt;::numberOfFunctions<sp/>==<sp/>3,</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;The<sp/>number<sp/>of<sp/>derivatives<sp/>in<sp/>the<sp/>nonlinear<sp/>operator<sp/>have<sp/>to<sp/>be<sp/>exactly<sp/>3.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>solver<sp/>=<sp/>std::make_shared&lt;TrustRegion&lt;NLO,<sp/>preConditioner,<sp/>UF&gt;&gt;(nonLinearOperator,</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::forward&lt;TRConfig&gt;(config).updateFunction);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/>solver-&gt;setup(config.parameters);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>solver;</highlight></codeline>
<codeline lineno="104"><highlight class="normal">}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="110" refid="a00384_1abd5d0cf356d1ae81f6ee827b0f47c674" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum<sp/>class</highlight><highlight class="normal"><sp/><ref refid="a00384_1abd5d0cf356d1ae81f6ee827b0f47c674" kindref="member">StopReason</ref></highlight></codeline>
<codeline lineno="111"><highlight class="normal">{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><ref refid="a00384_1abd5d0cf356d1ae81f6ee827b0f47c674a0c4f44592a7ae85baf42cb3fb4a5a3d1" kindref="member">gradientNormTolReached</ref>,</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><ref refid="a00384_1abd5d0cf356d1ae81f6ee827b0f47c674ad1c6a6016de417acc66b5ac44a1fdca3" kindref="member">correctionNormTolReached</ref>,</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><ref refid="a00384_1abd5d0cf356d1ae81f6ee827b0f47c674ad205528fe2a4412b89626ff7eee936f9" kindref="member">maximumTimeReached</ref>,</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><ref refid="a00384_1abd5d0cf356d1ae81f6ee827b0f47c674a5ed07f9461b91dd3a6ba961a0ed5c8fe" kindref="member">maximumIterationsReached</ref>,</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><ref refid="a00384_1abd5d0cf356d1ae81f6ee827b0f47c674a8d2fa9685be8b8f8994bd8a73bfa8c9f" kindref="member">dontStop</ref></highlight></codeline>
<codeline lineno="117"><highlight class="normal">};</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="123" refid="a01728" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="a01728" kindref="compound">AlgoInfo</ref></highlight></codeline>
<codeline lineno="124"><highlight class="normal">{</highlight></codeline>
<codeline lineno="125" refid="a01728_1afc288b38be6c8627cf079d9bffc3cda9" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="a01728_1afc288b38be6c8627cf079d9bffc3cda9" kindref="member">consecutive_TRplus</ref><sp/><sp/><sp/>=<sp/>0;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="126" refid="a01728_1aab1636ca718e535e09e61cdefc348084" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="a01728_1aab1636ca718e535e09e61cdefc348084" kindref="member">consecutive_TRminus</ref><sp/><sp/>=<sp/>0;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="127" refid="a01728_1ae1f58001cb449db18bdbd98740dd143d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="a01728_1ae1f58001cb449db18bdbd98740dd143d" kindref="member">consecutive_Rejected</ref><sp/>=<sp/>0;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="128" refid="a01728_1af34cb5bb79e983db99b959d871afd353" refkind="member"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="a01728_1af34cb5bb79e983db99b959d871afd353" kindref="member">stopReasonString</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="129" refid="a01728_1ae987404091035ade31e839e9f00b7cbd" refkind="member"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="a01728_1ae987404091035ade31e839e9f00b7cbd" kindref="member">trstr</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="130" refid="a01728_1af3d423f3f05e0bdd445e2b9de7dc9daf" refkind="member"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="a01728_1af3d423f3f05e0bdd445e2b9de7dc9daf" kindref="member">accstr</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="131" refid="a01728_1a84be03aa6ebbd80ab2e6fac5a78aacd3" refkind="member"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="a01728_1a84be03aa6ebbd80ab2e6fac5a78aacd3" kindref="member">randomPredictionString</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="132" refid="a01728_1a3947b27f29bf44beb7f3f19e91c344f9" refkind="member"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="a01728_1a3947b27f29bf44beb7f3f19e91c344f9" kindref="member">cauchystr</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="133" refid="a01728_1a8c3abc0958c354cc92394dfd12a0317b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="a01728_1a8c3abc0958c354cc92394dfd12a0317b" kindref="member">acceptProposal</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="134" refid="a01728_1ac6037dd6d1303ded090d9da71dea06b9" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="a01728_1ac6037dd6d1303ded090d9da71dea06b9" kindref="member">used_cauchy</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="135" refid="a01728_1a68f203529fcd8a947fd49330a83d42b2" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="a00384_1abd5d0cf356d1ae81f6ee827b0f47c674" kindref="member">StopReason</ref><sp/><ref refid="a01728_1a68f203529fcd8a947fd49330a83d42b2" kindref="member">stop</ref>{<ref refid="a00384_1abd5d0cf356d1ae81f6ee827b0f47c674a8d2fa9685be8b8f8994bd8a73bfa8c9f" kindref="member">StopReason::dontStop</ref>};<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="136" refid="a01728_1a8df37485a1fdbbce8d153a8fadd537bf" refkind="member"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="a01728_1a8df37485a1fdbbce8d153a8fadd537bf" kindref="member">reasonString</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="137"><highlight class="normal">};</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="143" refid="a01732" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="a01732" kindref="compound">Stats</ref></highlight></codeline>
<codeline lineno="144"><highlight class="normal">{</highlight></codeline>
<codeline lineno="145" refid="a01732_1a58ec024d2233720f0bf164b8b21a6626" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="a01732_1a58ec024d2233720f0bf164b8b21a6626" kindref="member">gradNorm</ref>{1};</highlight></codeline>
<codeline lineno="146" refid="a01732_1a178607b87a8d27eb7b02bb22dc0d2c63" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="a01732_1a178607b87a8d27eb7b02bb22dc0d2c63" kindref="member">etaNorm</ref>{1};</highlight></codeline>
<codeline lineno="147" refid="a01732_1ab3cab6865c16d06ec81b5db14b0dc5e2" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="a01732_1ab3cab6865c16d06ec81b5db14b0dc5e2" kindref="member">time</ref>{0};</highlight></codeline>
<codeline lineno="148" refid="a01732_1a43b868b19908b5435f1e2f18fb1d7625" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="a01732_1a43b868b19908b5435f1e2f18fb1d7625" kindref="member">energy</ref>{0};</highlight></codeline>
<codeline lineno="149" refid="a01732_1a3a03ce164638213312bece9e8b54fdcd" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="a01732_1a3a03ce164638213312bece9e8b54fdcd" kindref="member">energyProposal</ref>{0};</highlight></codeline>
<codeline lineno="150" refid="a01732_1a1111f89e925a512bd145b50a8f25c2be" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="a01732_1a1111f89e925a512bd145b50a8f25c2be" kindref="member">rho</ref>{0};</highlight></codeline>
<codeline lineno="151" refid="a01732_1a79ff262003d1f3ff65ef2877aca8df0f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="a01732_1a79ff262003d1f3ff65ef2877aca8df0f" kindref="member">outerIter</ref>{0};</highlight></codeline>
<codeline lineno="152" refid="a01732_1ac5053b65db9ceae8340aaebe952c7792" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="a01732_1ac5053b65db9ceae8340aaebe952c7792" kindref="member">innerIterSum</ref>{0};</highlight></codeline>
<codeline lineno="153"><highlight class="normal">};</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>NLO,<sp/>PreConditioner<sp/>preConditioner,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>UF&gt;</highlight></codeline>
<codeline lineno="168" refid="a01724" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="a01724" kindref="compound">TrustRegion</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="a01880" kindref="compound">IObservable</ref>&lt;NonLinearSolverMessages&gt;</highlight></codeline>
<codeline lineno="169"><highlight class="normal">{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="171" refid="a01724_1a4335951e9f140f89f008e020cb32d537" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="a01716" kindref="compound">Settings</ref><sp/><sp/>=<sp/><ref refid="a01716" kindref="compound">TRSettings</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="172" refid="a01724_1a44fa96b7ca63e50d8ed3707b4129369b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="a01724_1a44fa96b7ca63e50d8ed3707b4129369b" kindref="member">ValueType</ref><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>NLO::template<sp/>ParameterValue&lt;0&gt;;<sp/></highlight></codeline>
<codeline lineno="174" refid="a01724_1a1071054a0b75f9fbe27832ea672792b0" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="a01724_1a1071054a0b75f9fbe27832ea672792b0" kindref="member">CorrectionType</ref><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>NLO::DerivativeType;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="175" refid="a01724_1a7f187a825b0a65e7d9ab1c21578da1cf" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="a01724_1a7f187a825b0a65e7d9ab1c21578da1cf" kindref="member">UpdateFunction</ref><sp/>=<sp/>UF;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177" refid="a01724_1a7334271a9133e2503f142decf6ecebb7" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="a01724_1a7334271a9133e2503f142decf6ecebb7" kindref="member">NonLinearOperator</ref><sp/>=<sp/>NLO;<sp/></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179" refid="a01724_1a34bb35f72b19375a57329d3fec82515c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="a01724_1a34bb35f72b19375a57329d3fec82515c" kindref="member">ScalarType</ref><sp/>=<sp/>std::remove_cvref_t&lt;typename<sp/>NLO::template<sp/>FunctionReturnType&lt;0&gt;&gt;;<sp/></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182" refid="a01724_1a631486c0b90c8a1a0bfc9d80694f6a4f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="a01724_1a631486c0b90c8a1a0bfc9d80694f6a4f" kindref="member">MatrixType</ref><sp/>=<sp/>std::remove_cvref_t&lt;typename<sp/>NLO::template<sp/>FunctionReturnType&lt;2&gt;&gt;;<sp/></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>UF2<sp/>=<sp/>UF&gt;</highlight></codeline>
<codeline lineno="190" refid="a01724_1ae83eadc3a30071ec2c469cbc7f4c0c71" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="a01724_1ae83eadc3a30071ec2c469cbc7f4c0c71" kindref="member">TrustRegion</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>NLO&amp;<sp/><ref refid="a01724_1a58d156c1eb6c5ac3abee28d14beadc2a" kindref="member">nonLinearOperator</ref>,<sp/>UF2&amp;&amp;<sp/>updateFunction<sp/>=<sp/>{})</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>nonLinearOperator_{<ref refid="a01724_1a58d156c1eb6c5ac3abee28d14beadc2a" kindref="member">nonLinearOperator</ref>},</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>updateFunction_{std::forward&lt;UF2&gt;(updateFunction)},</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xOld_{this-&gt;<ref refid="a01724_1a58d156c1eb6c5ac3abee28d14beadc2a" kindref="member">nonLinearOperator</ref>().firstParameter()}<sp/>{</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>eta_.setZero(gradient().size());</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>Heta_.setZero(gradient().size());</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>truncatedConjugateGradient_.analyzePattern(hessian());</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="203" refid="a01724_1a3e50d3a955e7e27019a1322969ec268e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="a01724_1a3e50d3a955e7e27019a1322969ec268e" kindref="member">setup</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="a01716" kindref="compound">Settings</ref>&amp;<sp/>settings)<sp/>{</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>settings_<sp/>=<sp/>settings;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(settings_.<ref refid="a01716_1acf36d2743732832643df20a287a9ca91" kindref="member">rho_prime</ref><sp/>&lt;<sp/>0.25<sp/>&amp;&amp;<sp/></highlight><highlight class="stringliteral">&quot;options.rho_prime<sp/>must<sp/>be<sp/>strictly<sp/>smaller<sp/>than<sp/>1/4.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(settings_.<ref refid="a01716_1a275deb9273559ec6b6bae0e1a0650bd8" kindref="member">Delta_bar</ref><sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/></highlight><highlight class="stringliteral">&quot;options.Delta_bar<sp/>must<sp/>be<sp/>positive.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(settings_.<ref refid="a01716_1a2c36a30b640ce11ec533bd259d439bd5" kindref="member">Delta0</ref><sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>settings_.<ref refid="a01716_1a2c36a30b640ce11ec533bd259d439bd5" kindref="member">Delta0</ref><sp/>&lt;<sp/>settings_.<ref refid="a01716_1a275deb9273559ec6b6bae0e1a0650bd8" kindref="member">Delta_bar</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;options.Delta0<sp/>must<sp/>be<sp/>positive<sp/>and<sp/>smaller<sp/>than<sp/>Delta_bar.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>DOXYGEN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">NoPredictor</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>SolutionType<sp/>=<sp/>NoPredictor&gt;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">requires</highlight><highlight class="normal"><sp/>std::is_same_v&lt;SolutionType,<sp/>NoPredictor&gt;<sp/>||<sp/>std::is_convertible_v&lt;SolutionType,<sp/>CorrectionType&gt;</highlight></codeline>
<codeline lineno="224" refid="a01724_1af244b67329c3aab4aa81f37c9eabae8f" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="a01712" kindref="compound">NonLinearSolverInformation</ref><sp/><ref refid="a01724_1af244b67329c3aab4aa81f37c9eabae8f" kindref="member">solve</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>SolutionType&amp;<sp/>dxPredictor<sp/>=<sp/>NoPredictor{})<sp/>{</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="a01880_1a4bce3750aa7d52aff9baf122a54e16b5" kindref="member">notify</ref>(<ref refid="a00378_1gga662b2b6a80547adf4b9ce8b30d87fab5afaee4ca3c30ee18148ce3ada37466498" kindref="member">NonLinearSolverMessages::INIT</ref>);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>stats_<sp/>=<sp/><ref refid="a01732" kindref="compound">Stats</ref>{};</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/>info_<sp/><sp/>=<sp/>AlgoInfo{};</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/>NonLinearSolverInformation<sp/>solverInformation;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="a01724_1a58d156c1eb6c5ac3abee28d14beadc2a" kindref="member">nonLinearOperator</ref>().updateAll();</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>stats_.<ref refid="a01732_1a43b868b19908b5435f1e2f18fb1d7625" kindref="member">energy</ref><sp/><sp/><sp/>=<sp/>energy();</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>x<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="a01724_1a58d156c1eb6c5ac3abee28d14beadc2a" kindref="member">nonLinearOperator</ref>().firstParameter();</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>xOld_<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>x;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>stats_.<ref refid="a01732_1a58ec024d2233720f0bf164b8b21a6626" kindref="member">gradNorm</ref><sp/>=<sp/><ref refid="a00379_1ga0ffc0c74dbd9aeee3e53b199a21b828c" kindref="member">norm</ref>(gradient());</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>(not<sp/>std::is_same_v&lt;SolutionType,<sp/>NoPredictor&gt;)</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>updateFunction(x,<sp/>dxPredictor);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>truncatedConjugateGradient_.analyzePattern(hessian());</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/>innerInfo_.<ref refid="a01652_1a8e52ebafb750281e8b3f00cb698bd3dd" kindref="member">Delta</ref><sp/>=<sp/>settings_.<ref refid="a01716_1a2c36a30b640ce11ec533bd259d439bd5" kindref="member">Delta0</ref>;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/>spdlog::info(</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>iter<sp/>|<sp/>inner_i<sp/>|<sp/><sp/><sp/>rho<sp/>|<sp/><sp/><sp/>energy<sp/>|<sp/>energy_p<sp/>|<sp/>energy_inc<sp/>|<sp/><sp/>norm(g)<sp/>|<sp/><sp/><sp/><sp/>Delta<sp/>|<sp/>norm(corr)<sp/>|<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;InnerBreakReason&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/>spdlog::info(</highlight><highlight class="stringliteral">&quot;{:-^143}&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;-&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(not<sp/>stoppingCriterion())<sp/>{</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="a01880_1a4bce3750aa7d52aff9baf122a54e16b5" kindref="member">notify</ref>(<ref refid="a00378_1gga662b2b6a80547adf4b9ce8b30d87fab5afdb2cb9832d112cd92fb2cda8879c3b4" kindref="member">NonLinearSolverMessages::ITERATION_STARTED</ref>);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(settings_.<ref refid="a01716_1a3943cb103ad51f2c407c867672dd3b1f" kindref="member">useRand</ref>)<sp/>{</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stats_.<ref refid="a01732_1a79ff262003d1f3ff65ef2877aca8df0f" kindref="member">outerIter</ref><sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eta_.setRandom();</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(eta_.dot(hessian()<sp/>*<sp/>eta_)<sp/>&gt;<sp/>innerInfo_.<ref refid="a01652_1a8e52ebafb750281e8b3f00cb698bd3dd" kindref="member">Delta</ref><sp/>*<sp/>innerInfo_.<ref refid="a01652_1a8e52ebafb750281e8b3f00cb698bd3dd" kindref="member">Delta</ref>)</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eta_<sp/>*=<sp/>eps_;<sp/></highlight><highlight class="comment">//<sp/>eps<sp/>is<sp/>sqrt(sqrt(maschine-precision))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eta_.setZero();</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eta_.setZero();</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>solveInnerProblem();</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stats_.<ref refid="a01732_1ac5053b65db9ceae8340aaebe952c7792" kindref="member">innerIterSum</ref><sp/>+=<sp/>innerInfo_.<ref refid="a01652_1aea7d60a8e86f8c8a17251b1da948ea68" kindref="member">numInnerIter</ref>;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>info_.<ref refid="a01728_1af34cb5bb79e983db99b959d871afd353" kindref="member">stopReasonString</ref><sp/>=<sp/>tcg_stop_reason_[</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(innerInfo_.<ref refid="a01652_1a9c7c8b39cd33322b4ce22154628f4b7e" kindref="member">stop_tCG</ref>)];</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Heta_<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>hessian()<sp/>*<sp/>eta_;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(settings_.<ref refid="a01716_1a3943cb103ad51f2c407c867672dd3b1f" kindref="member">useRand</ref><sp/>and<sp/>stats_.<ref refid="a01732_1a79ff262003d1f3ff65ef2877aca8df0f" kindref="member">outerIter</ref><sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>info_.<ref refid="a01728_1ac6037dd6d1303ded090d9da71dea06b9" kindref="member">used_cauchy</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>info_.<ref refid="a01728_1a84be03aa6ebbd80ab2e6fac5a78aacd3" kindref="member">randomPredictionString</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;<sp/>Used<sp/>Random<sp/>correction<sp/>predictor&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>info_.<ref refid="a01728_1a3947b27f29bf44beb7f3f19e91c344f9" kindref="member">cauchystr</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tauC;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>the<sp/>curvature</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::VectorXd<sp/>Hg<sp/>=<sp/>hessian()<sp/>*<sp/>gradient();</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>g_Hg<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>(gradient().dot(Hg));</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(g_Hg<sp/>&lt;=<sp/>0)</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tauC<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tauC<sp/>=<sp/>std::min(Dune::power(stats_.<ref refid="a01732_1a58ec024d2233720f0bf164b8b21a6626" kindref="member">gradNorm</ref>,<sp/>3)<sp/>/<sp/>(innerInfo_.<ref refid="a01652_1a8e52ebafb750281e8b3f00cb698bd3dd" kindref="member">Delta</ref><sp/>*<sp/>g_Hg),<sp/>1.0);</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>generate<sp/>the<sp/>Cauchy<sp/>point.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::VectorXd<sp/>etaC<sp/><sp/>=<sp/>-tauC<sp/>*<sp/>innerInfo_.<ref refid="a01652_1a8e52ebafb750281e8b3f00cb698bd3dd" kindref="member">Delta</ref><sp/>/<sp/>stats_.<ref refid="a01732_1a58ec024d2233720f0bf164b8b21a6626" kindref="member">gradNorm</ref><sp/>*<sp/>gradient();</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::VectorXd<sp/>HetaC<sp/>=<sp/>-tauC<sp/>*<sp/>innerInfo_.<ref refid="a01652_1a8e52ebafb750281e8b3f00cb698bd3dd" kindref="member">Delta</ref><sp/>/<sp/>stats_.<ref refid="a01732_1a58ec024d2233720f0bf164b8b21a6626" kindref="member">gradNorm</ref><sp/>*<sp/>Hg;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mdle<sp/><sp/>=<sp/>stats_.<ref refid="a01732_1a43b868b19908b5435f1e2f18fb1d7625" kindref="member">energy</ref><sp/>+<sp/>gradient().dot(eta_)<sp/>+<sp/>.5<sp/>*<sp/>Heta_.dot(eta_);</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mdlec<sp/>=<sp/>stats_.<ref refid="a01732_1a43b868b19908b5435f1e2f18fb1d7625" kindref="member">energy</ref><sp/>+<sp/>gradient().dot(etaC)<sp/>+<sp/>.5<sp/>*<sp/>HetaC.dot(etaC);</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mdlec<sp/>&lt;<sp/>mdle<sp/>&amp;&amp;<sp/>stats_.<ref refid="a01732_1a79ff262003d1f3ff65ef2877aca8df0f" kindref="member">outerIter</ref><sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eta_<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>etaC;</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Heta_<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>HetaC;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>info_.<ref refid="a01728_1ac6037dd6d1303ded090d9da71dea06b9" kindref="member">used_cauchy</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>info_.<ref refid="a01728_1a3947b27f29bf44beb7f3f19e91c344f9" kindref="member">cauchystr</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;<sp/>USED<sp/>CAUCHY<sp/>POINT!&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>info_.<ref refid="a01728_1a3947b27f29bf44beb7f3f19e91c344f9" kindref="member">cauchystr</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stats_.<ref refid="a01732_1a178607b87a8d27eb7b02bb22dc0d2c63" kindref="member">etaNorm</ref><sp/>=<sp/>eta_.norm();</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>updateFunction_(x,<sp/>eta_);</highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>energy<sp/>of<sp/>our<sp/>proposed<sp/>update<sp/>step</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="a01724_1a58d156c1eb6c5ac3abee28d14beadc2a" kindref="member">nonLinearOperator</ref>().template<sp/>update&lt;0&gt;();</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stats_.<ref refid="a01732_1a3a03ce164638213312bece9e8b54fdcd" kindref="member">energyProposal</ref><sp/>=<sp/>energy();</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Will<sp/>we<sp/>accept<sp/>the<sp/>proposal<sp/>or<sp/>not?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>the<sp/>performance<sp/>of<sp/>the<sp/>quadratic<sp/>model<sp/>against<sp/>the<sp/>actual<sp/>energy.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>rhonum<sp/>=<sp/>stats_.<ref refid="a01732_1a43b868b19908b5435f1e2f18fb1d7625" kindref="member">energy</ref><sp/>-<sp/>stats_.<ref refid="a01732_1a3a03ce164638213312bece9e8b54fdcd" kindref="member">energyProposal</ref>;</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>rhoden<sp/>=<sp/>-eta_.dot(gradient()<sp/>+<sp/>0.5<sp/>*<sp/>Heta_);</highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/>Close<sp/>to<sp/>convergence<sp/>the<sp/>proposed<sp/>energy<sp/>and<sp/>the<sp/>real<sp/>energy<sp/>almost<sp/>coincide.</highlight></codeline>
<codeline lineno="304"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>Therefore,<sp/>the<sp/>performance<sp/>check<sp/>of<sp/>our<sp/>model<sp/>becomes<sp/>ill-conditioned</highlight></codeline>
<codeline lineno="305"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>The<sp/>regularisation<sp/>fixes<sp/>this<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>rhoReg<sp/>=<sp/>std::max(1.0,<sp/>abs(stats_.<ref refid="a01732_1a43b868b19908b5435f1e2f18fb1d7625" kindref="member">energy</ref>))<sp/>*<sp/>eps_<sp/>*<sp/>settings_.<ref refid="a01716_1a29358b818a3eabe94a0d75218225de0d" kindref="member">rho_reg</ref>;</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rhonum<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>rhonum<sp/>+<sp/>rhoReg;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rhoden<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>rhoden<sp/>+<sp/>rhoReg;</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>modelDecreased<sp/>=<sp/>rhoden<sp/>&gt;<sp/>0.0;</highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!modelDecreased)</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>info_.<ref refid="a01728_1af34cb5bb79e983db99b959d871afd353" kindref="member">stopReasonString</ref>.append(</highlight><highlight class="stringliteral">&quot;,<sp/>model<sp/>did<sp/>not<sp/>decrease&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stats_.<ref refid="a01732_1a1111f89e925a512bd145b50a8f25c2be" kindref="member">rho</ref><sp/>=<sp/>rhonum<sp/>/<sp/>rhoden;</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stats_.<ref refid="a01732_1a1111f89e925a512bd145b50a8f25c2be" kindref="member">rho</ref><sp/>=<sp/>stats_.<ref refid="a01732_1a1111f89e925a512bd145b50a8f25c2be" kindref="member">rho</ref><sp/>&lt;<sp/>0.0<sp/>?<sp/>-1.0<sp/>:<sp/>stats_.<ref refid="a01732_1a1111f89e925a512bd145b50a8f25c2be" kindref="member">rho</ref>;<sp/></highlight><highlight class="comment">//<sp/>move<sp/>rho<sp/>to<sp/>the<sp/>domain<sp/>[-1.0,inf]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>info_.<ref refid="a01728_1ae987404091035ade31e839e9f00b7cbd" kindref="member">trstr</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>measure<sp/>if<sp/>energy<sp/>decreased</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>energyDecreased<sp/>=<sp/>Dune::FloatCmp::ge(stats_.<ref refid="a01732_1a43b868b19908b5435f1e2f18fb1d7625" kindref="member">energy</ref><sp/>-<sp/>stats_.<ref refid="a01732_1a3a03ce164638213312bece9e8b54fdcd" kindref="member">energyProposal</ref>,<sp/>-1e-12);</highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>model<sp/>behaves<sp/>badly<sp/>or<sp/>if<sp/>the<sp/>energy<sp/>increased<sp/>we<sp/>reduce<sp/>the<sp/>trust<sp/>region<sp/>size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stats_.<ref refid="a01732_1a1111f89e925a512bd145b50a8f25c2be" kindref="member">rho</ref><sp/>&lt;<sp/>1e-4<sp/>||<sp/>not<sp/>modelDecreased<sp/>||<sp/>std::isnan(stats_.<ref refid="a01732_1a1111f89e925a512bd145b50a8f25c2be" kindref="member">rho</ref>)<sp/>||<sp/>not<sp/>energyDecreased)<sp/>{</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>info_.<ref refid="a01728_1ae987404091035ade31e839e9f00b7cbd" kindref="member">trstr</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;TR-&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>innerInfo_.<ref refid="a01652_1a8e52ebafb750281e8b3f00cb698bd3dd" kindref="member">Delta</ref><sp/>/=<sp/>4.0;</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>info_.<ref refid="a01728_1afc288b38be6c8627cf079d9bffc3cda9" kindref="member">consecutive_TRplus</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>info_.<ref refid="a01728_1aab1636ca718e535e09e61cdefc348084" kindref="member">consecutive_TRminus</ref>++;</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(info_.<ref refid="a01728_1aab1636ca718e535e09e61cdefc348084" kindref="member">consecutive_TRminus</ref><sp/>&gt;=<sp/>5<sp/>&amp;&amp;<sp/>settings_.<ref refid="a01716_1a3b6b5fd328830b37cf47a8c3b485eb3e" kindref="member">verbosity</ref><sp/>&gt;=<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>info_.<ref refid="a01728_1aab1636ca718e535e09e61cdefc348084" kindref="member">consecutive_TRminus</ref><sp/>=<sp/>-std::numeric_limits&lt;int&gt;::infinity();</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spdlog::info(</highlight><highlight class="stringliteral">&quot;<sp/>+++<sp/>Detected<sp/>many<sp/>consecutive<sp/>TR-<sp/>(radius<sp/>decreases).&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spdlog::info(</highlight><highlight class="stringliteral">&quot;<sp/>+++<sp/>Consider<sp/>decreasing<sp/>options.Delta_bar<sp/>by<sp/>an<sp/>order<sp/>of<sp/>magnitude.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stats_.<ref refid="a01732_1a1111f89e925a512bd145b50a8f25c2be" kindref="member">rho</ref><sp/>&gt;<sp/>0.99<sp/>&amp;&amp;<sp/>(innerInfo_.<ref refid="a01652_1a9c7c8b39cd33322b4ce22154628f4b7e" kindref="member">stop_tCG</ref><sp/>==<sp/><ref refid="a00396_1a99c0436bed03f4dd4168a21f6b69ad5aa09116173dd03279374ae42ad40f940ba" kindref="member">Eigen::TCGStopReason::negativeCurvature</ref><sp/>||</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>innerInfo_.<ref refid="a01652_1a9c7c8b39cd33322b4ce22154628f4b7e" kindref="member">stop_tCG</ref><sp/>==<sp/><ref refid="a00396_1a99c0436bed03f4dd4168a21f6b69ad5aa9e095c14131d90a6c10c08cd802c8aed" kindref="member">Eigen::TCGStopReason::exceededTrustRegion</ref>))<sp/>{</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>info_.<ref refid="a01728_1ae987404091035ade31e839e9f00b7cbd" kindref="member">trstr</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;TR+&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>innerInfo_.<ref refid="a01652_1a8e52ebafb750281e8b3f00cb698bd3dd" kindref="member">Delta</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>std::min(3.5<sp/>*<sp/>innerInfo_.<ref refid="a01652_1a8e52ebafb750281e8b3f00cb698bd3dd" kindref="member">Delta</ref>,<sp/>settings_.<ref refid="a01716_1a275deb9273559ec6b6bae0e1a0650bd8" kindref="member">Delta_bar</ref>);</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>info_.<ref refid="a01728_1aab1636ca718e535e09e61cdefc348084" kindref="member">consecutive_TRminus</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>info_.<ref refid="a01728_1afc288b38be6c8627cf079d9bffc3cda9" kindref="member">consecutive_TRplus</ref>++;</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(info_.<ref refid="a01728_1afc288b38be6c8627cf079d9bffc3cda9" kindref="member">consecutive_TRplus</ref><sp/>&gt;=<sp/>5<sp/>&amp;&amp;<sp/>settings_.<ref refid="a01716_1a3b6b5fd328830b37cf47a8c3b485eb3e" kindref="member">verbosity</ref><sp/>&gt;=<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>info_.<ref refid="a01728_1afc288b38be6c8627cf079d9bffc3cda9" kindref="member">consecutive_TRplus</ref><sp/>=<sp/>-std::numeric_limits&lt;int&gt;::infinity();</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spdlog::info(</highlight><highlight class="stringliteral">&quot;<sp/>+++<sp/>Detected<sp/>many<sp/>consecutive<sp/>TR+<sp/>(radius<sp/>increases)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spdlog::info(</highlight><highlight class="stringliteral">&quot;<sp/>+++<sp/>Consider<sp/>increasing<sp/>options.Delta_bar<sp/>by<sp/>an<sp/>order<sp/>of<sp/>magnitude&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>info_.<ref refid="a01728_1afc288b38be6c8627cf079d9bffc3cda9" kindref="member">consecutive_TRplus</ref><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>info_.<ref refid="a01728_1aab1636ca718e535e09e61cdefc348084" kindref="member">consecutive_TRminus</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(modelDecreased<sp/>&amp;&amp;<sp/>stats_.<ref refid="a01732_1a1111f89e925a512bd145b50a8f25c2be" kindref="member">rho</ref><sp/>&gt;<sp/>settings_.<ref refid="a01716_1acf36d2743732832643df20a287a9ca91" kindref="member">rho_prime</ref><sp/>&amp;&amp;<sp/>energyDecreased)<sp/>{</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stats_.<ref refid="a01732_1a3a03ce164638213312bece9e8b54fdcd" kindref="member">energyProposal</ref><sp/>&gt;<sp/>stats_.<ref refid="a01732_1a43b868b19908b5435f1e2f18fb1d7625" kindref="member">energy</ref>)</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spdlog::info(</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Energy<sp/>function<sp/>increased<sp/>by<sp/>{}<sp/>(step<sp/>size:<sp/>{}).<sp/>Since<sp/>this<sp/>is<sp/>small<sp/>we<sp/>accept<sp/>the<sp/>step<sp/>and<sp/>hope<sp/>for<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;convergence<sp/>of<sp/>the<sp/>gradient<sp/>norm.&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stats_.<ref refid="a01732_1a3a03ce164638213312bece9e8b54fdcd" kindref="member">energyProposal</ref><sp/>-<sp/>stats_.<ref refid="a01732_1a43b868b19908b5435f1e2f18fb1d7625" kindref="member">energy</ref>,<sp/>stats_.<ref refid="a01732_1a178607b87a8d27eb7b02bb22dc0d2c63" kindref="member">etaNorm</ref>);</highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>info_.<ref refid="a01728_1a8c3abc0958c354cc92394dfd12a0317b" kindref="member">acceptProposal</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>info_.<ref refid="a01728_1af3d423f3f05e0bdd445e2b9de7dc9daf" kindref="member">accstr</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;acc&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>info_.<ref refid="a01728_1ae1f58001cb449db18bdbd98740dd143d" kindref="member">consecutive_Rejected</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>info_.<ref refid="a01728_1a8c3abc0958c354cc92394dfd12a0317b" kindref="member">acceptProposal</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>info_.<ref refid="a01728_1af3d423f3f05e0bdd445e2b9de7dc9daf" kindref="member">accstr</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;REJ&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(info_.<ref refid="a01728_1ae1f58001cb449db18bdbd98740dd143d" kindref="member">consecutive_Rejected</ref><sp/>&gt;=<sp/>5)</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>innerInfo_.<ref refid="a01652_1a8e52ebafb750281e8b3f00cb698bd3dd" kindref="member">Delta</ref><sp/>/=<sp/>2;</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>innerInfo_.<ref refid="a01652_1a8e52ebafb750281e8b3f00cb698bd3dd" kindref="member">Delta</ref><sp/>=<sp/>std::min(innerInfo_.<ref refid="a01652_1a8e52ebafb750281e8b3f00cb698bd3dd" kindref="member">Delta</ref>,<sp/>stats_.<ref refid="a01732_1a178607b87a8d27eb7b02bb22dc0d2c63" kindref="member">etaNorm</ref><sp/>/<sp/>2.0);</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++info_.<ref refid="a01728_1ae1f58001cb449db18bdbd98740dd143d" kindref="member">consecutive_Rejected</ref>;</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stats_.<ref refid="a01732_1a79ff262003d1f3ff65ef2877aca8df0f" kindref="member">outerIter</ref>++;</highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(settings_.<ref refid="a01716_1a3b6b5fd328830b37cf47a8c3b485eb3e" kindref="member">verbosity</ref><sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logState();</highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>info_.<ref refid="a01728_1a84be03aa6ebbd80ab2e6fac5a78aacd3" kindref="member">randomPredictionString</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(info_.<ref refid="a01728_1a8c3abc0958c354cc92394dfd12a0317b" kindref="member">acceptProposal</ref>)<sp/>{</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stats_.<ref refid="a01732_1a43b868b19908b5435f1e2f18fb1d7625" kindref="member">energy</ref><sp/>=<sp/>stats_.<ref refid="a01732_1a3a03ce164638213312bece9e8b54fdcd" kindref="member">energyProposal</ref>;</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nonLinearOperator_.updateAll();</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xOld_<sp/>=<sp/>x;</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="a01880_1a4bce3750aa7d52aff9baf122a54e16b5" kindref="member">notify</ref>(<ref refid="a00378_1gga662b2b6a80547adf4b9ce8b30d87fab5a07a63a77745ab72a7e89fb22a8bcfd78" kindref="member">NonLinearSolverMessages::CORRECTIONNORM_UPDATED</ref>,<sp/>stats_.<ref refid="a01732_1a178607b87a8d27eb7b02bb22dc0d2c63" kindref="member">etaNorm</ref>);</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="a01880_1a4bce3750aa7d52aff9baf122a54e16b5" kindref="member">notify</ref>(<ref refid="a00378_1gga662b2b6a80547adf4b9ce8b30d87fab5a721c68980ba6c47122945477a56d7a14" kindref="member">NonLinearSolverMessages::RESIDUALNORM_UPDATED</ref>,<sp/>stats_.<ref refid="a01732_1a58ec024d2233720f0bf164b8b21a6626" kindref="member">gradNorm</ref>);</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="a01880_1a4bce3750aa7d52aff9baf122a54e16b5" kindref="member">notify</ref>(<ref refid="a00378_1gga662b2b6a80547adf4b9ce8b30d87fab5a0d30d757bf062e88728ebe7f8e2b2577" kindref="member">NonLinearSolverMessages::SOLUTION_CHANGED</ref>);</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>xOld_;</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eta_.setZero();</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nonLinearOperator_.updateAll();</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stats_.<ref refid="a01732_1a58ec024d2233720f0bf164b8b21a6626" kindref="member">gradNorm</ref><sp/>=<sp/>gradient().norm();</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="a01880_1a4bce3750aa7d52aff9baf122a54e16b5" kindref="member">notify</ref>(<ref refid="a00378_1gga662b2b6a80547adf4b9ce8b30d87fab5a073d71a89cce6d4b9775987fdbb22815" kindref="member">NonLinearSolverMessages::ITERATION_ENDED</ref>);</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/>spdlog::info(</highlight><highlight class="stringliteral">&quot;{}&quot;</highlight><highlight class="normal">,<sp/>info_.<ref refid="a01728_1a8df37485a1fdbbce8d153a8fadd537bf" kindref="member">reasonString</ref>);</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/>spdlog::info(</highlight><highlight class="stringliteral">&quot;Total<sp/>iterations:<sp/>{}<sp/>Total<sp/>CG<sp/>Iterations:<sp/>{}&quot;</highlight><highlight class="normal">,<sp/>stats_.<ref refid="a01732_1a79ff262003d1f3ff65ef2877aca8df0f" kindref="member">outerIter</ref>,<sp/>stats_.<ref refid="a01732_1ac5053b65db9ceae8340aaebe952c7792" kindref="member">innerIterSum</ref>);</highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/>solverInformation.success<sp/>=</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(info_.<ref refid="a01728_1a68f203529fcd8a947fd49330a83d42b2" kindref="member">stop</ref><sp/>==<sp/><ref refid="a00384_1abd5d0cf356d1ae81f6ee827b0f47c674ad1c6a6016de417acc66b5ac44a1fdca3" kindref="member">StopReason::correctionNormTolReached</ref>)<sp/>or<sp/>(info_.<ref refid="a01728_1a68f203529fcd8a947fd49330a83d42b2" kindref="member">stop</ref><sp/>==<sp/><ref refid="a00384_1abd5d0cf356d1ae81f6ee827b0f47c674a0c4f44592a7ae85baf42cb3fb4a5a3d1" kindref="member">StopReason::gradientNormTolReached</ref>);</highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/>solverInformation.iterations<sp/><sp/><sp/>=<sp/>stats_.<ref refid="a01732_1a79ff262003d1f3ff65ef2877aca8df0f" kindref="member">outerIter</ref>;</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/>solverInformation.residualNorm<sp/>=<sp/>stats_.<ref refid="a01732_1a58ec024d2233720f0bf164b8b21a6626" kindref="member">gradNorm</ref>;</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(solverInformation.success)</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="a01880_1a4bce3750aa7d52aff9baf122a54e16b5" kindref="member">notify</ref>(<ref refid="a00378_1gga662b2b6a80547adf4b9ce8b30d87fab5a15380ac35d47cdbcbd64aada4bc21931" kindref="member">NonLinearSolverMessages::FINISHED_SUCESSFULLY</ref>,<sp/>solverInformation.iterations);</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>solverInformation;</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="411" refid="a01724_1a58d156c1eb6c5ac3abee28d14beadc2a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/><ref refid="a01724_1a58d156c1eb6c5ac3abee28d14beadc2a" kindref="member">nonLinearOperator</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nonLinearOperator_;<sp/>}</highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>logState()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/>spdlog::info(</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;{:&gt;3s}<sp/>{:&gt;3s}<sp/>{:&gt;6d}<sp/>{:&gt;9d}<sp/><sp/>{:&gt;6.2f}<sp/><sp/>{:&gt;9.2e}<sp/><sp/>{:&gt;9.2e}<sp/><sp/>{:&gt;11.2e}<sp/><sp/>{:&gt;9.2e}<sp/><sp/>{:&gt;9.2e}<sp/><sp/>{:&gt;11.2e}<sp/><sp/><sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;{:&lt;73}&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>info_.<ref refid="a01728_1af3d423f3f05e0bdd445e2b9de7dc9daf" kindref="member">accstr</ref>,<sp/>info_.<ref refid="a01728_1ae987404091035ade31e839e9f00b7cbd" kindref="member">trstr</ref>,<sp/>stats_.<ref refid="a01732_1a79ff262003d1f3ff65ef2877aca8df0f" kindref="member">outerIter</ref>,<sp/>innerInfo_.<ref refid="a01652_1aea7d60a8e86f8c8a17251b1da948ea68" kindref="member">numInnerIter</ref>,<sp/>stats_.<ref refid="a01732_1a1111f89e925a512bd145b50a8f25c2be" kindref="member">rho</ref>,<sp/>stats_.<ref refid="a01732_1a43b868b19908b5435f1e2f18fb1d7625" kindref="member">energy</ref>,</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stats_.<ref refid="a01732_1a3a03ce164638213312bece9e8b54fdcd" kindref="member">energyProposal</ref>,<sp/>stats_.<ref refid="a01732_1a3a03ce164638213312bece9e8b54fdcd" kindref="member">energyProposal</ref><sp/>-<sp/>stats_.<ref refid="a01732_1a43b868b19908b5435f1e2f18fb1d7625" kindref="member">energy</ref>,<sp/>stats_.<ref refid="a01732_1a58ec024d2233720f0bf164b8b21a6626" kindref="member">gradNorm</ref>,<sp/>innerInfo_.<ref refid="a01652_1a8e52ebafb750281e8b3f00cb698bd3dd" kindref="member">Delta</ref>,<sp/>stats_.<ref refid="a01732_1a178607b87a8d27eb7b02bb22dc0d2c63" kindref="member">etaNorm</ref>,</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>info_.<ref refid="a01728_1af34cb5bb79e983db99b959d871afd353" kindref="member">stopReasonString</ref><sp/>+<sp/>info_.<ref refid="a01728_1a3947b27f29bf44beb7f3f19e91c344f9" kindref="member">cauchystr</ref><sp/>+<sp/>info_.<ref refid="a01728_1a84be03aa6ebbd80ab2e6fac5a78aacd3" kindref="member">randomPredictionString</ref>);</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>logFinalState()<sp/>{</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/>spdlog::info(</highlight><highlight class="stringliteral">&quot;{:&gt;3s}<sp/>{:&gt;3s}<sp/>{:&gt;6d}<sp/>{:&gt;9d}<sp/><sp/>{:<sp/>^6}<sp/><sp/>{:<sp/>^9}<sp/><sp/>{:<sp/>^9}<sp/><sp/>{:<sp/>^11}<sp/><sp/>{:&gt;9.2e}<sp/><sp/>{:<sp/>^9}<sp/><sp/>{:<sp/>^11}<sp/><sp/><sp/>{:&lt;73}&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>info_.<ref refid="a01728_1af3d423f3f05e0bdd445e2b9de7dc9daf" kindref="member">accstr</ref>,<sp/>info_.<ref refid="a01728_1ae987404091035ade31e839e9f00b7cbd" kindref="member">trstr</ref>,<sp/>stats_.<ref refid="a01732_1a79ff262003d1f3ff65ef2877aca8df0f" kindref="member">outerIter</ref>,<sp/>innerInfo_.<ref refid="a01652_1aea7d60a8e86f8c8a17251b1da948ea68" kindref="member">numInnerIter</ref>,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stats_.<ref refid="a01732_1a58ec024d2233720f0bf164b8b21a6626" kindref="member">gradNorm</ref>,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">,<sp/>info_.<ref refid="a01728_1af34cb5bb79e983db99b959d871afd353" kindref="member">stopReasonString</ref><sp/>+<sp/>info_.<ref refid="a01728_1a3947b27f29bf44beb7f3f19e91c344f9" kindref="member">cauchystr</ref><sp/>+<sp/>info_.<ref refid="a01728_1a84be03aa6ebbd80ab2e6fac5a78aacd3" kindref="member">randomPredictionString</ref>);</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>energy()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="a01724_1a58d156c1eb6c5ac3abee28d14beadc2a" kindref="member">nonLinearOperator</ref>().value();<sp/>}</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>gradient()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="a01724_1a58d156c1eb6c5ac3abee28d14beadc2a" kindref="member">nonLinearOperator</ref>().derivative();<sp/>}</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>hessian()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="a01724_1a58d156c1eb6c5ac3abee28d14beadc2a" kindref="member">nonLinearOperator</ref>().secondDerivative();<sp/>}</highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>stoppingCriterion()<sp/>{</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/>std::ostringstream<sp/>stream;</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stats_.<ref refid="a01732_1a58ec024d2233720f0bf164b8b21a6626" kindref="member">gradNorm</ref><sp/>&lt;<sp/>settings_.<ref refid="a01716_1a1cc69f38c3569c63cb4bf86a39a16050" kindref="member">grad_tol</ref><sp/>&amp;&amp;<sp/>stats_.<ref refid="a01732_1a79ff262003d1f3ff65ef2877aca8df0f" kindref="member">outerIter</ref><sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>logFinalState();</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>spdlog::info(</highlight><highlight class="stringliteral">&quot;CONVERGENCE:<sp/><sp/>Energy:<sp/>{:1.16e}<sp/><sp/><sp/><sp/>norm(gradient):<sp/>{:1.16e}&quot;</highlight><highlight class="normal">,<sp/><ref refid="a01724_1a58d156c1eb6c5ac3abee28d14beadc2a" kindref="member">nonLinearOperator</ref>().value(),</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stats_.<ref refid="a01732_1a58ec024d2233720f0bf164b8b21a6626" kindref="member">gradNorm</ref>);</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stream<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Gradient<sp/>norm<sp/>tolerance<sp/>reached;<sp/>options.tolerance<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>settings_.<ref refid="a01716_1a1cc69f38c3569c63cb4bf86a39a16050" kindref="member">grad_tol</ref>;</highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>info_.<ref refid="a01728_1a8df37485a1fdbbce8d153a8fadd537bf" kindref="member">reasonString</ref><sp/>=<sp/>stream.str();</highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>info_.<ref refid="a01728_1a68f203529fcd8a947fd49330a83d42b2" kindref="member">stop</ref><sp/>=<sp/><ref refid="a00384_1abd5d0cf356d1ae81f6ee827b0f47c674a0c4f44592a7ae85baf42cb3fb4a5a3d1" kindref="member">StopReason::gradientNormTolReached</ref>;</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stats_.<ref refid="a01732_1a178607b87a8d27eb7b02bb22dc0d2c63" kindref="member">etaNorm</ref><sp/>&lt;<sp/>settings_.<ref refid="a01716_1ab598fd07116bda4ec7ff4ec10ad771bb" kindref="member">corr_tol</ref><sp/>&amp;&amp;<sp/>stats_.<ref refid="a01732_1a79ff262003d1f3ff65ef2877aca8df0f" kindref="member">outerIter</ref><sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>logFinalState();</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>spdlog::info(</highlight><highlight class="stringliteral">&quot;CONVERGENCE:<sp/><sp/>Energy:<sp/>{:1.16e}<sp/><sp/><sp/><sp/>norm(correction):<sp/>{:1.16e}&quot;</highlight><highlight class="normal">,<sp/><ref refid="a01724_1a58d156c1eb6c5ac3abee28d14beadc2a" kindref="member">nonLinearOperator</ref>().value(),</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stats_.<ref refid="a01732_1a178607b87a8d27eb7b02bb22dc0d2c63" kindref="member">etaNorm</ref>);</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stream<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Displacement<sp/>norm<sp/>tolerance<sp/>reached;<sp/><sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>settings_.<ref refid="a01716_1ab598fd07116bda4ec7ff4ec10ad771bb" kindref="member">corr_tol</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>info_.<ref refid="a01728_1a8df37485a1fdbbce8d153a8fadd537bf" kindref="member">reasonString</ref><sp/>=<sp/>stream.str();</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>info_.<ref refid="a01728_1a68f203529fcd8a947fd49330a83d42b2" kindref="member">stop</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="a00384_1abd5d0cf356d1ae81f6ee827b0f47c674ad1c6a6016de417acc66b5ac44a1fdca3" kindref="member">StopReason::correctionNormTolReached</ref>;</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stats_.<ref refid="a01732_1ab3cab6865c16d06ec81b5db14b0dc5e2" kindref="member">time</ref><sp/>&gt;=<sp/>settings_.<ref refid="a01716_1a65731eb979e7677f54722743edebc4c7" kindref="member">maxtime</ref>)<sp/>{</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>logFinalState();</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stream<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Max<sp/>time<sp/>exceeded;<sp/>options.maxtime<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>settings_.<ref refid="a01716_1a65731eb979e7677f54722743edebc4c7" kindref="member">maxtime</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>info_.<ref refid="a01728_1a8df37485a1fdbbce8d153a8fadd537bf" kindref="member">reasonString</ref><sp/>=<sp/>stream.str();</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>info_.<ref refid="a01728_1a68f203529fcd8a947fd49330a83d42b2" kindref="member">stop</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="a00384_1abd5d0cf356d1ae81f6ee827b0f47c674ad205528fe2a4412b89626ff7eee936f9" kindref="member">StopReason::maximumTimeReached</ref>;</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stats_.<ref refid="a01732_1a79ff262003d1f3ff65ef2877aca8df0f" kindref="member">outerIter</ref><sp/>&gt;=<sp/>settings_.<ref refid="a01716_1ac496e08f6fc420b641d2e838d4adbb53" kindref="member">maxIter</ref>)<sp/>{</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>logFinalState();</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stream<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Max<sp/>iteration<sp/>count<sp/>reached;<sp/>options.maxiter<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>settings_.<ref refid="a01716_1ac496e08f6fc420b641d2e838d4adbb53" kindref="member">maxIter</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>info_.<ref refid="a01728_1a8df37485a1fdbbce8d153a8fadd537bf" kindref="member">reasonString</ref><sp/>=<sp/>stream.str();</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>info_.<ref refid="a01728_1a68f203529fcd8a947fd49330a83d42b2" kindref="member">stop</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="a00384_1abd5d0cf356d1ae81f6ee827b0f47c674a5ed07f9461b91dd3a6ba961a0ed5c8fe" kindref="member">StopReason::maximumIterationsReached</ref>;</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>solveInnerProblem()<sp/>{</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/>truncatedConjugateGradient_.<ref refid="a01656_1abca8364ed9fadd6e08510b46395dbf22" kindref="member">setInfo</ref>(innerInfo_);</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>attempts<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/>truncatedConjugateGradient_.factorize(hessian());</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>preconditioner<sp/>is<sp/>IncompleteCholesky<sp/>the<sp/>factorization<sp/>may<sp/>fail<sp/>if<sp/>we<sp/>have<sp/>negative<sp/>diagonal<sp/>entries<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>initial<sp/>shift<sp/>is<sp/>too<sp/>small.<sp/>Therefore,<sp/>if<sp/>the<sp/>factorization<sp/>fails<sp/>we<sp/>increase<sp/>the<sp/>initial<sp/>shift<sp/>by<sp/>a<sp/>factor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>of<sp/>5.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>(preConditioner<sp/>==<sp/><ref refid="a00384_1ace28d4868cfc647491f7938f04ef6c66a7a24b184ba388b8e327feb98dbe168ff" kindref="member">PreConditioner::IncompleteCholesky</ref>)<sp/>{</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(truncatedConjugateGradient_.info()<sp/>!=<sp/>Eigen::Success)<sp/>{</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>choleskyInitialShift_<sp/>*=<sp/>5;</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>truncatedConjugateGradient_.preconditioner().setInitialShift(choleskyInitialShift_);</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>truncatedConjugateGradient_.factorize(hessian());</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(attempts<sp/>&gt;<sp/>5)</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DUNE_THROW(Dune::MathError,<sp/></highlight><highlight class="stringliteral">&quot;Factorization<sp/>of<sp/>preconditioner<sp/>failed!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++attempts;</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(truncatedConjugateGradient_.info()<sp/>==<sp/>Eigen::Success)</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>choleskyInitialShift_<sp/>=<sp/>1e-3;</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/>eta_<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>truncatedConjugateGradient_.solveWithGuess(-gradient(),<sp/>eta_);</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/>innerInfo_<sp/>=<sp/>truncatedConjugateGradient_.<ref refid="a01656_1a81a7f70d30cfbf103d6ac946ebc2a598" kindref="member">getInfo</ref>();</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="499"><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/>NLO<sp/>nonLinearOperator_;</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><ref refid="a01724_1a7f187a825b0a65e7d9ab1c21578da1cf" kindref="member">UpdateFunction</ref><sp/>updateFunction_;</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>NLO::template<sp/>ParameterValue&lt;0&gt;<sp/>xOld_;</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><ref refid="a01724_1a1071054a0b75f9fbe27832ea672792b0" kindref="member">CorrectionType</ref><sp/>eta_;</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><ref refid="a01724_1a1071054a0b75f9fbe27832ea672792b0" kindref="member">CorrectionType</ref><sp/>Heta_;</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><ref refid="a01724_1a4335951e9f140f89f008e020cb32d537" kindref="member">Settings</ref><sp/>settings_;</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/>AlgoInfo<sp/>info_;</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>choleskyInitialShift_<sp/>=<sp/>1e-3;</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><ref refid="a01652" kindref="compound">Eigen::TCGInfo&lt;double&gt;</ref><sp/>innerInfo_;</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/>Stats<sp/>stats_;</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>eps_<sp/>=<sp/>0.0001220703125;<sp/></highlight><highlight class="comment">//<sp/>0.0001220703125<sp/>is<sp/>sqrt(sqrt(maschine-precision))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/>std::array&lt;std::string,<sp/>6&gt;<sp/>tcg_stop_reason_{</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;negative<sp/>curvature&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;exceeded<sp/>trust<sp/>region&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;reached<sp/>target<sp/>residual-kappa<sp/>(linear)&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;reached<sp/>target<sp/>residual-theta<sp/>(superlinear)&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;maximum<sp/>inner<sp/>iterations&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;model<sp/>increased&quot;</highlight><highlight class="normal">}</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="515"><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">PreConditionerType<sp/>=</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::conditional_t&lt;preConditioner<sp/>==<sp/><ref refid="a00384_1ace28d4868cfc647491f7938f04ef6c66a7a93111b975ec3c3824eab230f3ec608" kindref="member">PreConditioner::IdentityPreconditioner</ref>,<sp/>Eigen::IdentityPreconditioner,</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::conditional_t&lt;preConditioner<sp/>==<sp/><ref refid="a00384_1ace28d4868cfc647491f7938f04ef6c66a3c6b5404db3b7bf45a0302f376a53afc" kindref="member">PreConditioner::DiagonalPreconditioner</ref>,</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Eigen::DiagonalPreconditioner&lt;ScalarType&gt;,</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Eigen::IncompleteCholesky&lt;ScalarType&gt;&gt;&gt;;</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><ref refid="a01656" kindref="compound">Eigen::TruncatedConjugateGradient&lt;MatrixType, Eigen::Lower | Eigen::Upper, PreConditionerType&gt;</ref></highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>truncatedConjugateGradient_;</highlight></codeline>
<codeline lineno="523"><highlight class="normal">};</highlight></codeline>
<codeline lineno="524"><highlight class="normal"></highlight></codeline>
<codeline lineno="535"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>NLO,<sp/><ref refid="a00384_1ace28d4868cfc647491f7938f04ef6c66" kindref="member">PreConditioner</ref><sp/>preConditioner<sp/>=<sp/><ref refid="a00384_1ace28d4868cfc647491f7938f04ef6c66a7a24b184ba388b8e327feb98dbe168ff" kindref="member">PreConditioner::IncompleteCholesky</ref>,</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>UF<sp/>=<sp/>utils::UpdateDefault&gt;</highlight></codeline>
<codeline lineno="537" refid="a00384_1a547326eb09552d3d1fed0830d0e2d269" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="a00384_1a547326eb09552d3d1fed0830d0e2d269" kindref="member">makeTrustRegion</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>NLO&amp;<sp/>nonLinearOperator,<sp/>UF&amp;&amp;<sp/>updateFunction<sp/>=<sp/>{})<sp/>{</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::make_shared&lt;TrustRegion&lt;NLO,<sp/>preConditioner,<sp/>UF&gt;&gt;(nonLinearOperator,<sp/>updateFunction);</highlight></codeline>
<codeline lineno="539"><highlight class="normal">}</highlight></codeline>
<codeline lineno="540"><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>NLO,<sp/><ref refid="a00384_1ace28d4868cfc647491f7938f04ef6c66" kindref="member">PreConditioner</ref><sp/>preConditioner<sp/>=<sp/><ref refid="a00384_1ace28d4868cfc647491f7938f04ef6c66a7a24b184ba388b8e327feb98dbe168ff" kindref="member">PreConditioner::IncompleteCholesky</ref>,</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>UF2<sp/>=<sp/>utils::UpdateDefault&gt;</highlight></codeline>
<codeline lineno="543" refid="a00384_1a8d76e20d6a74e339f85d98c9854ee89c" refkind="member"><highlight class="normal"><ref refid="a00384_1a8d76e20d6a74e339f85d98c9854ee89c" kindref="member">TrustRegion</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>NLO&amp;<sp/>nonLinearOperator,</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UF2&amp;&amp;<sp/>updateFunction<sp/>=<sp/>{})<sp/>-&gt;<sp/><ref refid="a00384_1a8d76e20d6a74e339f85d98c9854ee89c" kindref="member">TrustRegion</ref>&lt;NLO,<sp/>preConditioner,<sp/>std::remove_cvref_t&lt;UF2&gt;&gt;;</highlight></codeline>
<codeline lineno="545"><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>Ikarus</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/__w/ikarus/ikarus/repo/ikarus/solver/nonlinearsolver/trustregion.hh"/>
  </compounddef>
</doxygen>
