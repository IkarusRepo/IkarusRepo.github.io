<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="a00158" kind="file" language="C++">
    <compoundname>newtonraphson.hh</compoundname>
    <includes refid="a00146" local="no">ikarus/solver/linearsolver/linearsolver.hh</includes>
    <includes refid="a00152" local="no">ikarus/solver/nonlinearsolver/solverinfos.hh</includes>
    <includes refid="a00047" local="no">ikarus/utils/concepts.hh</includes>
    <includes refid="a00065" local="no">ikarus/utils/defaultfunctions.hh</includes>
    <includes refid="a00023" local="no">ikarus/utils/linearalgebrahelper.hh</includes>
    <includes refid="a00122" local="no">ikarus/utils/observer/observer.hh</includes>
    <includes refid="a00131" local="no">ikarus/utils/observer/observermessages.hh</includes>
    <includedby refid="a00254" local="no">vanishingstrain.hh</includedby>
    <includedby refid="a00245" local="no">vanishingstress.hh</includedby>
    <incdepgraph>
      <node id="20">
        <label>ikarus/assembler/dirichletbcenforcement.hh</label>
        <link refid="a00176"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>ikarus/finiteelements/mechanics/materials/tags.hh</label>
        <link refid="a00242"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>ikarus/solver/linearsolver/linearsolver.hh</label>
        <link refid="a00146"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>newtonraphson.hh</label>
        <link refid="a00158"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>ikarus/solver/nonlinearsolver/solverinfos.hh</label>
        <link refid="a00152"/>
      </node>
      <node id="11">
        <label>ikarus/utils/concepts.hh</label>
        <link refid="a00047"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>ikarus/utils/defaultfunctions.hh</label>
        <link refid="a00065"/>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>linearalgebrahelper.hh</label>
        <link refid="a00023"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>ikarus/utils/makeenum.hh</label>
        <link refid="a00005"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>ikarus/utils/observer/observer.hh</label>
        <link refid="a00122"/>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>ikarus/utils/observer/observermessages.hh</label>
        <link refid="a00131"/>
      </node>
      <node id="22">
        <label>ikarus/utils/traits.hh</label>
        <link refid="a00011"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>Eigen/Core</label>
      </node>
      <node id="17">
        <label>Eigen/Dense</label>
      </node>
      <node id="18">
        <label>Eigen/Sparse</label>
      </node>
      <node id="8">
        <label>Eigen/SparseCore</label>
      </node>
      <node id="19">
        <label>autodiff/forward/dual/dual.hpp</label>
      </node>
      <node id="12">
        <label>concepts</label>
      </node>
      <node id="6">
        <label>dune/common/exceptions.hh</label>
      </node>
      <node id="25">
        <label>dune/common/hybridutilities.hh</label>
      </node>
      <node id="31">
        <label>dune/common/tuplevector.hh</label>
      </node>
      <node id="15">
        <label>dune/functions/functionspacebases/basistags.hh</label>
      </node>
      <node id="16">
        <label>dune/functions/functionspacebases/lagrangebasis.hh</label>
      </node>
      <node id="32">
        <label>dune/istl/bvector.hh</label>
      </node>
      <node id="23">
        <label>functional</label>
      </node>
      <node id="28">
        <label>iosfwd</label>
      </node>
      <node id="34">
        <label>map</label>
      </node>
      <node id="3">
        <label>memory</label>
      </node>
      <node id="29">
        <label>random</label>
      </node>
      <node id="30">
        <label>ranges</label>
      </node>
      <node id="24">
        <label>tuple</label>
      </node>
      <node id="4">
        <label>type_traits</label>
      </node>
      <node id="13">
        <label>utility</label>
      </node>
      <node id="5">
        <label>variant</label>
      </node>
      <node id="14">
        <label>vector</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="4">
        <label>linearelastic.hh</label>
        <link refid="a00284"/>
      </node>
      <node id="3">
        <label>materials.hh</label>
        <link refid="a02861"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>vanishingstrain.hh</label>
        <link refid="a00254"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>vanishingstress.hh</label>
        <link refid="a00245"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>resultevaluators.hh</label>
        <link refid="a00326"/>
      </node>
      <node id="5">
        <label>material.hh</label>
        <link refid="a00218"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>newtonraphson.hh</label>
        <link refid="a00158"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>_ikarus.cc</label>
        <link refid="a00347"/>
      </node>
      <node id="6">
        <label>materials.hh</label>
        <link refid="a02864"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="a01688" prot="public">Ikarus::NRSettings</innerclass>
    <innerclass refid="a01692" prot="public">Ikarus::NewtonRaphsonConfig</innerclass>
    <innerclass refid="a01684" prot="public">Ikarus::NewtonRaphson</innerclass>
    <innernamespace refid="a00384">Ikarus</innernamespace>
    <briefdescription>
<para>Implementation of the Newton-Raphson method for solving nonlinear equations. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>SPDX-FileCopyrightText:<sp/>2021-2025<sp/>The<sp/>Ikarus<sp/>Developers<sp/>mueller@ibb.uni-stuttgart.de</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>SPDX-License-Identifier:<sp/>LGPL-3.0-or-later</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="a00146" kindref="compound">ikarus/solver/linearsolver/linearsolver.hh</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="a00152" kindref="compound">ikarus/solver/nonlinearsolver/solverinfos.hh</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="a00047" kindref="compound">ikarus/utils/concepts.hh</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="a00065" kindref="compound">ikarus/utils/defaultfunctions.hh</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="a00023" kindref="compound">ikarus/utils/linearalgebrahelper.hh</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="a00122" kindref="compound">ikarus/utils/observer/observer.hh</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="a00131" kindref="compound">ikarus/utils/observer/observermessages.hh</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="a00384" kindref="compound">Ikarus</ref><sp/>{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>NLO,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>LS<sp/>=<sp/>utils::SolverDefault,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>UF<sp/>=<sp/>utils::UpdateDefault&gt;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="a00384_1acff40d61279eba58e16c3889d8c0a5f1" kindref="member">NewtonRaphson</ref>;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24" refid="a01688" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="a01688" kindref="compound">NRSettings</ref></highlight></codeline>
<codeline lineno="25"><highlight class="normal">{</highlight></codeline>
<codeline lineno="26" refid="a01688_1a9b1748ca776438b94dd3ed113d3ee934" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="a01688_1a9b1748ca776438b94dd3ed113d3ee934" kindref="member">tol</ref>{1e-8};</highlight></codeline>
<codeline lineno="27" refid="a01688_1a341fe979201497d2422addde8b9b39c7" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="a01688_1a341fe979201497d2422addde8b9b39c7" kindref="member">maxIter</ref>{20};</highlight></codeline>
<codeline lineno="28" refid="a01688_1a97d470d26a862189812ddceae07e2545" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="a01688_1a97d470d26a862189812ddceae07e2545" kindref="member">minIter</ref>{0};</highlight></codeline>
<codeline lineno="29"><highlight class="normal">};</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>LS<sp/>=<sp/>utils::SolverDefault,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>UF<sp/>=<sp/>utils::UpdateDefault&gt;</highlight></codeline>
<codeline lineno="36" refid="a01692" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="a01692" kindref="compound">NewtonRaphsonConfig</ref></highlight></codeline>
<codeline lineno="37"><highlight class="normal">{</highlight></codeline>
<codeline lineno="38" refid="a01692_1a960888b87010ffc7459135a94e96b8cd" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="a01692_1a960888b87010ffc7459135a94e96b8cd" kindref="member">LinearSolver</ref><sp/><sp/><sp/>=<sp/>LS;</highlight></codeline>
<codeline lineno="39" refid="a01692_1ae0c6bbca1a776ac440e8fe2c3965e773" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="a01692_1ae0c6bbca1a776ac440e8fe2c3965e773" kindref="member">UpdateFunction</ref><sp/>=<sp/>UF;</highlight></codeline>
<codeline lineno="40" refid="a01692_1a2abf5470e100045df3fb0fab74efbc25" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="a01688" kindref="compound">NRSettings</ref><sp/><ref refid="a01692_1a2abf5470e100045df3fb0fab74efbc25" kindref="member">parameters</ref>;</highlight></codeline>
<codeline lineno="41" refid="a01692_1ab2e175305d46657b47f19e85afd78b51" refkind="member"><highlight class="normal"><sp/><sp/>LS<sp/><ref refid="a01692_1ab2e175305d46657b47f19e85afd78b51" kindref="member">linearSolver</ref>;</highlight></codeline>
<codeline lineno="42" refid="a01692_1a5d2e67e3123be471cbc31bd35d49ebf5" refkind="member"><highlight class="normal"><sp/><sp/>UF<sp/><ref refid="a01692_1a5d2e67e3123be471cbc31bd35d49ebf5" kindref="member">updateFunction</ref>;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>UF2&gt;</highlight></codeline>
<codeline lineno="45" refid="a01692_1ae6448adb490060d1e78e579ac66411fb" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="a01692_1ae6448adb490060d1e78e579ac66411fb" kindref="member">rebindUpdateFunction</ref>(UF2&amp;&amp;<sp/><ref refid="a01692_1a5d2e67e3123be471cbc31bd35d49ebf5" kindref="member">updateFunction</ref>)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="a01692" kindref="compound">NewtonRaphsonConfig&lt;LS, UF2&gt;</ref><sp/>settings{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.<ref refid="a01692_1a2abf5470e100045df3fb0fab74efbc25" kindref="member">parameters</ref><sp/>=<sp/><ref refid="a01692_1a2abf5470e100045df3fb0fab74efbc25" kindref="member">parameters</ref>,<sp/>.linearSolver<sp/>=<sp/><ref refid="a01692_1ab2e175305d46657b47f19e85afd78b51" kindref="member">linearSolver</ref>,<sp/>.updateFunction<sp/>=<sp/>std::forward&lt;UF2&gt;(<ref refid="a01692_1a5d2e67e3123be471cbc31bd35d49ebf5" kindref="member">updateFunction</ref>)};</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>settings;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>NLO&gt;</highlight></codeline>
<codeline lineno="52" refid="a01692_1a82ec3a359f0580fdc3baa5f95a1df295" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="a01684" kindref="compound">Solver</ref><sp/>=<sp/><ref refid="a01684" kindref="compound">NewtonRaphson&lt;NLO, LS, UF&gt;</ref>;</highlight></codeline>
<codeline lineno="53"><highlight class="normal">};</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>NLO,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>NRConfig&gt;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="keyword">requires</highlight><highlight class="normal"><sp/>traits::isSpecialization&lt;NewtonRaphsonConfig,<sp/>std::remove_cvref_t&lt;NRConfig&gt;&gt;::value</highlight></codeline>
<codeline lineno="65" refid="a00384_1a66b45c139b5d57965ada53d92d8f93ce" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="a00384_1a66b45c139b5d57965ada53d92d8f93ce" kindref="member">createNonlinearSolver</ref>(NRConfig&amp;&amp;<sp/>config,<sp/>NLO&amp;&amp;<sp/>nonLinearOperator)<sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">LS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="a00384_1a2afda25e777ed3a794da319ba535b87b" kindref="member">std::remove_cvref_t&lt;NRConfig&gt;::LinearSolver</ref>;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">UF<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>std::remove_cvref_t&lt;NRConfig&gt;::UpdateFunction;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>solverFactory<sp/>=<sp/>[]&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">NLO2,<sp/>class<sp/>LS2,<sp/>class<sp/>UF2&gt;(NLO2&amp;&amp;<sp/>nlo2,<sp/>LS2&amp;&amp;<sp/>ls,<sp/>UF2&amp;&amp;<sp/>uf)<sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::make_shared&lt;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="a01684" kindref="compound">NewtonRaphson&lt;std::remove_cvref_t&lt;NLO2&gt;</ref>,<sp/>std::remove_cvref_t&lt;LS2&gt;,<sp/>std::remove_cvref_t&lt;UF2&gt;&gt;&gt;(</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nlo2,<sp/>std::forward&lt;LS2&gt;(ls),<sp/>std::forward&lt;UF2&gt;(uf));</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>(std::remove_cvref_t&lt;NLO&gt;::numberOfFunctions<sp/>==<sp/>3)<sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>solver<sp/>=</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>solverFactory(nonLinearOperator.template<sp/>subOperator&lt;1,<sp/>2&gt;(),<sp/>std::forward&lt;NRConfig&gt;(config).linearSolver,</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::forward&lt;NRConfig&gt;(config).updateFunction);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>solver-&gt;setup(config.parameters);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>solver;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_assert</highlight><highlight class="normal">(std::remove_cvref_t&lt;NLO&gt;::numberOfFunctions<sp/>&gt;<sp/>1,</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;The<sp/>number<sp/>of<sp/>derivatives<sp/>in<sp/>the<sp/>nonlinear<sp/>operator<sp/>have<sp/>to<sp/>be<sp/>more<sp/>than<sp/>1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>solver<sp/>=<sp/>solverFactory(nonLinearOperator,<sp/>std::forward&lt;NRConfig&gt;(config).linearSolver,</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::forward&lt;NRConfig&gt;(config).updateFunction);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>solver-&gt;setup(std::forward&lt;NRConfig&gt;(config).parameters);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>solver;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="90"><highlight class="normal">}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>NLO,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>LS,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>UF&gt;</highlight></codeline>
<codeline lineno="102" refid="a01684" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="a01684" kindref="compound">NewtonRaphson</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="a01880" kindref="compound">IObservable</ref>&lt;NonLinearSolverMessages&gt;</highlight></codeline>
<codeline lineno="103"><highlight class="normal">{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="105" refid="a01684_1a36870dfdc815e9efb1edf170829d6345" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="a01688" kindref="compound">Settings</ref><sp/>=<sp/><ref refid="a01688" kindref="compound">NRSettings</ref>;</highlight></codeline>
<codeline lineno="107" refid="a01684_1ad3561144041515b7c3fd8cf5d8f10a94" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="a01684_1ad3561144041515b7c3fd8cf5d8f10a94" kindref="member">isLinearSolver</ref><sp/>=</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="a01955" kindref="compound">Ikarus::Concepts::LinearSolverCheck&lt;LinearSolver, typename NLO::DerivativeType, typename NLO::ValueType&gt;</ref>;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="111" refid="a01684_1aeecb2abbbd2c547db013f45e673b7291" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="a01684_1aeecb2abbbd2c547db013f45e673b7291" kindref="member">ValueType</ref><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>NLO::template<sp/>ParameterValue&lt;0&gt;;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113" refid="a01684_1a3c66f49cc8972a9e93322724be43d6c1" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="a01684_1a3c66f49cc8972a9e93322724be43d6c1" kindref="member">UpdateFunction</ref><sp/><sp/><sp/><sp/>=<sp/>UF;<sp/><sp/></highlight></codeline>
<codeline lineno="114" refid="a01684_1a41064bd40996c2c0a2e5d79dc72543ef" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="a01684_1a41064bd40996c2c0a2e5d79dc72543ef" kindref="member">NonLinearOperator</ref><sp/>=<sp/>NLO;<sp/></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>LS2<sp/>=<sp/>LS,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>UF2<sp/>=<sp/>UF&gt;</highlight></codeline>
<codeline lineno="123" refid="a01684_1a64906c2d67d927744c382ce422d69dfa" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="a01684_1a64906c2d67d927744c382ce422d69dfa" kindref="member">NewtonRaphson</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="a01684_1a41064bd40996c2c0a2e5d79dc72543ef" kindref="member">NonLinearOperator</ref>&amp;<sp/><ref refid="a01684_1ab5a5c4aafcce50ee9c1050b42d2c6c89" kindref="member">nonLinearOperator</ref>,<sp/>LS2&amp;&amp;<sp/>linearSolver<sp/>=<sp/>{},<sp/>UF2&amp;&amp;<sp/>updateFunction<sp/>=<sp/>{})</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>nonLinearOperator_{<ref refid="a01684_1ab5a5c4aafcce50ee9c1050b42d2c6c89" kindref="member">nonLinearOperator</ref>},</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>linearSolver_{std::forward&lt;LS2&gt;(linearSolver)},</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>updateFunction_{std::forward&lt;UF2&gt;(updateFunction)}<sp/>{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>(std::is_same_v&lt;typename<sp/>NonLinearOperator::ValueType,<sp/>Eigen::VectorXd&gt;)</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>correction_.setZero(this-&gt;nonLinearOperator().value().size());</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="135" refid="a01684_1a7f4fa90ee5e8e0eb1122e150d4bcadbb" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="a01684_1a7f4fa90ee5e8e0eb1122e150d4bcadbb" kindref="member">setup</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="a01688" kindref="compound">Settings</ref>&amp;<sp/>settings)<sp/>{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(settings.<ref refid="a01688_1a97d470d26a862189812ddceae07e2545" kindref="member">minIter</ref><sp/>&gt;<sp/>settings.<ref refid="a01688_1a341fe979201497d2422addde8b9b39c7" kindref="member">maxIter</ref>)</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DUNE_THROW(Dune::InvalidStateException,</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Minimum<sp/>number<sp/>of<sp/>iterations<sp/>cannot<sp/>be<sp/>greater<sp/>than<sp/>maximum<sp/>number<sp/>of<sp/>iterations&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>settings_<sp/>=<sp/>settings;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>DOXYGEN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">NoPredictor</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>SolutionType<sp/>=<sp/>NoPredictor&gt;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">requires</highlight><highlight class="normal"><sp/>std::is_same_v&lt;SolutionType,<sp/>NoPredictor&gt;<sp/>||</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::is_convertible_v&lt;SolutionType,<sp/>std::remove_cvref_t&lt;typename<sp/>NonLinearOperator::ValueType&gt;&gt;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/>[[nodiscard(</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;The<sp/>solve<sp/>method<sp/>returns<sp/>information<sp/>of<sp/>the<sp/>solution<sp/>process.<sp/>You<sp/>should<sp/>store<sp/>this<sp/>information<sp/>and<sp/>check<sp/>if<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;it<sp/>was<sp/>successful&quot;</highlight><highlight class="normal">)]]<sp/><ref refid="a01712" kindref="compound">Ikarus::NonLinearSolverInformation</ref></highlight></codeline>
<codeline lineno="158" refid="a01684_1a1670320a70ab0d6bd33e320811591bbe" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="a01684_1a1670320a70ab0d6bd33e320811591bbe" kindref="member">solve</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>SolutionType&amp;<sp/>dxPredictor<sp/>=<sp/>NoPredictor{})<sp/>{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="a01880_1a4bce3750aa7d52aff9baf122a54e16b5" kindref="member">notify</ref>(<ref refid="a00378_1gga662b2b6a80547adf4b9ce8b30d87fab5afaee4ca3c30ee18148ce3ada37466498" kindref="member">NonLinearSolverMessages::INIT</ref>);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="a01712" kindref="compound">Ikarus::NonLinearSolverInformation</ref><sp/>solverInformation;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>solverInformation.<ref refid="a01712_1acb65d72d7b2291a9b0d958ce0e4e0887" kindref="member">success</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>x<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="a01684_1ab5a5c4aafcce50ee9c1050b42d2c6c89" kindref="member">nonLinearOperator</ref>().firstParameter();</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>(not<sp/>std::is_same_v&lt;SolutionType,<sp/>NoPredictor&gt;)</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>updateFunction_(x,<sp/>dxPredictor);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="a01684_1ab5a5c4aafcce50ee9c1050b42d2c6c89" kindref="member">nonLinearOperator</ref>().updateAll();</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>rx<sp/>=<sp/><ref refid="a01684_1ab5a5c4aafcce50ee9c1050b42d2c6c89" kindref="member">nonLinearOperator</ref>().value();</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>Ax<sp/>=<sp/><ref refid="a01684_1ab5a5c4aafcce50ee9c1050b42d2c6c89" kindref="member">nonLinearOperator</ref>().derivative();</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>rNorm<sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="a00379_1ga0ffc0c74dbd9aeee3e53b199a21b828c" kindref="member">norm</ref>(rx);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">decltype</highlight><highlight class="normal">(rNorm)<sp/>dNorm;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iter{0};</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>(<ref refid="a01684_1ad3561144041515b7c3fd8cf5d8f10a94" kindref="member">isLinearSolver</ref>)</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>linearSolver_.analyzePattern(Ax);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((rNorm<sp/>&gt;<sp/>settings_.<ref refid="a01688_1a9b1748ca776438b94dd3ed113d3ee934" kindref="member">tol</ref><sp/>&amp;&amp;<sp/>iter<sp/>&lt;<sp/>settings_.<ref refid="a01688_1a341fe979201497d2422addde8b9b39c7" kindref="member">maxIter</ref>)<sp/>or<sp/>iter<sp/>&lt;<sp/>settings_.<ref refid="a01688_1a97d470d26a862189812ddceae07e2545" kindref="member">minIter</ref>)<sp/>{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="a01880_1a4bce3750aa7d52aff9baf122a54e16b5" kindref="member">notify</ref>(<ref refid="a00378_1gga662b2b6a80547adf4b9ce8b30d87fab5afdb2cb9832d112cd92fb2cda8879c3b4" kindref="member">NonLinearSolverMessages::ITERATION_STARTED</ref>);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>(<ref refid="a01684_1ad3561144041515b7c3fd8cf5d8f10a94" kindref="member">isLinearSolver</ref>)<sp/>{</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>linearSolver_.factorize(Ax);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>linearSolver_.solve(correction_,<sp/>-rx);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dNorm<sp/>=<sp/>correction_.norm();</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>updateFunction_(x,<sp/>correction_);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>correction_<sp/>=<sp/>-linearSolver_(rx,<sp/>Ax);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dNorm<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="a00379_1ga0ffc0c74dbd9aeee3e53b199a21b828c" kindref="member">norm</ref>(correction_);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>updateFunction_(x,<sp/>correction_);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="a01880_1a4bce3750aa7d52aff9baf122a54e16b5" kindref="member">notify</ref>(<ref refid="a00378_1gga662b2b6a80547adf4b9ce8b30d87fab5a07a63a77745ab72a7e89fb22a8bcfd78" kindref="member">NonLinearSolverMessages::CORRECTIONNORM_UPDATED</ref>,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(dNorm));</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="a01880_1a4bce3750aa7d52aff9baf122a54e16b5" kindref="member">notify</ref>(<ref refid="a00378_1gga662b2b6a80547adf4b9ce8b30d87fab5a0d30d757bf062e88728ebe7f8e2b2577" kindref="member">NonLinearSolverMessages::SOLUTION_CHANGED</ref>);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="a01684_1ab5a5c4aafcce50ee9c1050b42d2c6c89" kindref="member">nonLinearOperator</ref>().updateAll();</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rNorm<sp/>=<sp/><ref refid="a00379_1ga0ffc0c74dbd9aeee3e53b199a21b828c" kindref="member">norm</ref>(rx);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="a01880_1a4bce3750aa7d52aff9baf122a54e16b5" kindref="member">notify</ref>(<ref refid="a00378_1gga662b2b6a80547adf4b9ce8b30d87fab5a721c68980ba6c47122945477a56d7a14" kindref="member">NonLinearSolverMessages::RESIDUALNORM_UPDATED</ref>,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(rNorm));</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="a01880_1a4bce3750aa7d52aff9baf122a54e16b5" kindref="member">notify</ref>(<ref refid="a00378_1gga662b2b6a80547adf4b9ce8b30d87fab5a073d71a89cce6d4b9775987fdbb22815" kindref="member">NonLinearSolverMessages::ITERATION_ENDED</ref>);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++iter;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(iter<sp/>==<sp/>settings_.<ref refid="a01688_1a341fe979201497d2422addde8b9b39c7" kindref="member">maxIter</ref>)</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>solverInformation.<ref refid="a01712_1acb65d72d7b2291a9b0d958ce0e4e0887" kindref="member">success</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>solverInformation.<ref refid="a01712_1a81570cd3d9f6589a4d1ba81211f41b99" kindref="member">iterations</ref><sp/><sp/><sp/><sp/><sp/>=<sp/>iter;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>solverInformation.<ref refid="a01712_1ab09859737734f97734f20624f9f3c934" kindref="member">residualNorm</ref><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(rNorm);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>solverInformation.<ref refid="a01712_1a66f51414779f3e563557157fb688f18b" kindref="member">correctionNorm</ref><sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(dNorm);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(solverInformation.<ref refid="a01712_1acb65d72d7b2291a9b0d958ce0e4e0887" kindref="member">success</ref>)</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="a01880_1a4bce3750aa7d52aff9baf122a54e16b5" kindref="member">notify</ref>(<ref refid="a00378_1gga662b2b6a80547adf4b9ce8b30d87fab5a15380ac35d47cdbcbd64aada4bc21931" kindref="member">NonLinearSolverMessages::FINISHED_SUCESSFULLY</ref>,<sp/>iter);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>solverInformation;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="207" refid="a01684_1ab5a5c4aafcce50ee9c1050b42d2c6c89" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/><ref refid="a01684_1ab5a5c4aafcce50ee9c1050b42d2c6c89" kindref="member">nonLinearOperator</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nonLinearOperator_;<sp/>}</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><ref refid="a01848" kindref="compound">NonLinearOperator</ref><sp/>nonLinearOperator_;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>NonLinearOperator::ValueType<sp/>correction_;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/>LS<sp/>linearSolver_;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><ref refid="a01684_1a3c66f49cc8972a9e93322724be43d6c1" kindref="member">UpdateFunction</ref><sp/>updateFunction_;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><ref refid="a01684_1a36870dfdc815e9efb1edf170829d6345" kindref="member">Settings</ref><sp/>settings_;</highlight></codeline>
<codeline lineno="215"><highlight class="normal">};</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>NLO,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>LS<sp/>=<sp/>utils::SolverDefault,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>UF<sp/>=<sp/>utils::UpdateDefault&gt;</highlight></codeline>
<codeline lineno="228" refid="a00384_1afa463e708cffd14133ff65ffa366e329" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="a00384_1afa463e708cffd14133ff65ffa366e329" kindref="member">makeNewtonRaphson</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>NLO&amp;<sp/>nonLinearOperator,<sp/>LS&amp;&amp;<sp/>linearSolver<sp/>=<sp/>{},<sp/>UF&amp;&amp;<sp/>updateFunction<sp/>=<sp/>{})<sp/>{</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::make_shared&lt;NewtonRaphson&lt;NLO,<sp/>LS,<sp/>UF&gt;&gt;(nonLinearOperator,<sp/>std::forward&lt;LS&gt;(linearSolver),</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::move(updateFunction));</highlight></codeline>
<codeline lineno="231"><highlight class="normal">}</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>NLO,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>LS<sp/>=<sp/>utils::SolverDefault,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>UF<sp/>=<sp/>utils::UpdateDefault&gt;</highlight></codeline>
<codeline lineno="234" refid="a00384_1acff40d61279eba58e16c3889d8c0a5f1" refkind="member"><highlight class="normal"><ref refid="a00384_1acff40d61279eba58e16c3889d8c0a5f1" kindref="member">NewtonRaphson</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>NLO&amp;<sp/>nonLinearOperator,<sp/>LS&amp;&amp;<sp/>linearSolver<sp/>=<sp/>{},</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UF&amp;&amp;<sp/>updateFunction<sp/>=<sp/>{})<sp/>-&gt;<sp/><ref refid="a00384_1acff40d61279eba58e16c3889d8c0a5f1" kindref="member">NewtonRaphson</ref>&lt;NLO,<sp/>std::remove_cvref_t&lt;LS&gt;,<sp/>std::remove_cvref_t&lt;UF&gt;&gt;;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>Ikarus</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/__w/ikarus/ikarus/repo/ikarus/solver/nonlinearsolver/newtonraphson.hh"/>
  </compounddef>
</doxygen>
