<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="a00182" kind="file" language="C++">
    <compoundname>loadcontrol.inl</compoundname>
    <includedby refid="a00191" local="no">loadcontrol.hh</includedby>
    <invincdepgraph>
      <node id="2">
        <label>loadcontrol.hh</label>
        <link refid="a00191"/>
      </node>
      <node id="1">
        <label>loadcontrol.inl</label>
        <link refid="a00182"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innernamespace refid="a00396">Ikarus</innernamespace>
    <briefdescription>
<para>Implementation of the run function. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>SPDX-FileCopyrightText:<sp/>2021-2025<sp/>The<sp/>Ikarus<sp/>Developers<sp/>mueller@ibb.uni-stuttgart.de</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>SPDX-License-Identifier:<sp/>LGPL-3.0-or-later</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="a00396" kindref="compound">Ikarus</ref><sp/>{</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>NLS&gt;</highlight></codeline>
<codeline lineno="14" refid="a01323_1aea1be825e746e898092e83a41efaedac" refkind="member"><highlight class="normal"><ref refid="a01319" kindref="compound">ControlInformation</ref><sp/><ref refid="a01323_1aea1be825e746e898092e83a41efaedac" kindref="member">LoadControl&lt;NLS&gt;::run</ref>()<sp/>{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><ref refid="a01319" kindref="compound">ControlInformation</ref><sp/>info({</highlight><highlight class="keyword">false</highlight><highlight class="normal">});</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>nonOp<sp/>=<sp/>nonLinearSolver_-&gt;nonLinearOperator();</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/>this-&gt;notify(<ref refid="a00390_1gga35fa62fd2d4186a9750af3d0692f2893a3fbccdb8d4ddfe10b3c9ee45ed07aad0" kindref="member">ControlMessages::CONTROL_STARTED</ref>,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">std::string</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(this-&gt;name()));</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>loadParameter<sp/>=<sp/>nonOp.lastParameter();</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/>loadParameter<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/>this-&gt;notify(<ref refid="a00390_1gga35fa62fd2d4186a9750af3d0692f2893a18e0c9ecde68d13f1d2608dd1a180945" kindref="member">ControlMessages::STEP_STARTED</ref>,<sp/>0,<sp/>stepSize_);</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>solverInfo<sp/>=<sp/>nonLinearSolver_-&gt;solve();</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/>info.solverInfos.push_back(solverInfo);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/>info.totalIterations<sp/>+=<sp/>solverInfo.iterations;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(not<sp/>solverInfo.success)</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>info;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/>this-&gt;notify(<ref refid="a00390_1gga35fa62fd2d4186a9750af3d0692f2893a0d30d757bf062e88728ebe7f8e2b2577" kindref="member">ControlMessages::SOLUTION_CHANGED</ref>);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/>this-&gt;notify(<ref refid="a00390_1gga35fa62fd2d4186a9750af3d0692f2893ae2b2386af3d7379bd2ddde735d5867b2" kindref="member">ControlMessages::STEP_ENDED</ref>);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ls<sp/>=<sp/>0;<sp/>ls<sp/>&lt;<sp/>loadSteps_;<sp/>++ls)<sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;notify(<ref refid="a00390_1gga35fa62fd2d4186a9750af3d0692f2893a18e0c9ecde68d13f1d2608dd1a180945" kindref="member">ControlMessages::STEP_STARTED</ref>,<sp/>ls,<sp/>stepSize_);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>loadParameter<sp/>+=<sp/>stepSize_;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>solverInfo<sp/>=<sp/>nonLinearSolver_-&gt;solve();</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>info.solverInfos.push_back(solverInfo);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>info.totalIterations<sp/>+=<sp/>solverInfo.iterations;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(not<sp/>solverInfo.success)</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>info;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;notify(<ref refid="a00390_1gga35fa62fd2d4186a9750af3d0692f2893a0d30d757bf062e88728ebe7f8e2b2577" kindref="member">ControlMessages::SOLUTION_CHANGED</ref>);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;notify(<ref refid="a00390_1gga35fa62fd2d4186a9750af3d0692f2893ae2b2386af3d7379bd2ddde735d5867b2" kindref="member">ControlMessages::STEP_ENDED</ref>);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/>this-&gt;notify(<ref refid="a00390_1gga35fa62fd2d4186a9750af3d0692f2893a1c32d268de88f801deb25166d98a3938" kindref="member">ControlMessages::CONTROL_ENDED</ref>,<sp/>info.totalIterations,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">std::string</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(this-&gt;name()));</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/>info.success<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>info;</highlight></codeline>
<codeline lineno="44"><highlight class="normal">}</highlight></codeline>
<codeline lineno="45"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>Ikarus</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/__w/ikarus/ikarus/repo/ikarus/controlroutines/loadcontrol.inl"/>
  </compounddef>
</doxygen>
