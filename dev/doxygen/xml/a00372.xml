<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="a00372" kind="group">
    <compoundname>materials</compoundname>
    <title>Materials</title>
    <innerfile refid="a02858">finiteelements/mechanics/materials/interface.hh</innerfile>
    <innerfile refid="a00257">linearelasticity.hh</innerfile>
    <innerfile refid="a00251">neohooke.hh</innerfile>
    <innerfile refid="a00263">strainconversions.hh</innerfile>
    <innerfile refid="a00260">svk.hh</innerfile>
    <innerfile refid="a00254">vanishingstrain.hh</innerfile>
    <innerfile refid="a00245">vanishingstress.hh</innerfile>
    <innerclass refid="a01492" prot="public">Ikarus::Material</innerclass>
    <innerclass refid="a01496" prot="public">Ikarus::LinearElasticityT</innerclass>
    <innerclass refid="a01500" prot="public">Ikarus::NeoHookeT</innerclass>
    <innerclass refid="a01504" prot="public">Ikarus::StVenantKirchhoffT</innerclass>
    <innerclass refid="a01512" prot="public">Ikarus::VanishingStrain</innerclass>
    <innerclass refid="a01516" prot="public">Ikarus::VanishingStress</innerclass>
    <innergroup refid="a00373">Material Tags</innergroup>
      <sectiondef kind="func">
      <memberdef kind="function" id="a00372_1gad5aa30fe829c7316a0a744b3438609f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>StrainTags</type>
            <declname>tag</declname>
            <defname>tag</defname>
          </param>
          <param>
            <type>typename Derived</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto Ikarus::createGreenLagrangianStrains</definition>
        <argsstring>(const Eigen::MatrixBase&lt; Derived &gt; &amp;eMB)</argsstring>
        <name>createGreenLagrangianStrains</name>
        <qualifiedname>Ikarus::createGreenLagrangianStrains</qualifiedname>
        <param>
          <type>const Eigen::MatrixBase&lt; Derived &gt; &amp;</type>
          <declname>eMB</declname>
        </param>
        <briefdescription>
<para>Create Green-Lagrangian strain based on the input. </para>
        </briefdescription>
        <detaileddescription>
<para>This function creates Green-Lagrangian strains based on the input strain matrix. What to do is decided by the provided strain tag</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>tag</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of the strain tag. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Derived</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of the <ref refid="a00396" kindref="compound">Eigen</ref> matrix. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>eMB</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="a00396" kindref="compound">Eigen</ref> matrix representing the input strain. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The Green-Lagrangian strains matrix. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/strainconversions.hh" line="46" column="6" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/strainconversions.hh" bodystart="46" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="a00372_1ga5293eb09f12e4a45a7aa19a3403a73d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>StrainTags</type>
            <declname>tag</declname>
            <defname>tag</defname>
          </param>
          <param>
            <type>typename Derived</type>
          </param>
        </templateparamlist>
        <type>decltype(auto)</type>
        <definition>decltype(auto) Ikarus::createDeformationGradient</definition>
        <argsstring>(const Eigen::MatrixBase&lt; Derived &gt; &amp;eMB)</argsstring>
        <name>createDeformationGradient</name>
        <qualifiedname>Ikarus::createDeformationGradient</qualifiedname>
        <param>
          <type>const Eigen::MatrixBase&lt; Derived &gt; &amp;</type>
          <declname>eMB</declname>
        </param>
        <briefdescription>
<para>Create the deformation gradient based on the input. </para>
        </briefdescription>
        <detaileddescription>
<para>This function creates deformation gradient based on the input strain matrix. What to do is decided by the provided strain tag</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>tag</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of the strain tag. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Derived</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of the <ref refid="a00396" kindref="compound">Eigen</ref> matrix. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>eMB</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="a00396" kindref="compound">Eigen</ref> matrix representing the input strain. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The deformation gradient matrix. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/strainconversions.hh" line="71" column="10" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/strainconversions.hh" bodystart="71" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="a00372_1gae53e0e7999f565fc94610d1c4ede0d16" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>StrainTags</type>
            <declname>tag</declname>
            <defname>tag</defname>
          </param>
          <param>
            <type>typename Derived</type>
          </param>
        </templateparamlist>
        <type>decltype(auto)</type>
        <definition>decltype(auto) Ikarus::createRightCauchyGreen</definition>
        <argsstring>(const Eigen::MatrixBase&lt; Derived &gt; &amp;eMB)</argsstring>
        <name>createRightCauchyGreen</name>
        <qualifiedname>Ikarus::createRightCauchyGreen</qualifiedname>
        <param>
          <type>const Eigen::MatrixBase&lt; Derived &gt; &amp;</type>
          <declname>eMB</declname>
        </param>
        <briefdescription>
<para>Create right Cauchy-Green tensor based on the input. </para>
        </briefdescription>
        <detaileddescription>
<para>This function creates Right Cauchy-Green tensor based on the input strain matrix. What to do is decided by the provided strain tag</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>tag</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of the strain tag. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Derived</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of the <ref refid="a00396" kindref="compound">Eigen</ref> matrix. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>eMB</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="a00396" kindref="compound">Eigen</ref> matrix representing the input strain. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The Right Cauchy-Green tensor matrix. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/strainconversions.hh" line="102" column="10" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/strainconversions.hh" bodystart="102" bodyend="118"/>
      </memberdef>
      <memberdef kind="function" id="a00372_1gae9c00f19ce473d7183c87aa84b247f88" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>StrainTags</type>
            <declname>from</declname>
            <defname>from</defname>
          </param>
          <param>
            <type>StrainTags</type>
            <declname>to</declname>
            <defname>to</defname>
          </param>
          <param>
            <type>typename Derived</type>
          </param>
        </templateparamlist>
        <type>decltype(auto)</type>
        <definition>decltype(auto) Ikarus::transformStrain</definition>
        <argsstring>(const Eigen::MatrixBase&lt; Derived &gt; &amp;eRaw)</argsstring>
        <name>transformStrain</name>
        <qualifiedname>Ikarus::transformStrain</qualifiedname>
        <param>
          <type>const Eigen::MatrixBase&lt; Derived &gt; &amp;</type>
          <declname>eRaw</declname>
        </param>
        <briefdescription>
<para>Transform strain from one type to another. </para>
        </briefdescription>
        <detaileddescription>
<para>This function transforms one strain component matrix from one type to another, based on the provided strain tags</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>from</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of the source strain tag. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>to</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of the target strain tag. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Derived</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of the <ref refid="a00396" kindref="compound">Eigen</ref> matrix. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>eRaw</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="a00396" kindref="compound">Eigen</ref> matrix representing the input strain (can be in Voigt notation). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The transformed strain matrix. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/strainconversions.hh" line="132" column="10" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/materials/strainconversions.hh" bodystart="132" bodyend="147"/>
      </memberdef>
      <memberdef kind="function" id="a00372_1ga2c5ed0e112e5ea2865689ad21282c5e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void addMaterialsSubModule</definition>
        <argsstring>(pybind11::module &amp;m)</argsstring>
        <name>addMaterialsSubModule</name>
        <param>
          <type>pybind11::module &amp;</type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>Transform strain from one type to another.</para>
<para>This function transforms one strain component matrix from one type to another, based on the provided strain tags</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>from</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of the source strain tag. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>to</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of the target strain tag. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>E</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="a00396" kindref="compound">Eigen</ref> matrix representing the input strain (can be in Voigt notation). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The transformed strain matrix.</para>
</simplesect>
</para>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/python/ikarus/materials/materials.hh" line="16" column="6" bodyfile="/__w/ikarus/ikarus/repo/python/ikarus/materials/materials.hh" bodystart="16" bodyend="117"/>
        <referencedby refid="a00347_1a0e4f7cface71bec1c24bbed3aaa798d8" compoundref="a00347" startline="70" endline="105">PYBIND11_MODULE</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Materials for mechanical simulations. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
