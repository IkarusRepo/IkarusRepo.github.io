<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="a01335" kind="struct" language="C++" prot="public">
    <compoundname>Ikarus::ArcLength</compoundname>
    <includes refid="a00197" local="no">ikarus/controlroutines/pathfollowingfunctions.hh</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="a01335_1ae1639521773c27369f8b5d41a9a08dfa" prot="private" static="no" mutable="no">
        <type>std::optional&lt; double &gt;</type>
        <definition>std::optional&lt;double&gt; Ikarus::ArcLength::psi</definition>
        <argsstring></argsstring>
        <name>psi</name>
        <qualifiedname>Ikarus::ArcLength::psi</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/controlroutines/pathfollowingfunctions.hh" line="158" column="17" bodyfile="/__w/ikarus/ikarus/repo/ikarus/controlroutines/pathfollowingfunctions.hh" bodystart="158" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="a01335_1a2fabf5f8515ac122ecf588f1d8c860bf" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ikarus::ArcLength::operator()</definition>
        <argsstring>(SubsidiaryArgs &amp;args) const</argsstring>
        <name>operator()</name>
        <qualifiedname>Ikarus::ArcLength::operator()</qualifiedname>
        <param>
          <type><ref refid="a01331" kindref="compound">SubsidiaryArgs</ref> &amp;</type>
          <declname>args</declname>
        </param>
        <briefdescription>
<para>Evaluates the subsidiary function for the standard arc-length method. </para>
        </briefdescription>
        <detaileddescription>
<para>This method calculates the subsidiary function value and its derivatives for the given arguments and stores it in the given args structure.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>args</parametername>
</parameternamelist>
<parameterdescription>
<para>The subsidiary function arguments. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/controlroutines/pathfollowingfunctions.hh" line="76" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/controlroutines/pathfollowingfunctions.hh" bodystart="76" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="a00379_1ga0a84b97adf02eb4fbd07ac3fc0c134bf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename NLO</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Ikarus::ArcLength::initialPrediction</definition>
        <argsstring>(NLO &amp;nonLinearOperator, SubsidiaryArgs &amp;args)</argsstring>
        <name>initialPrediction</name>
        <qualifiedname>Ikarus::ArcLength::initialPrediction</qualifiedname>
        <param>
          <type>NLO &amp;</type>
          <declname>nonLinearOperator</declname>
        </param>
        <param>
          <type><ref refid="a01331" kindref="compound">SubsidiaryArgs</ref> &amp;</type>
          <declname>args</declname>
        </param>
        <briefdescription>
<para>Performs the initial prediction for the standard arc-length method. </para>
        </briefdescription>
        <detaileddescription>
<para>This method initializes the prediction step for the standard arc-length method it computes <formula id="11">$\psi$</formula> and computes initial <formula id="7">$\mathrm{D}\mathbf{D}$</formula> and <formula id="8">$\mathrm{D} \lambda$</formula>.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>NLO</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of the nonlinear operator. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>nonLinearOperator</parametername>
</parameternamelist>
<parameterdescription>
<para>The nonlinear operator. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>args</parametername>
</parameternamelist>
<parameterdescription>
<para>The subsidiary function arguments. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/controlroutines/pathfollowingfunctions.hh" line="99" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/controlroutines/pathfollowingfunctions.hh" bodystart="99" bodyend="137"/>
      </memberdef>
      <memberdef kind="function" id="a01335_1af2af0315b650a1b8c997792f22829585" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename NLO</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Ikarus::ArcLength::intermediatePrediction</definition>
        <argsstring>(NLO &amp;nonLinearOperator, SubsidiaryArgs &amp;args)</argsstring>
        <name>intermediatePrediction</name>
        <qualifiedname>Ikarus::ArcLength::intermediatePrediction</qualifiedname>
        <param>
          <type>NLO &amp;</type>
          <declname>nonLinearOperator</declname>
        </param>
        <param>
          <type><ref refid="a01331" kindref="compound">SubsidiaryArgs</ref> &amp;</type>
          <declname>args</declname>
        </param>
        <briefdescription>
<para>Performs intermediate prediction for the standard arc-length method. </para>
        </briefdescription>
        <detaileddescription>
<para>This method updates the prediction step for the standard arc-length method.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>NLO</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of the nonlinear operator. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>nonLinearOperator</parametername>
</parameternamelist>
<parameterdescription>
<para>The nonlinear operator. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>args</parametername>
</parameternamelist>
<parameterdescription>
<para>The subsidiary function arguments. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/controlroutines/pathfollowingfunctions.hh" line="149" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/controlroutines/pathfollowingfunctions.hh" bodystart="149" bodyend="152"/>
      </memberdef>
      <memberdef kind="function" id="a01335_1afa77b974566da3b74cb5b35693540c16" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto Ikarus::ArcLength::name</definition>
        <argsstring>() const</argsstring>
        <name>name</name>
        <qualifiedname>Ikarus::ArcLength::name</qualifiedname>
        <briefdescription>
<para>The name of the <ref refid="a01327" kindref="compound">PathFollowing</ref> method. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/controlroutines/pathfollowingfunctions.hh" line="155" column="18" bodyfile="/__w/ikarus/ikarus/repo/ikarus/controlroutines/pathfollowingfunctions.hh" bodystart="155" bodyend="155"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Structure representing the subsidiary function for the standard arc-length method. </para>
    </briefdescription>
    <detaileddescription>
<para>This structure provides methods to evaluate the subsidiary function, perform initial prediction, and perform intermediate prediction for the standard arc-length control method.</para>
<para>The equation for the arc length method reads <formula id="10">\[
f(\mathrm{D}\mathbf{D}, \mathrm{D} \lambda)=
\sqrt{||\mathrm{D}\mathbf{D}||^2+ \psi^2 (\mathrm{D} \lambda)^2 }- \hat{s}, \]</formula> where <formula id="7">$\mathrm{D}\mathbf{D}$</formula> is the increment of the solution vector and <formula id="8">$\mathrm{D} \lambda$</formula> is the load factor increment. <formula id="11">$\psi$</formula> is the to-be-determined correction factor for the different dimensionalities between <formula id="7">$\mathrm{D}\mathbf{D}$</formula> and <formula id="8">$\mathrm{D} \lambda$</formula>. The scalar <formula id="12">$\hat{s} $</formula> defines the requested size of the step. </para>
    </detaileddescription>
    <location file="/__w/ikarus/ikarus/repo/ikarus/controlroutines/pathfollowingfunctions.hh" line="66" column="1" bodyfile="/__w/ikarus/ikarus/repo/ikarus/controlroutines/pathfollowingfunctions.hh" bodystart="67" bodyend="159"/>
    <listofallmembers>
      <member refid="a00379_1ga0a84b97adf02eb4fbd07ac3fc0c134bf" prot="public" virt="non-virtual"><scope>Ikarus::ArcLength</scope><name>initialPrediction</name></member>
      <member refid="a01335_1af2af0315b650a1b8c997792f22829585" prot="public" virt="non-virtual"><scope>Ikarus::ArcLength</scope><name>intermediatePrediction</name></member>
      <member refid="a01335_1afa77b974566da3b74cb5b35693540c16" prot="public" virt="non-virtual"><scope>Ikarus::ArcLength</scope><name>name</name></member>
      <member refid="a01335_1a2fabf5f8515ac122ecf588f1d8c860bf" prot="public" virt="non-virtual"><scope>Ikarus::ArcLength</scope><name>operator()</name></member>
      <member refid="a01335_1ae1639521773c27369f8b5d41a9a08dfa" prot="private" virt="non-virtual"><scope>Ikarus::ArcLength</scope><name>psi</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
