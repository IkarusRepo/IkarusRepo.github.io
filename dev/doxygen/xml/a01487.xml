<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="a01487" kind="class" language="C++" prot="public">
    <compoundname>Ikarus::LinearElastic</compoundname>
    <basecompoundref refid="a01423" prot="public" virt="non-virtual">Ikarus::ResultTypeBase&lt; ResultTypes::linearStress, ResultTypes::linearStressFull &gt;</basecompoundref>
    <includes refid="a00293" local="no">ikarus/finiteelements/mechanics/linearelastic.hh</includes>
    <templateparamlist>
      <param>
        <type>typename <ref refid="a01359" kindref="compound">PreFE</ref></type>
      </param>
      <param>
        <type>typename <ref refid="a01355" kindref="compound">FE</ref></type>
      </param>
      <param>
        <type>typename PRE</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="a01487_1a5d73edfcf0fd51ef9b9aee7acb724d00" prot="public" static="no">
        <type><ref refid="a01359_1a826c356a5afb013faffb5f7ac893cff4" kindref="member">PreFE::Traits</ref></type>
        <definition>using Ikarus::LinearElastic&lt; PreFE, FE, PRE &gt;::Traits =  PreFE::Traits</definition>
        <argsstring></argsstring>
        <name>Traits</name>
        <qualifiedname>Ikarus::LinearElastic::Traits</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" line="58" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="a01487_1aafae1e355286ace91790e8dd4f726c1f" prot="public" static="no">
        <type>typename <ref refid="a01427_1a129085c175bca28f94c71699b734ba04" kindref="member">Traits::BasisHandler</ref></type>
        <definition>using Ikarus::LinearElastic&lt; PreFE, FE, PRE &gt;::BasisHandler =  typename Traits::BasisHandler</definition>
        <argsstring></argsstring>
        <name>BasisHandler</name>
        <qualifiedname>Ikarus::LinearElastic::BasisHandler</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" line="59" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="a01487_1ac0bcbe25c41bb97f624fb088ae808d27" prot="public" static="no">
        <type>typename <ref refid="a01427_1a81feef959fedef62b2e1daabbd52b5f2" kindref="member">Traits::FlatBasis</ref></type>
        <definition>using Ikarus::LinearElastic&lt; PreFE, FE, PRE &gt;::FlatBasis =  typename Traits::FlatBasis</definition>
        <argsstring></argsstring>
        <name>FlatBasis</name>
        <qualifiedname>Ikarus::LinearElastic::FlatBasis</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" line="60" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="a01487_1afc648e72b62749a96a29967b2d95c2e2" prot="public" static="no">
        <type><ref refid="a01391" kindref="compound">FERequirementsFactory</ref>&lt; <ref refid="a00383_1ggaea763c94a1cecbeefc4f8661debcc5a3a0c2d35f5f278a229db5ba41d40120f1c" kindref="member">FESolutions::displacement</ref>, <ref refid="a00383_1gga0c1577fd05efee8475b0f7fef795bbbeaf72bac0ac84c0315e7bcbb8aa84b2ff8" kindref="member">FEParameter::loadfactor</ref>, <ref refid="a01427_1a60456621f63d34ff66c1d6b861a3b91e" kindref="member">Traits::useEigenRef</ref> &gt;::type</type>
        <definition>using Ikarus::LinearElastic&lt; PreFE, FE, PRE &gt;::Requirement =  FERequirementsFactory&lt;FESolutions::displacement, FEParameter::loadfactor, Traits::useEigenRef&gt;::type</definition>
        <argsstring></argsstring>
        <name>Requirement</name>
        <qualifiedname>Ikarus::LinearElastic::Requirement</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" line="61" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="a01487_1ab070fdb672db85573e104754b5d564f5" prot="public" static="no">
        <type>typename <ref refid="a01427_1a06bdad066f621e46875af45a22677a3c" kindref="member">Traits::LocalView</ref></type>
        <definition>using Ikarus::LinearElastic&lt; PreFE, FE, PRE &gt;::LocalView =  typename Traits::LocalView</definition>
        <argsstring></argsstring>
        <name>LocalView</name>
        <qualifiedname>Ikarus::LinearElastic::LocalView</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" line="63" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="a01487_1ae9c9565864c2189804b3402710a003c8" prot="public" static="no">
        <type>typename <ref refid="a01427_1a0b7be1104fba2d190e3fed46f291a851" kindref="member">Traits::Geometry</ref></type>
        <definition>using Ikarus::LinearElastic&lt; PreFE, FE, PRE &gt;::Geometry =  typename Traits::Geometry</definition>
        <argsstring></argsstring>
        <name>Geometry</name>
        <qualifiedname>Ikarus::LinearElastic::Geometry</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" line="64" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="a01487_1aa713ea9e504f7acd69c9969ddd066fa5" prot="public" static="no">
        <type>typename <ref refid="a01427_1a3ec0294824df467074f5070cb58f5a91" kindref="member">Traits::GridView</ref></type>
        <definition>using Ikarus::LinearElastic&lt; PreFE, FE, PRE &gt;::GridView =  typename Traits::GridView</definition>
        <argsstring></argsstring>
        <name>GridView</name>
        <qualifiedname>Ikarus::LinearElastic::GridView</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" line="65" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="a01487_1a45539838c3d4a353175180e102c2eb46" prot="public" static="no">
        <type>typename <ref refid="a01427_1ac4668b9c9142defdf3b70cca8eeb30c4" kindref="member">Traits::Element</ref></type>
        <definition>using Ikarus::LinearElastic&lt; PreFE, FE, PRE &gt;::Element =  typename Traits::Element</definition>
        <argsstring></argsstring>
        <name>Element</name>
        <qualifiedname>Ikarus::LinearElastic::Element</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" line="66" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="a01487_1ae31fb3e60ec01ebcaded334ba99ec8ba" prot="public" static="no">
        <type>PRE::Material</type>
        <definition>using Ikarus::LinearElastic&lt; PreFE, FE, PRE &gt;::Material =  PRE::Material</definition>
        <argsstring></argsstring>
        <name>Material</name>
        <qualifiedname>Ikarus::LinearElastic::Material</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" line="67" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="a01487_1a64d99adcfa78a98cff5be3c097c1aa12" prot="public" static="no">
        <type>PRE</type>
        <definition>using Ikarus::LinearElastic&lt; PreFE, FE, PRE &gt;::Pre =  PRE</definition>
        <argsstring></argsstring>
        <name>Pre</name>
        <qualifiedname>Ikarus::LinearElastic::Pre</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" line="68" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="a01487_1ae51f1ca113102ddf0249f77160552d5e" prot="public" static="no">
        <type>decltype(std::declval&lt; <ref refid="a01487_1ab070fdb672db85573e104754b5d564f5" kindref="member">LocalView</ref> &gt;().tree().child(0).finiteElement().localBasis())</type>
        <definition>using Ikarus::LinearElastic&lt; PreFE, FE, PRE &gt;::LocalBasisType =  decltype(std::declval&lt;LocalView&gt;().tree().child(0).finiteElement().localBasis())</definition>
        <argsstring></argsstring>
        <name>LocalBasisType</name>
        <qualifiedname>Ikarus::LinearElastic::LocalBasisType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" line="71" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="a01423_1ac43d0000154d9bd08d7fdce3c279ccbb" prot="public" static="no">
        <type>std::tuple&lt; decltype(<ref refid="a00396_1a38629395c2d43ba44328b01ce0c0daf3" kindref="member">makeRT</ref>&lt; ResultTypes &gt;())... &gt;</type>
        <definition>using Ikarus::ResultTypeBase&lt; ResultTypes &gt;::SupportedResultTypes =  std::tuple&lt;decltype(makeRT&lt;ResultTypes&gt;())...&gt;</definition>
        <argsstring></argsstring>
        <name>SupportedResultTypes</name>
        <qualifiedname>Ikarus::ResultTypeBase&lt; ResultTypes::linearStress, ResultTypes::linearStressFull &gt;::SupportedResultTypes</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/feresulttypes.hh" line="287" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/feresulttypes.hh" bodystart="287" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="a01487_1a158fdcb8defa5741db223f85ea1ad598" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr int</type>
        <definition>constexpr int Ikarus::LinearElastic&lt; PreFE, FE, PRE &gt;::myDim</definition>
        <argsstring></argsstring>
        <name>myDim</name>
        <qualifiedname>Ikarus::LinearElastic::myDim</qualifiedname>
        <initializer>= <ref refid="a01427_1ae15b8efa9f66a3caee81d99dd5c648de" kindref="member">Traits::mydim</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" line="70" column="24" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" bodystart="70" bodyend="-1"/>
        <referencedby refid="a01487_1ac7b1a691458d895da8fdc2ded0c786df" compoundref="a00293" startline="213" endline="231">Ikarus::LinearElastic&lt; PreFE, FE, PRE &gt;::calculateMatrixImpl</referencedby>
        <referencedby refid="a01487_1a88be43beed4215c905c755e9e1723ec9" compoundref="a00293" startline="254" endline="272">Ikarus::LinearElastic&lt; PreFE, FE, PRE &gt;::calculateVectorImpl</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="a01487_1a36606f6c28d7317fa8bb0b2170586bce" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; const <ref refid="a01487_1ae9c9565864c2189804b3402710a003c8" kindref="member">Geometry</ref> &gt;</type>
        <definition>std::shared_ptr&lt;const Geometry&gt; Ikarus::LinearElastic&lt; PreFE, FE, PRE &gt;::geo_</definition>
        <argsstring></argsstring>
        <name>geo_</name>
        <qualifiedname>Ikarus::LinearElastic::geo_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" line="205" column="19" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" bodystart="205" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="a01487_1a8fd06618be68ecdcb13643d4c1f5804d" prot="private" static="no" mutable="no">
        <type>Dune::CachedLocalBasis&lt; std::remove_cvref_t&lt; <ref refid="a01487_1ae51f1ca113102ddf0249f77160552d5e" kindref="member">LocalBasisType</ref> &gt; &gt;</type>
        <definition>Dune::CachedLocalBasis&lt;std::remove_cvref_t&lt;LocalBasisType&gt; &gt; Ikarus::LinearElastic&lt; PreFE, FE, PRE &gt;::localBasis_</definition>
        <argsstring></argsstring>
        <name>localBasis_</name>
        <qualifiedname>Ikarus::LinearElastic::localBasis_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" line="206" column="26" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" bodystart="206" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="a01487_1a430d8e5e54b37f49047571f168f64905" prot="private" static="no" mutable="no">
        <type><ref refid="a01487_1ae31fb3e60ec01ebcaded334ba99ec8ba" kindref="member">Material</ref></type>
        <definition>Material Ikarus::LinearElastic&lt; PreFE, FE, PRE &gt;::mat_</definition>
        <argsstring></argsstring>
        <name>mat_</name>
        <qualifiedname>Ikarus::LinearElastic::mat_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" line="207" column="12" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" bodystart="207" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="a01487_1a33ef63da48a8cdf7941b945afad0da4d" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t Ikarus::LinearElastic&lt; PreFE, FE, PRE &gt;::numberOfNodes_</definition>
        <argsstring></argsstring>
        <name>numberOfNodes_</name>
        <qualifiedname>Ikarus::LinearElastic::numberOfNodes_</qualifiedname>
        <initializer>{0}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" line="208" column="10" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" bodystart="208" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="a01487_1a38c35b321e3a267dd7fa226b150f5f87" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Ikarus::LinearElastic&lt; PreFE, FE, PRE &gt;::order_</definition>
        <argsstring></argsstring>
        <name>order_</name>
        <qualifiedname>Ikarus::LinearElastic::order_</qualifiedname>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" line="209" column="7" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" bodystart="209" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="a01487_1ad98c25b7373d50e0fb0e2035514c9a71" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Ikarus::LinearElastic&lt; PreFE, FE, PRE &gt;::LinearElastic</definition>
        <argsstring>(const Pre &amp;pre)</argsstring>
        <name>LinearElastic</name>
        <qualifiedname>Ikarus::LinearElastic::LinearElastic</qualifiedname>
        <param>
          <type>const <ref refid="a01487_1a64d99adcfa78a98cff5be3c097c1aa12" kindref="member">Pre</ref> &amp;</type>
          <declname>pre</declname>
        </param>
        <briefdescription>
<para>Constructor for the <ref refid="a01487" kindref="compound">LinearElastic</ref> class. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pre</parametername>
</parameternamelist>
<parameterdescription>
<para>The pre fe </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" line="77" column="12" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" bodystart="77" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="a01487_1ac84232db4745b425dfe6631ff1a3fc11" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ScalarType</type>
            <defval>double</defval>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto Ikarus::LinearElastic&lt; PreFE, FE, PRE &gt;::displacementFunction</definition>
        <argsstring>(const Requirement &amp;par, const std::optional&lt; std::reference_wrapper&lt; const Eigen::VectorX&lt; ScalarType &gt; &gt; &gt; &amp;dx=std::nullopt) const</argsstring>
        <name>displacementFunction</name>
        <qualifiedname>Ikarus::LinearElastic::displacementFunction</qualifiedname>
        <param>
          <type>const <ref refid="a01487_1afc648e72b62749a96a29967b2d95c2e2" kindref="member">Requirement</ref> &amp;</type>
          <declname>par</declname>
        </param>
        <param>
          <type>const std::optional&lt; std::reference_wrapper&lt; const Eigen::VectorX&lt; ScalarType &gt; &gt; &gt; &amp;</type>
          <declname>dx</declname>
          <defval>std::nullopt</defval>
        </param>
        <briefdescription>
<para>Gets the displacement function for the given Requirement and optional displacement vector. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>ScalarType</parametername>
</parameternamelist>
<parameterdescription>
<para>The scalar type for the displacement vector. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>par</parametername>
</parameternamelist>
<parameterdescription>
<para>The Requirement object. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dx</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional displacement vector. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The displacement function. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" line="113" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" bodystart="113" bodyend="120"/>
        <referencedby refid="a01487_1a73a64dc32dd1d8983cda0c6df2f0cc3c" compoundref="a00293" startline="234" endline="251">Ikarus::LinearElastic&lt; PreFE, FE, PRE &gt;::calculateScalarImpl</referencedby>
        <referencedby refid="a01487_1afbb960bfdbf6438f2a62dc1f2b785175" compoundref="a00293" startline="131" endline="135">Ikarus::LinearElastic&lt; PreFE, FE, PRE &gt;::strainFunction</referencedby>
      </memberdef>
      <memberdef kind="function" id="a01487_1afbb960bfdbf6438f2a62dc1f2b785175" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class ScalarType</type>
            <defval>double</defval>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto Ikarus::LinearElastic&lt; PreFE, FE, PRE &gt;::strainFunction</definition>
        <argsstring>(const Requirement &amp;par, const std::optional&lt; std::reference_wrapper&lt; const Eigen::VectorX&lt; ScalarType &gt; &gt; &gt; &amp;dx=std::nullopt) const</argsstring>
        <name>strainFunction</name>
        <qualifiedname>Ikarus::LinearElastic::strainFunction</qualifiedname>
        <param>
          <type>const <ref refid="a01487_1afc648e72b62749a96a29967b2d95c2e2" kindref="member">Requirement</ref> &amp;</type>
          <declname>par</declname>
        </param>
        <param>
          <type>const std::optional&lt; std::reference_wrapper&lt; const Eigen::VectorX&lt; ScalarType &gt; &gt; &gt; &amp;</type>
          <declname>dx</declname>
          <defval>std::nullopt</defval>
        </param>
        <briefdescription>
<para>Gets the strain function for the given Requirement and optional di splacement vector. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>ScalarType</parametername>
</parameternamelist>
<parameterdescription>
<para>The scalar type for the strain vector. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>par</parametername>
</parameternamelist>
<parameterdescription>
<para>The Requirement object. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dx</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional displacement vector. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The strain function. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" line="131" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" bodystart="131" bodyend="135"/>
        <referencedby refid="a01487_1a85f5316ee97d0e5fa3f940d4a333a7c6" compoundref="a00293" startline="182" endline="198">Ikarus::LinearElastic&lt; PreFE, FE, PRE &gt;::calculateAtImpl</referencedby>
        <referencedby refid="a01487_1ac7b1a691458d895da8fdc2ded0c786df" compoundref="a00293" startline="213" endline="231">Ikarus::LinearElastic&lt; PreFE, FE, PRE &gt;::calculateMatrixImpl</referencedby>
        <referencedby refid="a01487_1a73a64dc32dd1d8983cda0c6df2f0cc3c" compoundref="a00293" startline="234" endline="251">Ikarus::LinearElastic&lt; PreFE, FE, PRE &gt;::calculateScalarImpl</referencedby>
        <referencedby refid="a01487_1a88be43beed4215c905c755e9e1723ec9" compoundref="a00293" startline="254" endline="272">Ikarus::LinearElastic&lt; PreFE, FE, PRE &gt;::calculateVectorImpl</referencedby>
      </memberdef>
      <memberdef kind="function" id="a01487_1a3d8da7696605af68b619c2c416d5107a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto Ikarus::LinearElastic&lt; PreFE, FE, PRE &gt;::materialTangent</definition>
        <argsstring>() const</argsstring>
        <name>materialTangent</name>
        <qualifiedname>Ikarus::LinearElastic::materialTangent</qualifiedname>
        <briefdescription>
<para>Gets the material tangent matrix for the linear elastic material. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The material tangent matrix. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" line="142" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" bodystart="142" bodyend="145"/>
        <referencedby refid="a01487_1ac7b1a691458d895da8fdc2ded0c786df" compoundref="a00293" startline="213" endline="231">Ikarus::LinearElastic&lt; PreFE, FE, PRE &gt;::calculateMatrixImpl</referencedby>
        <referencedby refid="a01487_1a73a64dc32dd1d8983cda0c6df2f0cc3c" compoundref="a00293" startline="234" endline="251">Ikarus::LinearElastic&lt; PreFE, FE, PRE &gt;::calculateScalarImpl</referencedby>
        <referencedby refid="a01487_1a88be43beed4215c905c755e9e1723ec9" compoundref="a00293" startline="254" endline="272">Ikarus::LinearElastic&lt; PreFE, FE, PRE &gt;::calculateVectorImpl</referencedby>
        <referencedby refid="a01487_1a580f1c4492e0a530e09865e459c3f84c" compoundref="a00293" startline="153" endline="155">Ikarus::LinearElastic&lt; PreFE, FE, PRE &gt;::materialTangentFunction</referencedby>
      </memberdef>
      <memberdef kind="function" id="a01487_1a580f1c4492e0a530e09865e459c3f84c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto Ikarus::LinearElastic&lt; PreFE, FE, PRE &gt;::materialTangentFunction</definition>
        <argsstring>(const Requirement &amp;par) const</argsstring>
        <name>materialTangentFunction</name>
        <qualifiedname>Ikarus::LinearElastic::materialTangentFunction</qualifiedname>
        <param>
          <type>const <ref refid="a01487_1afc648e72b62749a96a29967b2d95c2e2" kindref="member">Requirement</ref> &amp;</type>
          <declname>par</declname>
        </param>
        <briefdescription>
<para>Gets the material tangent function for the given Requirement. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>par</parametername>
</parameternamelist>
<parameterdescription>
<para>The Requirement object. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The material tangent function. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" line="153" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" bodystart="153" bodyend="155"/>
      </memberdef>
      <memberdef kind="function" id="a01487_1af5e1fe8c6542b0b93657b621b6c1404d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="a01487_1ae9c9565864c2189804b3402710a003c8" kindref="member">Geometry</ref> &amp;</type>
        <definition>const Geometry &amp; Ikarus::LinearElastic&lt; PreFE, FE, PRE &gt;::geometry</definition>
        <argsstring>() const</argsstring>
        <name>geometry</name>
        <qualifiedname>Ikarus::LinearElastic::geometry</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" line="157" column="18" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" bodystart="157" bodyend="157"/>
      </memberdef>
      <memberdef kind="function" id="a01487_1a7df8b7737f48f0d5cd1c99fbd2e71b3b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t Ikarus::LinearElastic&lt; PreFE, FE, PRE &gt;::numberOfNodes</definition>
        <argsstring>() const</argsstring>
        <name>numberOfNodes</name>
        <qualifiedname>Ikarus::LinearElastic::numberOfNodes</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" line="158" column="11" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" bodystart="158" bodyend="158"/>
      </memberdef>
      <memberdef kind="function" id="a01487_1a7ff5bd6702eba263e62c8788adadd46b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int Ikarus::LinearElastic&lt; PreFE, FE, PRE &gt;::order</definition>
        <argsstring>() const</argsstring>
        <name>order</name>
        <qualifiedname>Ikarus::LinearElastic::order</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" line="159" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" bodystart="159" bodyend="159"/>
      </memberdef>
      <memberdef kind="function" id="a01487_1ae8b49ae1862243dd12fc703a52c5d7da" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ScalarType</type>
            <defval>double</defval>
          </param>
        </templateparamlist>
        <type>decltype(auto)</type>
        <definition>decltype(auto) Ikarus::LinearElastic&lt; PreFE, FE, PRE &gt;::material</definition>
        <argsstring>() const</argsstring>
        <name>material</name>
        <qualifiedname>Ikarus::LinearElastic::material</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" line="162" column="12" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" bodystart="162" bodyend="167"/>
      </memberdef>
      <memberdef kind="function" id="a01487_1a85f5316ee97d0e5fa3f940d4a333a7c6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>template&lt; typename, int, int &gt; class</type>
            <declname>RT</declname>
            <defname>RT</defname>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto Ikarus::LinearElastic&lt; PreFE, FE, PRE &gt;::calculateAtImpl</definition>
        <argsstring>(const Requirement &amp;req, const Dune::FieldVector&lt; double, Traits::mydim &gt; &amp;local, Dune::PriorityTag&lt; 1 &gt;) const</argsstring>
        <name>calculateAtImpl</name>
        <qualifiedname>Ikarus::LinearElastic::calculateAtImpl</qualifiedname>
        <param>
          <type>const <ref refid="a01487_1afc648e72b62749a96a29967b2d95c2e2" kindref="member">Requirement</ref> &amp;</type>
          <declname>req</declname>
        </param>
        <param>
          <type>const <ref refid="a01867" kindref="compound">Dune::FieldVector</ref>&lt; double, <ref refid="a01427_1ae15b8efa9f66a3caee81d99dd5c648de" kindref="member">Traits::mydim</ref> &gt; &amp;</type>
          <declname>local</declname>
        </param>
        <param>
          <type>Dune::PriorityTag&lt; 1 &gt;</type>
        </param>
    <requiresclause>(supportsResultType&lt;RT&gt;())    </requiresclause>
        <briefdescription>
<para>Calculates a requested result at a specific local position. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>req</parametername>
</parameternamelist>
<parameterdescription>
<para>The Requirement object holding the global solution. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>local</parametername>
</parameternamelist>
<parameterdescription>
<para>Local position vector. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>RT</parametername>
</parameternamelist>
<parameterdescription>
<para>The requested result type </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>calculated result</para>
</simplesect>
<parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>RT</parametername>
</parameternamelist>
<parameterdescription>
<para>The type representing the requested result. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" line="182" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" bodystart="182" bodyend="198"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="a01487_1a01aae67f3addf5925b592ce750dec65a" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ikarus::LinearElastic&lt; PreFE, FE, PRE &gt;::bindImpl</definition>
        <argsstring>()</argsstring>
        <name>bindImpl</name>
        <qualifiedname>Ikarus::LinearElastic::bindImpl</qualifiedname>
        <briefdescription>
<para>A helper function to bind the local view to the element. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" line="84" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" bodystart="84" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="a01487_1ac7b1a691458d895da8fdc2ded0c786df" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ScalarType</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Ikarus::LinearElastic&lt; PreFE, FE, PRE &gt;::calculateMatrixImpl</definition>
        <argsstring>(const Requirement &amp;par, const MatrixAffordance &amp;affordance, typename Traits::template MatrixType&lt;&gt; K, const std::optional&lt; std::reference_wrapper&lt; const Eigen::VectorX&lt; ScalarType &gt; &gt; &gt; &amp;dx=std::nullopt) const</argsstring>
        <name>calculateMatrixImpl</name>
        <qualifiedname>Ikarus::LinearElastic::calculateMatrixImpl</qualifiedname>
        <param>
          <type>const <ref refid="a01487_1afc648e72b62749a96a29967b2d95c2e2" kindref="member">Requirement</ref> &amp;</type>
          <declname>par</declname>
        </param>
        <param>
          <type>const <ref refid="a00396_1a390d5311179ec61d163a29c943b3d1a0" kindref="member">MatrixAffordance</ref> &amp;</type>
          <declname>affordance</declname>
        </param>
        <param>
          <type>typename Traits::template MatrixType&lt;&gt;</type>
          <declname>K</declname>
        </param>
        <param>
          <type>const std::optional&lt; std::reference_wrapper&lt; const Eigen::VectorX&lt; ScalarType &gt; &gt; &gt; &amp;</type>
          <declname>dx</declname>
          <defval>std::nullopt</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" line="213" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" bodystart="213" bodyend="231"/>
      </memberdef>
      <memberdef kind="function" id="a01487_1a73a64dc32dd1d8983cda0c6df2f0cc3c" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ScalarType</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto Ikarus::LinearElastic&lt; PreFE, FE, PRE &gt;::calculateScalarImpl</definition>
        <argsstring>(const Requirement &amp;par, ScalarAffordance affordance, const std::optional&lt; std::reference_wrapper&lt; const Eigen::VectorX&lt; ScalarType &gt; &gt; &gt; &amp;dx=std::nullopt) const -&gt; ScalarType</argsstring>
        <name>calculateScalarImpl</name>
        <qualifiedname>Ikarus::LinearElastic::calculateScalarImpl</qualifiedname>
        <param>
          <type>const <ref refid="a01487_1afc648e72b62749a96a29967b2d95c2e2" kindref="member">Requirement</ref> &amp;</type>
          <declname>par</declname>
        </param>
        <param>
          <type><ref refid="a00396_1af6f894084edd9109762b86222995ef2a" kindref="member">ScalarAffordance</ref></type>
          <declname>affordance</declname>
        </param>
        <param>
          <type>const std::optional&lt; std::reference_wrapper&lt; const Eigen::VectorX&lt; ScalarType &gt; &gt; &gt; &amp;</type>
          <declname>dx</declname>
          <defval>std::nullopt</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" line="234" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" bodystart="234" bodyend="251"/>
      </memberdef>
      <memberdef kind="function" id="a01487_1a88be43beed4215c905c755e9e1723ec9" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ScalarType</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Ikarus::LinearElastic&lt; PreFE, FE, PRE &gt;::calculateVectorImpl</definition>
        <argsstring>(const Requirement &amp;par, VectorAffordance affordance, typename Traits::template VectorType&lt; ScalarType &gt; force, const std::optional&lt; std::reference_wrapper&lt; const Eigen::VectorX&lt; ScalarType &gt; &gt; &gt; &amp;dx=std::nullopt) const</argsstring>
        <name>calculateVectorImpl</name>
        <qualifiedname>Ikarus::LinearElastic::calculateVectorImpl</qualifiedname>
        <param>
          <type>const <ref refid="a01487_1afc648e72b62749a96a29967b2d95c2e2" kindref="member">Requirement</ref> &amp;</type>
          <declname>par</declname>
        </param>
        <param>
          <type><ref refid="a00396_1aab9e3e38507d1db7602bc750718c302a" kindref="member">VectorAffordance</ref></type>
          <declname>affordance</declname>
        </param>
        <param>
          <type>typename Traits::template VectorType&lt; ScalarType &gt;</type>
          <declname>force</declname>
        </param>
        <param>
          <type>const std::optional&lt; std::reference_wrapper&lt; const Eigen::VectorX&lt; ScalarType &gt; &gt; &gt; &amp;</type>
          <declname>dx</declname>
          <defval>std::nullopt</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" line="254" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" bodystart="254" bodyend="272"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="a01487_1a5fe57d09318b9ebdd1a4fe6c9cf38477" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const auto &amp;</type>
        <definition>const auto &amp; Ikarus::LinearElastic&lt; PreFE, FE, PRE &gt;::underlying</definition>
        <argsstring>() const</argsstring>
        <name>underlying</name>
        <qualifiedname>Ikarus::LinearElastic::underlying</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" line="202" column="14" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" bodystart="202" bodyend="202"/>
      </memberdef>
      <memberdef kind="function" id="a01487_1a1db440b7afaf827ca13145201bda09a3" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>auto &amp;</type>
        <definition>auto &amp; Ikarus::LinearElastic&lt; PreFE, FE, PRE &gt;::underlying</definition>
        <argsstring>()</argsstring>
        <name>underlying</name>
        <qualifiedname>Ikarus::LinearElastic::underlying</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" line="203" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" bodystart="203" bodyend="203"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="a01423_1af33553a01e6940265639d561c31b7746" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>consteval bool</type>
        <definition>static consteval bool Ikarus::ResultTypeBase&lt; ResultTypes &gt;::supportsResultType</definition>
        <argsstring>()</argsstring>
        <name>supportsResultType</name>
        <qualifiedname>Ikarus::ResultTypeBase&lt; ResultTypes::linearStress, ResultTypes::linearStressFull &gt;::supportsResultType</qualifiedname>
        <briefdescription>
<para>Returns whether a ResultType is provided by the element. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>RT</parametername>
</parameternamelist>
<parameterdescription>
<para>requested ResultType </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/feresulttypes.hh" line="283" column="25" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/feresulttypes.hh" bodystart="283" bodyend="285"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="a01487" kindref="compound">LinearElastic</ref> class represents a linear elastic finite element. </para>
    </briefdescription>
    <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername><ref refid="a01359" kindref="compound">PreFE</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the pre finite element. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="a01355" kindref="compound">FE</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the finite element. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>Ikarus::LinearElastic&lt; PreFE, FE, PRE &gt;</label>
        <link refid="a01487"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>Ikarus::ResultTypeBase&lt; ResultTypes &gt;</label>
        <link refid="a01423"/>
      </node>
      <node id="2">
        <label>Ikarus::ResultTypeBase&lt; ResultTypes::linearStress, ResultTypes::linearStressFull &gt;</label>
        <link refid="a01423"/>
        <childnode refid="3" relation="template-instance">
          <edgelabel>&lt; ResultTypes::linearStress, ResultTypes::linearStressFull &gt;</edgelabel>
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>Ikarus::LinearElastic&lt; PreFE, FE, PRE &gt;</label>
        <link refid="a01487"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>Ikarus::ResultTypeBase&lt; ResultTypes &gt;</label>
        <link refid="a01423"/>
      </node>
      <node id="2">
        <label>Ikarus::ResultTypeBase&lt; ResultTypes::linearStress, ResultTypes::linearStressFull &gt;</label>
        <link refid="a01423"/>
        <childnode refid="3" relation="template-instance">
          <edgelabel>&lt; ResultTypes::linearStress, ResultTypes::linearStressFull &gt;</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" line="55" column="1" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/mechanics/linearelastic.hh" bodystart="56" bodyend="273"/>
    <listofallmembers>
      <member refid="a01487_1aafae1e355286ace91790e8dd4f726c1f" prot="public" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>BasisHandler</name></member>
      <member refid="a01487_1a01aae67f3addf5925b592ce750dec65a" prot="protected" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>bindImpl</name></member>
      <member refid="a01487_1a85f5316ee97d0e5fa3f940d4a333a7c6" prot="public" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>calculateAtImpl</name></member>
      <member refid="a01487_1ac7b1a691458d895da8fdc2ded0c786df" prot="protected" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>calculateMatrixImpl</name></member>
      <member refid="a01487_1a73a64dc32dd1d8983cda0c6df2f0cc3c" prot="protected" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>calculateScalarImpl</name></member>
      <member refid="a01487_1a88be43beed4215c905c755e9e1723ec9" prot="protected" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>calculateVectorImpl</name></member>
      <member refid="a01487_1ac84232db4745b425dfe6631ff1a3fc11" prot="public" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>displacementFunction</name></member>
      <member refid="a01487_1a45539838c3d4a353175180e102c2eb46" prot="public" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>Element</name></member>
      <member refid="a01487_1ac0bcbe25c41bb97f624fb088ae808d27" prot="public" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>FlatBasis</name></member>
      <member refid="a01487_1a36606f6c28d7317fa8bb0b2170586bce" prot="private" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>geo_</name></member>
      <member refid="a01487_1ae9c9565864c2189804b3402710a003c8" prot="public" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>Geometry</name></member>
      <member refid="a01487_1af5e1fe8c6542b0b93657b621b6c1404d" prot="public" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>geometry</name></member>
      <member refid="a01487_1aa713ea9e504f7acd69c9969ddd066fa5" prot="public" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>GridView</name></member>
      <member refid="a01487_1ad98c25b7373d50e0fb0e2035514c9a71" prot="public" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>LinearElastic</name></member>
      <member refid="a01487_1a8fd06618be68ecdcb13643d4c1f5804d" prot="private" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>localBasis_</name></member>
      <member refid="a01487_1ae51f1ca113102ddf0249f77160552d5e" prot="public" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>LocalBasisType</name></member>
      <member refid="a01487_1ab070fdb672db85573e104754b5d564f5" prot="public" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>LocalView</name></member>
      <member refid="a01487_1a430d8e5e54b37f49047571f168f64905" prot="private" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>mat_</name></member>
      <member refid="a01487_1ae31fb3e60ec01ebcaded334ba99ec8ba" prot="public" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>Material</name></member>
      <member refid="a01487_1ae8b49ae1862243dd12fc703a52c5d7da" prot="public" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>material</name></member>
      <member refid="a01487_1a3d8da7696605af68b619c2c416d5107a" prot="public" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>materialTangent</name></member>
      <member refid="a01487_1a580f1c4492e0a530e09865e459c3f84c" prot="public" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>materialTangentFunction</name></member>
      <member refid="a01487_1a158fdcb8defa5741db223f85ea1ad598" prot="public" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>myDim</name></member>
      <member refid="a01487_1a7df8b7737f48f0d5cd1c99fbd2e71b3b" prot="public" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>numberOfNodes</name></member>
      <member refid="a01487_1a33ef63da48a8cdf7941b945afad0da4d" prot="private" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>numberOfNodes_</name></member>
      <member refid="a01487_1a7ff5bd6702eba263e62c8788adadd46b" prot="public" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>order</name></member>
      <member refid="a01487_1a38c35b321e3a267dd7fa226b150f5f87" prot="private" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>order_</name></member>
      <member refid="a01487_1a64d99adcfa78a98cff5be3c097c1aa12" prot="public" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>Pre</name></member>
      <member refid="a01487_1afc648e72b62749a96a29967b2d95c2e2" prot="public" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>Requirement</name></member>
      <member refid="a01487_1afbb960bfdbf6438f2a62dc1f2b785175" prot="public" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>strainFunction</name></member>
      <member refid="a01423_1ac43d0000154d9bd08d7fdce3c279ccbb" prot="public" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>SupportedResultTypes</name></member>
      <member refid="a01423_1af33553a01e6940265639d561c31b7746" prot="public" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>supportsResultType</name></member>
      <member refid="a01487_1a5d73edfcf0fd51ef9b9aee7acb724d00" prot="public" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>Traits</name></member>
      <member refid="a01487_1a5fe57d09318b9ebdd1a4fe6c9cf38477" prot="private" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>underlying</name></member>
      <member refid="a01487_1a1db440b7afaf827ca13145201bda09a3" prot="private" virt="non-virtual"><scope>Ikarus::LinearElastic</scope><name>underlying</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
