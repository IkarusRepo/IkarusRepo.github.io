<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="a01902" kind="struct" language="C++" prot="public">
    <compoundname>Ikarus::utils::SolverDefault</compoundname>
    <includes refid="a00059" local="no">ikarus/utils/defaultfunctions.hh</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="a01902_1a4797d17bf96aa9e387567878a9591d7a" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename A</type>
          </param>
          <param>
            <type>typename B</type>
          </param>
        </templateparamlist>
        <type>constexpr auto</type>
        <definition>constexpr auto Ikarus::utils::SolverDefault::operator()</definition>
        <argsstring>(A &amp;&amp;a, B &amp;&amp;b) const</argsstring>
        <name>operator()</name>
        <qualifiedname>Ikarus::utils::SolverDefault::operator()</qualifiedname>
        <param>
          <type>A &amp;&amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>B &amp;&amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/utils/defaultfunctions.hh" line="28" column="18" bodyfile="/__w/ikarus/ikarus/repo/ikarus/utils/defaultfunctions.hh" bodystart="28" bodyend="30"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Default functor for solving operations. </para>
    </briefdescription>
    <detaileddescription>
<para>This functor provides a default implementation for solving operations by performing division. It is intended to be used in generic contexts where a default solver is needed. <parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>A</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of the left operand. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>B</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of the right operand. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a</parametername>
</parameternamelist>
<parameterdescription>
<para>The left operand. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>b</parametername>
</parameternamelist>
<parameterdescription>
<para>The right operand. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The result of the division operation (a / b). </para>
</simplesect>
</para>
    </detaileddescription>
    <location file="/__w/ikarus/ikarus/repo/ikarus/utils/defaultfunctions.hh" line="25" column="1" bodyfile="/__w/ikarus/ikarus/repo/ikarus/utils/defaultfunctions.hh" bodystart="26" bodyend="31"/>
    <listofallmembers>
      <member refid="a01902_1a4797d17bf96aa9e387567878a9591d7a" prot="public" virt="non-virtual"><scope>Ikarus::utils::SolverDefault</scope><name>operator()</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
