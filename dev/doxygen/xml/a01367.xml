<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="a01367" kind="struct" language="C++" prot="public">
    <compoundname>Ikarus::FEFactory</compoundname>
    <includes refid="a00320" local="no">ikarus/finiteelements/fefactory.hh</includes>
    <templateparamlist>
      <param>
        <type>typename BH</type>
      </param>
      <param>
        <type>typename SK</type>
      </param>
      <param>
        <type>bool</type>
        <declname>useFlat</declname>
        <defname>useFlat</defname>
        <defval>true</defval>
      </param>
      <param>
        <type>bool</type>
        <declname>useEigenRef</declname>
        <defname>useEigenRef</defname>
        <defval>false</defval>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="a01367_1ae4167551b40097429f804066c4973256" prot="public" static="no">
        <type>SK</type>
        <definition>using Ikarus::FEFactory&lt; BH, SK, useFlat, useEigenRef &gt;::Skills =  SK</definition>
        <argsstring></argsstring>
        <name>Skills</name>
        <qualifiedname>Ikarus::FEFactory::Skills</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/fefactory.hh" line="24" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/fefactory.hh" bodystart="24" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="a01367_1a8626c2445833aceb2e7a28c5dbe1d558" prot="private" static="no" mutable="no">
        <type>const BH *</type>
        <definition>const BH* Ikarus::FEFactory&lt; BH, SK, useFlat, useEigenRef &gt;::basisHandler_</definition>
        <argsstring></argsstring>
        <name>basisHandler_</name>
        <qualifiedname>Ikarus::FEFactory::basisHandler_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/fefactory.hh" line="27" column="12" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/fefactory.hh" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="a01367_1a5fda97695c256ec7af993ca2e2134c12" prot="private" static="no" mutable="no">
        <type>SK</type>
        <definition>SK Ikarus::FEFactory&lt; BH, SK, useFlat, useEigenRef &gt;::skills_</definition>
        <argsstring></argsstring>
        <name>skills_</name>
        <qualifiedname>Ikarus::FEFactory::skills_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/fefactory.hh" line="28" column="6" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/fefactory.hh" bodystart="28" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="a01367_1aacbb6c8ee45484144edb78306da79456" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename SK2</type>
            <defval>SK</defval>
          </param>
        </templateparamlist>
        <type></type>
        <definition>Ikarus::FEFactory&lt; BH, SK, useFlat, useEigenRef &gt;::FEFactory</definition>
        <argsstring>(const BH &amp;basisHandler, const SK2 &amp;sk)</argsstring>
        <name>FEFactory</name>
        <qualifiedname>Ikarus::FEFactory::FEFactory</qualifiedname>
        <param>
          <type>const BH &amp;</type>
          <declname>basisHandler</declname>
        </param>
        <param>
          <type>const SK2 &amp;</type>
          <declname>sk</declname>
        </param>
        <briefdescription>
<para>constructor for <ref refid="a01367" kindref="compound">FEFactory</ref> </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>basisHandler</parametername>
</parameternamelist>
<parameterdescription>
<para>The basis handler. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sk</parametername>
</parameternamelist>
<parameterdescription>
<para>Skill arguments. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/fefactory.hh" line="37" column="3" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/fefactory.hh" bodystart="37" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="a01367_1aa324bf69fc6e9d878cdaf1b2a8667196" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto Ikarus::FEFactory&lt; BH, SK, useFlat, useEigenRef &gt;::operator()</definition>
        <argsstring>()</argsstring>
        <name>operator()</name>
        <qualifiedname>Ikarus::FEFactory::operator()</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/fefactory.hh" line="41" column="8" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/fefactory.hh" bodystart="41" bodyend="53"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="a01367" kindref="compound">FEFactory</ref> is a convenient wrapper to forward arguments to <ref refid="a01359" kindref="compound">PreFE</ref> and create and construct a factory of finite elements. </para>
    </briefdescription>
    <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>BH</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the basis handler. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>SK</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of the skills. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>useFlat</parametername>
</parameternamelist>
<parameterdescription>
<para>A boolean indicating if the type of the underlying basis is of the flat or the untouched version. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>useEigenRef</parametername>
</parameternamelist>
<parameterdescription>
<para>A boolean flag indicating whether to use <ref refid="a00412" kindref="compound">Eigen</ref> references. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
    </detaileddescription>
    <location file="/__w/ikarus/ikarus/repo/ikarus/finiteelements/fefactory.hh" line="22" column="1" bodyfile="/__w/ikarus/ikarus/repo/ikarus/finiteelements/fefactory.hh" bodystart="23" bodyend="54"/>
    <listofallmembers>
      <member refid="a01367_1a8626c2445833aceb2e7a28c5dbe1d558" prot="private" virt="non-virtual"><scope>Ikarus::FEFactory</scope><name>basisHandler_</name></member>
      <member refid="a01367_1aacbb6c8ee45484144edb78306da79456" prot="public" virt="non-virtual"><scope>Ikarus::FEFactory</scope><name>FEFactory</name></member>
      <member refid="a01367_1aa324bf69fc6e9d878cdaf1b2a8667196" prot="public" virt="non-virtual"><scope>Ikarus::FEFactory</scope><name>operator()</name></member>
      <member refid="a01367_1ae4167551b40097429f804066c4973256" prot="public" virt="non-virtual"><scope>Ikarus::FEFactory</scope><name>Skills</name></member>
      <member refid="a01367_1a5fda97695c256ec7af993ca2e2134c12" prot="private" virt="non-virtual"><scope>Ikarus::FEFactory</scope><name>skills_</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
